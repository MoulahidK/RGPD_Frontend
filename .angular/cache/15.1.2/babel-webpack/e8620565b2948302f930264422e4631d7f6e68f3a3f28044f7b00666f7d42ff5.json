{"ast":null,"code":"import { Subject } from 'rxjs';\nimport { throttleTime, tap, distinctUntilChanged, filter } from 'rxjs/operators';\nimport { supportsPassiveEvents } from 'detect-passive-events';\nimport { Directive, ElementRef, Renderer2, HostBinding, ChangeDetectorRef, Component, ViewChild, HostListener, Input, EventEmitter, Output, ContentChild, forwardRef, NgZone, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** @enum {number} */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nconst _c0 = [\"tooltipTemplate\"];\nconst _c1 = [\"leftOuterSelectionBar\"];\nconst _c2 = [\"rightOuterSelectionBar\"];\nconst _c3 = [\"fullBar\"];\nconst _c4 = [\"selectionBar\"];\nconst _c5 = [\"minHandle\"];\nconst _c6 = [\"maxHandle\"];\nconst _c7 = [\"floorLabel\"];\nconst _c8 = [\"ceilLabel\"];\nconst _c9 = [\"minHandleLabel\"];\nconst _c10 = [\"maxHandleLabel\"];\nconst _c11 = [\"combinedLabel\"];\nconst _c12 = [\"ticksElement\"];\nfunction SliderComponent_span_28_ngx_slider_tooltip_wrapper_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"ngx-slider-tooltip-wrapper\", 31);\n  }\n  if (rf & 2) {\n    const t_r13 = ɵngcc0.ɵɵnextContext().$implicit;\n    const ctx_r14 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"template\", ctx_r14.tooltipTemplate)(\"tooltip\", t_r13.valueTooltip)(\"placement\", t_r13.valueTooltipPlacement)(\"content\", t_r13.value);\n  }\n}\nfunction SliderComponent_span_28_span_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"span\", 32);\n  }\n  if (rf & 2) {\n    const t_r13 = ɵngcc0.ɵɵnextContext().$implicit;\n    ɵngcc0.ɵɵproperty(\"innerHTML\", t_r13.legend, ɵngcc0.ɵɵsanitizeHtml);\n  }\n}\nconst _c13 = function (a0) {\n  return {\n    \"ngx-slider-selected\": a0\n  };\n};\nfunction SliderComponent_span_28_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 27);\n    ɵngcc0.ɵɵelement(1, \"ngx-slider-tooltip-wrapper\", 28);\n    ɵngcc0.ɵɵtemplate(2, SliderComponent_span_28_ngx_slider_tooltip_wrapper_2_Template, 1, 4, \"ngx-slider-tooltip-wrapper\", 29);\n    ɵngcc0.ɵɵtemplate(3, SliderComponent_span_28_span_3_Template, 1, 1, \"span\", 30);\n    ɵngcc0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const t_r13 = ctx.$implicit;\n    const ctx_r12 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction1(7, _c13, t_r13.selected))(\"ngStyle\", t_r13.style);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"template\", ctx_r12.tooltipTemplate)(\"tooltip\", t_r13.tooltip)(\"placement\", t_r13.tooltipPlacement);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", t_r13.value != null);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", t_r13.legend != null);\n  }\n}\nfunction TooltipWrapperComponent_ng_container_0_1_ng_template_0_Template(rf, ctx) {}\nfunction TooltipWrapperComponent_ng_container_0_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, TooltipWrapperComponent_ng_container_0_1_ng_template_0_Template, 0, 0, \"ng-template\");\n  }\n}\nconst _c14 = function (a0, a1, a2) {\n  return {\n    tooltip: a0,\n    placement: a1,\n    content: a2\n  };\n};\nfunction TooltipWrapperComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, TooltipWrapperComponent_ng_container_0_1_Template, 1, 0, null, 1);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.template)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction3(2, _c14, ctx_r0.tooltip, ctx_r0.placement, ctx_r0.content));\n  }\n}\nfunction TooltipWrapperComponent_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 2);\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵattribute(\"title\", ctx_r1.tooltip)(\"data-tooltip-placement\", ctx_r1.placement);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r1.content, \" \");\n  }\n}\nconst LabelType = {\n  /** Label above low pointer */\n  Low: 0,\n  /** Label above high pointer */\n  High: 1,\n  /** Label for minimum slider value */\n  Floor: 2,\n  /** Label for maximum slider value */\n  Ceil: 3,\n  /** Label below legend tick */\n  TickValue: 4\n};\nLabelType[LabelType.Low] = 'Low';\nLabelType[LabelType.High] = 'High';\nLabelType[LabelType.Floor] = 'Floor';\nLabelType[LabelType.Ceil] = 'Ceil';\nLabelType[LabelType.TickValue] = 'TickValue';\n/**\n * Slider options\n */\nclass Options {\n  constructor() {\n    /**\n     * Minimum value for a slider.\n     * Not applicable when using stepsArray.\n     */\n    this.floor = 0;\n    /**\n     * Maximum value for a slider.\n     * Not applicable when using stepsArray.\n     */\n    this.ceil = null;\n    /**\n     * Step between each value.\n     * Not applicable when using stepsArray.\n     */\n    this.step = 1;\n    /**\n     * The minimum range authorized on the slider.\n     * Applies to range slider only.\n     * When using stepsArray, expressed as index into stepsArray.\n     */\n    this.minRange = null;\n    /**\n     * The maximum range authorized on the slider.\n     * Applies to range slider only.\n     * When using stepsArray, expressed as index into stepsArray.\n     */\n    this.maxRange = null;\n    /**\n     * Set to true to have a push behavior. When the min handle goes above the max,\n     * the max is moved as well (and vice-versa). The range between min and max is\n     * defined by the step option (defaults to 1) and can also be overriden by\n     * the minRange option. Applies to range slider only.\n     */\n    this.pushRange = false;\n    /**\n     * The minimum value authorized on the slider.\n     * When using stepsArray, expressed as index into stepsArray.\n     */\n    this.minLimit = null;\n    /**\n     * The maximum value authorized on the slider.\n     * When using stepsArray, expressed as index into stepsArray.\n     */\n    this.maxLimit = null;\n    /**\n     * Custom translate function. Use this if you want to translate values displayed\n     * on the slider.\n     */\n    this.translate = null;\n    /**\n     * Custom function for combining overlapping labels in range slider.\n     * It takes the min and max values (already translated with translate fuction)\n     * and should return how these two values should be combined.\n     * If not provided, the default function will join the two values with\n     * ' - ' as separator.\n     */\n    this.combineLabels = null;\n    /**\n     * Use to display legend under ticks (thus, it needs to be used along with\n     * showTicks or showTicksValues). The function will be called with each tick\n     * value and returned content will be displayed under the tick as a legend.\n     * If the returned value is null, then no legend is displayed under\n     * the corresponding tick.You can also directly provide the legend values\n     * in the stepsArray option.\n     */\n    this.getLegend = null;\n    /**\n     * Use to display a custom legend of a stepItem from stepsArray.\n     * It will be the same as getLegend but for stepsArray.\n     */\n    this.getStepLegend = null;\n    /**\n     * If you want to display a slider with non linear/number steps.\n     * Just pass an array with each slider value and that's it; the floor, ceil and step settings\n     * of the slider will be computed automatically.\n     * By default, the value model and valueHigh model values will be the value of the selected item\n     * in the stepsArray.\n     * They can also be bound to the index of the selected item by setting the bindIndexForStepsArray\n     * option to true.\n     */\n    this.stepsArray = null;\n    /**\n     * Set to true to bind the index of the selected item to value model and valueHigh model.\n     */\n    this.bindIndexForStepsArray = false;\n    /**\n     * When set to true and using a range slider, the range can be dragged by the selection bar.\n     * Applies to range slider only.\n     */\n    this.draggableRange = false;\n    /**\n     * Same as draggableRange but the slider range can't be changed.\n     * Applies to range slider only.\n     */\n    this.draggableRangeOnly = false;\n    /**\n     * Set to true to always show the selection bar before the slider handle.\n     */\n    this.showSelectionBar = false;\n    /**\n     * Set to true to always show the selection bar after the slider handle.\n     */\n    this.showSelectionBarEnd = false;\n    /**\n     * Set a number to draw the selection bar between this value and the slider handle.\n     * When using stepsArray, expressed as index into stepsArray.\n     */\n    this.showSelectionBarFromValue = null;\n    /**\n     * Only for range slider. Set to true to visualize in different colour the areas\n     * on the left/right (top/bottom for vertical range slider) of selection bar between the handles.\n     */\n    this.showOuterSelectionBars = false;\n    /**\n     * Set to true to hide pointer labels\n     */\n    this.hidePointerLabels = false;\n    /**\n     * Set to true to hide min / max labels\n     */\n    this.hideLimitLabels = false;\n    /**\n     * Set to false to disable the auto-hiding behavior of the limit labels.\n     */\n    this.autoHideLimitLabels = true;\n    /**\n     * Set to true to make the slider read-only.\n     */\n    this.readOnly = false;\n    /**\n     * Set to true to disable the slider.\n     */\n    this.disabled = false;\n    /**\n     * Set to true to display a tick for each step of the slider.\n     */\n    this.showTicks = false;\n    /**\n     * Set to true to display a tick and the step value for each step of the slider..\n     */\n    this.showTicksValues = false;\n    /* The step between each tick to display. If not set, the step value is used.\n        Not used when ticksArray is specified. */\n    this.tickStep = null;\n    /* The step between displaying each tick step value.\n        If not set, then tickStep or step is used, depending on which one is set. */\n    this.tickValueStep = null;\n    /**\n     * Use to display ticks at specific positions.\n     * The array contains the index of the ticks that should be displayed.\n     * For example, [0, 1, 5] will display a tick for the first, second and sixth values.\n     */\n    this.ticksArray = null;\n    /**\n     * Used to display a tooltip when a tick is hovered.\n     * Set to a function that returns the tooltip content for a given value.\n     */\n    this.ticksTooltip = null;\n    /**\n     * Same as ticksTooltip but for ticks values.\n     */\n    this.ticksValuesTooltip = null;\n    /**\n     * Set to true to display the slider vertically.\n     * The slider will take the full height of its parent.\n     * Changing this value at runtime is not currently supported.\n     */\n    this.vertical = false;\n    /**\n     * Function that returns the current color of the selection bar.\n     * If your color won't change, don't use this option but set it through CSS.\n     * If the returned color depends on a model value (either value or valueHigh),\n     * you should use the argument passed to the function.\n     * Indeed, when the function is called, there is no certainty that the model\n     * has already been updated.\n     */\n    this.getSelectionBarColor = null;\n    /**\n     * Function that returns the color of a tick. showTicks must be enabled.\n     */\n    this.getTickColor = null;\n    /**\n     * Function that returns the current color of a pointer.\n     * If your color won't change, don't use this option but set it through CSS.\n     * If the returned color depends on a model value (either value or valueHigh),\n     * you should use the argument passed to the function.\n     * Indeed, when the function is called, there is no certainty that the model has already been updated.\n     * To handle range slider pointers independently, you should evaluate pointerType within the given\n     * function where \"min\" stands for value model and \"max\" for valueHigh model values.\n     */\n    this.getPointerColor = null;\n    /**\n     * Handles are focusable (on click or with tab) and can be modified using the following keyboard controls:\n     * Left/bottom arrows: -1\n     * Right/top arrows: +1\n     * Page-down: -10%\n     * Page-up: +10%\n     * Home: minimum value\n     * End: maximum value\n     */\n    this.keyboardSupport = true;\n    /**\n     * If you display the slider in an element that uses transform: scale(0.5), set the scale value to 2\n     * so that the slider is rendered properly and the events are handled correctly.\n     */\n    this.scale = 1;\n    /**\n     * If you display the slider in an element that uses transform: rotate(90deg), set the rotate value to 90\n     * so that the slider is rendered properly and the events are handled correctly. Value is in degrees.\n     */\n    this.rotate = 0;\n    /**\n     * Set to true to force the value(s) to be rounded to the step, even when modified from the outside.\n     * When set to false, if the model values are modified from outside the slider, they are not rounded\n     * and can be between two steps.\n     */\n    this.enforceStep = true;\n    /**\n     * Set to true to force the value(s) to be normalised to allowed range (floor to ceil), even when modified from the outside.\n     * When set to false, if the model values are modified from outside the slider, and they are outside allowed range,\n     * the slider may be rendered incorrectly. However, setting this to false may be useful if you want to perform custom normalisation.\n     */\n    this.enforceRange = true;\n    /**\n     * Set to true to force the value(s) to be rounded to the nearest step value, even when modified from the outside.\n     * When set to false, if the model values are modified from outside the slider, and they are outside allowed range,\n     * the slider may be rendered incorrectly. However, setting this to false may be useful if you want to perform custom normalisation.\n     */\n    this.enforceStepsArray = true;\n    /**\n     * Set to true to prevent to user from switching the min and max handles. Applies to range slider only.\n     */\n    this.noSwitching = false;\n    /**\n     * Set to true to only bind events on slider handles.\n     */\n    this.onlyBindHandles = false;\n    /**\n     * Set to true to show graphs right to left.\n     * If vertical is true it will be from top to bottom and left / right arrow functions reversed.\n     */\n    this.rightToLeft = false;\n    /**\n     * Set to true to reverse keyboard navigation:\n     * Right/top arrows: -1\n     * Left/bottom arrows: +1\n     * Page-up: -10%\n     * Page-down: +10%\n     * End: minimum value\n     * Home: maximum value\n     */\n    this.reversedControls = false;\n    /**\n     * Set to true to keep the slider labels inside the slider bounds.\n     */\n    this.boundPointerLabels = true;\n    /**\n     * Set to true to use a logarithmic scale to display the slider.\n     */\n    this.logScale = false;\n    /**\n     * Function that returns the position on the slider for a given value.\n     * The position must be a percentage between 0 and 1.\n     * The function should be monotonically increasing or decreasing; otherwise the slider may behave incorrectly.\n     */\n    this.customValueToPosition = null;\n    /**\n     * Function that returns the value for a given position on the slider.\n     * The position is a percentage between 0 and 1.\n     * The function should be monotonically increasing or decreasing; otherwise the slider may behave incorrectly.\n     */\n    this.customPositionToValue = null;\n    /**\n     * Precision limit for calculated values.\n     * Values used in calculations will be rounded to this number of significant digits\n     * to prevent accumulating small floating-point errors.\n     */\n    this.precisionLimit = 12;\n    /**\n     * Use to display the selection bar as a gradient.\n     * The given object must contain from and to properties which are colors.\n     */\n    this.selectionBarGradient = null;\n    /**\n     * Use to add a label directly to the slider for accessibility. Adds the aria-label attribute.\n     */\n    this.ariaLabel = 'ngx-slider';\n    /**\n     * Use instead of ariaLabel to reference the id of an element which will be used to label the slider.\n     * Adds the aria-labelledby attribute.\n     */\n    this.ariaLabelledBy = null;\n    /**\n     * Use to add a label directly to the slider range for accessibility. Adds the aria-label attribute.\n     */\n    this.ariaLabelHigh = 'ngx-slider-max';\n    /**\n     * Use instead of ariaLabelHigh to reference the id of an element which will be used to label the slider range.\n     * Adds the aria-labelledby attribute.\n     */\n    this.ariaLabelledByHigh = null;\n    /**\n     * Use to increase rendering performance. If the value is not provided, the slider calculates the with/height of the handle\n     */\n    this.handleDimension = null;\n    /**\n     * Use to increase rendering performance. If the value is not provided, the slider calculates the with/height of the bar\n     */\n    this.barDimension = null;\n    /**\n     * Enable/disable CSS animations\n     */\n    this.animate = true;\n    /**\n     * Enable/disable CSS animations while moving the slider\n     */\n    this.animateOnMove = false;\n  }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** @enum {number} */\nconst PointerType = {\n  /** Low pointer */\n  Min: 0,\n  /** High pointer */\n  Max: 1\n};\nPointerType[PointerType.Min] = 'Min';\nPointerType[PointerType.Max] = 'Max';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nclass ChangeContext {}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n *  Collection of functions to handle conversions/lookups of values\n */\nclass ValueHelper {\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n  static isNullOrUndefined(value) {\n    return value === undefined || value === null;\n  }\n  /**\n   * @param {?} array1\n   * @param {?} array2\n   * @return {?}\n   */\n  static areArraysEqual(array1, array2) {\n    if (array1.length !== array2.length) {\n      return false;\n    }\n    for (let i = 0; i < array1.length; ++i) {\n      if (array1[i] !== array2[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n  /**\n   * @param {?} val\n   * @param {?} minVal\n   * @param {?} maxVal\n   * @return {?}\n   */\n  static linearValueToPosition(val, minVal, maxVal) {\n    /** @type {?} */\n    const range = maxVal - minVal;\n    return (val - minVal) / range;\n  }\n  /**\n   * @param {?} val\n   * @param {?} minVal\n   * @param {?} maxVal\n   * @return {?}\n   */\n  static logValueToPosition(val, minVal, maxVal) {\n    val = Math.log(val);\n    minVal = Math.log(minVal);\n    maxVal = Math.log(maxVal);\n    /** @type {?} */\n    const range = maxVal - minVal;\n    return (val - minVal) / range;\n  }\n  /**\n   * @param {?} percent\n   * @param {?} minVal\n   * @param {?} maxVal\n   * @return {?}\n   */\n  static linearPositionToValue(percent, minVal, maxVal) {\n    return percent * (maxVal - minVal) + minVal;\n  }\n  /**\n   * @param {?} percent\n   * @param {?} minVal\n   * @param {?} maxVal\n   * @return {?}\n   */\n  static logPositionToValue(percent, minVal, maxVal) {\n    minVal = Math.log(minVal);\n    maxVal = Math.log(maxVal);\n    /** @type {?} */\n    const value = percent * (maxVal - minVal) + minVal;\n    return Math.exp(value);\n  }\n  /**\n   * @param {?} modelValue\n   * @param {?} stepsArray\n   * @return {?}\n   */\n  static findStepIndex(modelValue, stepsArray) {\n    /** @type {?} */\n    const differences = stepsArray.map(step => Math.abs(modelValue - step.value));\n    /** @type {?} */\n    let minDifferenceIndex = 0;\n    for (let index = 0; index < stepsArray.length; index++) {\n      if (differences[index] !== differences[minDifferenceIndex] && differences[index] < differences[minDifferenceIndex]) {\n        minDifferenceIndex = index;\n      }\n    }\n    return minDifferenceIndex;\n  }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * Helper with compatibility functions to support different browsers\n */\nclass CompatibilityHelper {\n  /**\n   * Workaround for TouchEvent constructor sadly not being available on all browsers (e.g. Firefox, Safari)\n   * @param {?} event\n   * @return {?}\n   */\n  static isTouchEvent(event) {\n    if ( /** @type {?} */window.TouchEvent !== undefined) {\n      return event instanceof TouchEvent;\n    }\n    return event.touches !== undefined;\n  }\n  /**\n   * Detect presence of ResizeObserver API\n   * @return {?}\n   */\n  static isResizeObserverAvailable() {\n    return (/** @type {?} */window.ResizeObserver !== undefined\n    );\n  }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * Helper with mathematical functions\n */\nclass MathHelper {\n  /**\n   * @param {?} value\n   * @param {?} precisionLimit\n   * @return {?}\n   */\n  static roundToPrecisionLimit(value, precisionLimit) {\n    return +value.toPrecision(precisionLimit);\n  }\n  /**\n   * @param {?} value\n   * @param {?} modulo\n   * @param {?} precisionLimit\n   * @return {?}\n   */\n  static isModuloWithinPrecisionLimit(value, modulo, precisionLimit) {\n    /** @type {?} */\n    const limit = Math.pow(10, -precisionLimit);\n    return Math.abs(value % modulo) <= limit || Math.abs(Math.abs(value % modulo) - modulo) <= limit;\n  }\n  /**\n   * @param {?} value\n   * @param {?} floor\n   * @param {?} ceil\n   * @return {?}\n   */\n  static clampToRange(value, floor, ceil) {\n    return Math.min(Math.max(value, floor), ceil);\n  }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nclass EventListener {\n  constructor() {\n    this.eventName = null;\n    this.events = null;\n    this.eventsSubscription = null;\n    this.teardownCallback = null;\n  }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * Helper class to attach event listeners to DOM elements with debounce support using rxjs\n */\nclass EventListenerHelper {\n  /**\n   * @param {?} renderer\n   */\n  constructor(renderer) {\n    this.renderer = renderer;\n  }\n  /**\n   * @param {?} nativeElement\n   * @param {?} eventName\n   * @param {?} callback\n   * @param {?=} throttleInterval\n   * @return {?}\n   */\n  attachPassiveEventListener(nativeElement, eventName, callback, throttleInterval) {\n    // Only use passive event listeners if the browser supports it\n    if (supportsPassiveEvents !== true) {\n      return this.attachEventListener(nativeElement, eventName, callback, throttleInterval);\n    }\n    /** @type {?} */\n    const listener = new EventListener();\n    listener.eventName = eventName;\n    listener.events = new Subject();\n    /** @type {?} */\n    const observerCallback = event => {\n      listener.events.next(event);\n    };\n    nativeElement.addEventListener(eventName, observerCallback, {\n      passive: true,\n      capture: false\n    });\n    listener.teardownCallback = () => {\n      nativeElement.removeEventListener(eventName, observerCallback, {\n        passive: true,\n        capture: false\n      });\n    };\n    listener.eventsSubscription = listener.events.pipe(!ValueHelper.isNullOrUndefined(throttleInterval) ? throttleTime(throttleInterval, undefined, {\n      leading: true,\n      trailing: true\n    }) : tap(() => {}) // no-op\n    ).subscribe(event => {\n      callback(event);\n    });\n    return listener;\n  }\n  /**\n   * @param {?} eventListener\n   * @return {?}\n   */\n  detachEventListener(eventListener) {\n    if (!ValueHelper.isNullOrUndefined(eventListener.eventsSubscription)) {\n      eventListener.eventsSubscription.unsubscribe();\n      eventListener.eventsSubscription = null;\n    }\n    if (!ValueHelper.isNullOrUndefined(eventListener.events)) {\n      eventListener.events.complete();\n      eventListener.events = null;\n    }\n    if (!ValueHelper.isNullOrUndefined(eventListener.teardownCallback)) {\n      eventListener.teardownCallback();\n      eventListener.teardownCallback = null;\n    }\n  }\n  /**\n   * @param {?} nativeElement\n   * @param {?} eventName\n   * @param {?} callback\n   * @param {?=} throttleInterval\n   * @return {?}\n   */\n  attachEventListener(nativeElement, eventName, callback, throttleInterval) {\n    /** @type {?} */\n    const listener = new EventListener();\n    listener.eventName = eventName;\n    listener.events = new Subject();\n    /** @type {?} */\n    const observerCallback = event => {\n      listener.events.next(event);\n    };\n    listener.teardownCallback = this.renderer.listen(nativeElement, eventName, observerCallback);\n    listener.eventsSubscription = listener.events.pipe(!ValueHelper.isNullOrUndefined(throttleInterval) ? throttleTime(throttleInterval, undefined, {\n      leading: true,\n      trailing: true\n    }) : tap(() => {}) // no-op\n    ).subscribe(event => {\n      callback(event);\n    });\n    return listener;\n  }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nclass SliderElementDirective {\n  /**\n   * @param {?} elemRef\n   * @param {?} renderer\n   * @param {?} changeDetectionRef\n   */\n  constructor(elemRef, renderer, changeDetectionRef) {\n    this.elemRef = elemRef;\n    this.renderer = renderer;\n    this.changeDetectionRef = changeDetectionRef;\n    this._position = 0;\n    this._dimension = 0;\n    this._alwaysHide = false;\n    this._vertical = false;\n    this._scale = 1;\n    this._rotate = 0;\n    this.opacity = 1;\n    this.visibility = 'visible';\n    this.left = '';\n    this.bottom = '';\n    this.height = '';\n    this.width = '';\n    this.transform = '';\n    this.eventListeners = [];\n    this.eventListenerHelper = new EventListenerHelper(this.renderer);\n  }\n  /**\n   * @return {?}\n   */\n  get position() {\n    return this._position;\n  }\n  /**\n   * @return {?}\n   */\n  get dimension() {\n    return this._dimension;\n  }\n  /**\n   * @return {?}\n   */\n  get alwaysHide() {\n    return this._alwaysHide;\n  }\n  /**\n   * @return {?}\n   */\n  get vertical() {\n    return this._vertical;\n  }\n  /**\n   * @return {?}\n   */\n  get scale() {\n    return this._scale;\n  }\n  /**\n   * @return {?}\n   */\n  get rotate() {\n    return this._rotate;\n  }\n  /**\n   * @param {?} hide\n   * @return {?}\n   */\n  setAlwaysHide(hide) {\n    this._alwaysHide = hide;\n    if (hide) {\n      this.visibility = 'hidden';\n    } else {\n      this.visibility = 'visible';\n    }\n  }\n  /**\n   * @return {?}\n   */\n  hide() {\n    this.opacity = 0;\n  }\n  /**\n   * @return {?}\n   */\n  show() {\n    if (this.alwaysHide) {\n      return;\n    }\n    this.opacity = 1;\n  }\n  /**\n   * @return {?}\n   */\n  isVisible() {\n    if (this.alwaysHide) {\n      return false;\n    }\n    return this.opacity !== 0;\n  }\n  /**\n   * @param {?} vertical\n   * @return {?}\n   */\n  setVertical(vertical) {\n    this._vertical = vertical;\n    if (this._vertical) {\n      this.left = '';\n      this.width = '';\n    } else {\n      this.bottom = '';\n      this.height = '';\n    }\n  }\n  /**\n   * @param {?} scale\n   * @return {?}\n   */\n  setScale(scale) {\n    this._scale = scale;\n  }\n  /**\n   * @param {?} rotate\n   * @return {?}\n   */\n  setRotate(rotate) {\n    this._rotate = rotate;\n    this.transform = 'rotate(' + rotate + 'deg)';\n  }\n  /**\n   * @return {?}\n   */\n  getRotate() {\n    return this._rotate;\n  }\n  /**\n   * @param {?} pos\n   * @return {?}\n   */\n  setPosition(pos) {\n    if (this._position !== pos && !this.isRefDestroyed()) {\n      this.changeDetectionRef.markForCheck();\n    }\n    this._position = pos;\n    if (this._vertical) {\n      this.bottom = Math.round(pos) + 'px';\n    } else {\n      this.left = Math.round(pos) + 'px';\n    }\n  }\n  /**\n   * @return {?}\n   */\n  calculateDimension() {\n    /** @type {?} */\n    const val = this.getBoundingClientRect();\n    if (this.vertical) {\n      this._dimension = (val.bottom - val.top) * this.scale;\n    } else {\n      this._dimension = (val.right - val.left) * this.scale;\n    }\n  }\n  /**\n   * @param {?} dim\n   * @return {?}\n   */\n  setDimension(dim) {\n    if (this._dimension !== dim && !this.isRefDestroyed()) {\n      this.changeDetectionRef.markForCheck();\n    }\n    this._dimension = dim;\n    if (this._vertical) {\n      this.height = Math.round(dim) + 'px';\n    } else {\n      this.width = Math.round(dim) + 'px';\n    }\n  }\n  /**\n   * @return {?}\n   */\n  getBoundingClientRect() {\n    return this.elemRef.nativeElement.getBoundingClientRect();\n  }\n  /**\n   * @param {?} eventName\n   * @param {?} callback\n   * @param {?=} debounceInterval\n   * @return {?}\n   */\n  on(eventName, callback, debounceInterval) {\n    /** @type {?} */\n    const listener = this.eventListenerHelper.attachEventListener(this.elemRef.nativeElement, eventName, callback, debounceInterval);\n    this.eventListeners.push(listener);\n  }\n  /**\n   * @param {?} eventName\n   * @param {?} callback\n   * @param {?=} debounceInterval\n   * @return {?}\n   */\n  onPassive(eventName, callback, debounceInterval) {\n    /** @type {?} */\n    const listener = this.eventListenerHelper.attachPassiveEventListener(this.elemRef.nativeElement, eventName, callback, debounceInterval);\n    this.eventListeners.push(listener);\n  }\n  /**\n   * @param {?=} eventName\n   * @return {?}\n   */\n  off(eventName) {\n    /** @type {?} */\n    let listenersToKeep;\n    /** @type {?} */\n    let listenersToRemove;\n    if (!ValueHelper.isNullOrUndefined(eventName)) {\n      listenersToKeep = this.eventListeners.filter(event => event.eventName !== eventName);\n      listenersToRemove = this.eventListeners.filter(event => event.eventName === eventName);\n    } else {\n      listenersToKeep = [];\n      listenersToRemove = this.eventListeners;\n    }\n    for (const listener of listenersToRemove) {\n      this.eventListenerHelper.detachEventListener(listener);\n    }\n    this.eventListeners = listenersToKeep;\n  }\n  /**\n   * @return {?}\n   */\n  isRefDestroyed() {\n    return ValueHelper.isNullOrUndefined(this.changeDetectionRef) || this.changeDetectionRef['destroyed'];\n  }\n}\nSliderElementDirective.ɵfac = function SliderElementDirective_Factory(t) {\n  return new (t || SliderElementDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef));\n};\nSliderElementDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: SliderElementDirective,\n  selectors: [[\"\", \"ngxSliderElement\", \"\"]],\n  hostVars: 14,\n  hostBindings: function SliderElementDirective_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵstyleProp(\"opacity\", ctx.opacity)(\"visibility\", ctx.visibility)(\"left\", ctx.left)(\"bottom\", ctx.bottom)(\"height\", ctx.height)(\"width\", ctx.width)(\"transform\", ctx.transform);\n    }\n  }\n});\n/** @nocollapse */\nSliderElementDirective.ctorParameters = () => [{\n  type: ElementRef\n}, {\n  type: Renderer2\n}, {\n  type: ChangeDetectorRef\n}];\nSliderElementDirective.propDecorators = {\n  opacity: [{\n    type: HostBinding,\n    args: ['style.opacity']\n  }],\n  visibility: [{\n    type: HostBinding,\n    args: ['style.visibility']\n  }],\n  left: [{\n    type: HostBinding,\n    args: ['style.left']\n  }],\n  bottom: [{\n    type: HostBinding,\n    args: ['style.bottom']\n  }],\n  height: [{\n    type: HostBinding,\n    args: ['style.height']\n  }],\n  width: [{\n    type: HostBinding,\n    args: ['style.width']\n  }],\n  transform: [{\n    type: HostBinding,\n    args: ['style.transform']\n  }]\n};\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SliderElementDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[ngxSliderElement]'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.Renderer2\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }];\n  }, {\n    opacity: [{\n      type: HostBinding,\n      args: ['style.opacity']\n    }],\n    visibility: [{\n      type: HostBinding,\n      args: ['style.visibility']\n    }],\n    left: [{\n      type: HostBinding,\n      args: ['style.left']\n    }],\n    bottom: [{\n      type: HostBinding,\n      args: ['style.bottom']\n    }],\n    height: [{\n      type: HostBinding,\n      args: ['style.height']\n    }],\n    width: [{\n      type: HostBinding,\n      args: ['style.width']\n    }],\n    transform: [{\n      type: HostBinding,\n      args: ['style.transform']\n    }]\n  });\n})();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nclass SliderHandleDirective extends SliderElementDirective {\n  /**\n   * @param {?} elemRef\n   * @param {?} renderer\n   * @param {?} changeDetectionRef\n   */\n  constructor(elemRef, renderer, changeDetectionRef) {\n    super(elemRef, renderer, changeDetectionRef);\n    this.active = false;\n    this.role = '';\n    this.tabindex = '';\n    this.ariaOrientation = '';\n    this.ariaLabel = '';\n    this.ariaLabelledBy = '';\n    this.ariaValueNow = '';\n    this.ariaValueText = '';\n    this.ariaValueMin = '';\n    this.ariaValueMax = '';\n  }\n  /**\n   * @return {?}\n   */\n  focus() {\n    this.elemRef.nativeElement.focus();\n  }\n}\nSliderHandleDirective.ɵfac = function SliderHandleDirective_Factory(t) {\n  return new (t || SliderHandleDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef));\n};\nSliderHandleDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: SliderHandleDirective,\n  selectors: [[\"\", \"ngxSliderHandle\", \"\"]],\n  hostVars: 11,\n  hostBindings: function SliderHandleDirective_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵattribute(\"role\", ctx.role)(\"tabindex\", ctx.tabindex)(\"aria-orientation\", ctx.ariaOrientation)(\"aria-label\", ctx.ariaLabel)(\"aria-labelledby\", ctx.ariaLabelledBy)(\"aria-valuenow\", ctx.ariaValueNow)(\"aria-valuetext\", ctx.ariaValueText)(\"aria-valuemin\", ctx.ariaValueMin)(\"aria-valuemax\", ctx.ariaValueMax);\n      ɵngcc0.ɵɵclassProp(\"ngx-slider-active\", ctx.active);\n    }\n  },\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n});\n/** @nocollapse */\nSliderHandleDirective.ctorParameters = () => [{\n  type: ElementRef\n}, {\n  type: Renderer2\n}, {\n  type: ChangeDetectorRef\n}];\nSliderHandleDirective.propDecorators = {\n  active: [{\n    type: HostBinding,\n    args: ['class.ngx-slider-active']\n  }],\n  role: [{\n    type: HostBinding,\n    args: ['attr.role']\n  }],\n  tabindex: [{\n    type: HostBinding,\n    args: ['attr.tabindex']\n  }],\n  ariaOrientation: [{\n    type: HostBinding,\n    args: ['attr.aria-orientation']\n  }],\n  ariaLabel: [{\n    type: HostBinding,\n    args: ['attr.aria-label']\n  }],\n  ariaLabelledBy: [{\n    type: HostBinding,\n    args: ['attr.aria-labelledby']\n  }],\n  ariaValueNow: [{\n    type: HostBinding,\n    args: ['attr.aria-valuenow']\n  }],\n  ariaValueText: [{\n    type: HostBinding,\n    args: ['attr.aria-valuetext']\n  }],\n  ariaValueMin: [{\n    type: HostBinding,\n    args: ['attr.aria-valuemin']\n  }],\n  ariaValueMax: [{\n    type: HostBinding,\n    args: ['attr.aria-valuemax']\n  }]\n};\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SliderHandleDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[ngxSliderHandle]'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.Renderer2\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }];\n  }, {\n    active: [{\n      type: HostBinding,\n      args: ['class.ngx-slider-active']\n    }],\n    role: [{\n      type: HostBinding,\n      args: ['attr.role']\n    }],\n    tabindex: [{\n      type: HostBinding,\n      args: ['attr.tabindex']\n    }],\n    ariaOrientation: [{\n      type: HostBinding,\n      args: ['attr.aria-orientation']\n    }],\n    ariaLabel: [{\n      type: HostBinding,\n      args: ['attr.aria-label']\n    }],\n    ariaLabelledBy: [{\n      type: HostBinding,\n      args: ['attr.aria-labelledby']\n    }],\n    ariaValueNow: [{\n      type: HostBinding,\n      args: ['attr.aria-valuenow']\n    }],\n    ariaValueText: [{\n      type: HostBinding,\n      args: ['attr.aria-valuetext']\n    }],\n    ariaValueMin: [{\n      type: HostBinding,\n      args: ['attr.aria-valuemin']\n    }],\n    ariaValueMax: [{\n      type: HostBinding,\n      args: ['attr.aria-valuemax']\n    }]\n  });\n})();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nclass SliderLabelDirective extends SliderElementDirective {\n  /**\n   * @param {?} elemRef\n   * @param {?} renderer\n   * @param {?} changeDetectionRef\n   */\n  constructor(elemRef, renderer, changeDetectionRef) {\n    super(elemRef, renderer, changeDetectionRef);\n    this._value = null;\n  }\n  /**\n   * @return {?}\n   */\n  get value() {\n    return this._value;\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n  setValue(value) {\n    /** @type {?} */\n    let recalculateDimension = false;\n    if (!this.alwaysHide && (ValueHelper.isNullOrUndefined(this.value) || this.value.length !== value.length || this.value.length > 0 && this.dimension === 0)) {\n      recalculateDimension = true;\n    }\n    this._value = value;\n    this.elemRef.nativeElement.innerHTML = value;\n    // Update dimension only when length of the label have changed\n    if (recalculateDimension) {\n      this.calculateDimension();\n    }\n  }\n}\nSliderLabelDirective.ɵfac = function SliderLabelDirective_Factory(t) {\n  return new (t || SliderLabelDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef));\n};\nSliderLabelDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: SliderLabelDirective,\n  selectors: [[\"\", \"ngxSliderLabel\", \"\"]],\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n});\n/** @nocollapse */\nSliderLabelDirective.ctorParameters = () => [{\n  type: ElementRef\n}, {\n  type: Renderer2\n}, {\n  type: ChangeDetectorRef\n}];\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SliderLabelDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[ngxSliderLabel]'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.Renderer2\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }];\n  }, null);\n})();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nclass Tick {\n  constructor() {\n    this.selected = false;\n    this.style = {};\n    this.tooltip = null;\n    this.tooltipPlacement = null;\n    this.value = null;\n    this.valueTooltip = null;\n    this.valueTooltipPlacement = null;\n    this.legend = null;\n  }\n}\nclass Dragging {\n  constructor() {\n    this.active = false;\n    this.value = 0;\n    this.difference = 0;\n    this.position = 0;\n    this.lowLimit = 0;\n    this.highLimit = 0;\n  }\n}\nclass ModelValues {\n  /**\n   * @param {?=} x\n   * @param {?=} y\n   * @return {?}\n   */\n  static compare(x, y) {\n    if (ValueHelper.isNullOrUndefined(x) && ValueHelper.isNullOrUndefined(y)) {\n      return false;\n    }\n    if (ValueHelper.isNullOrUndefined(x) !== ValueHelper.isNullOrUndefined(y)) {\n      return false;\n    }\n    return x.value === y.value && x.highValue === y.highValue;\n  }\n}\nclass ModelChange extends ModelValues {\n  /**\n   * @param {?=} x\n   * @param {?=} y\n   * @return {?}\n   */\n  static compare(x, y) {\n    if (ValueHelper.isNullOrUndefined(x) && ValueHelper.isNullOrUndefined(y)) {\n      return false;\n    }\n    if (ValueHelper.isNullOrUndefined(x) !== ValueHelper.isNullOrUndefined(y)) {\n      return false;\n    }\n    return x.value === y.value && x.highValue === y.highValue && x.forceChange === y.forceChange;\n  }\n}\n/** @type {?} */\nconst NGX_SLIDER_CONTROL_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  /* tslint:disable-next-line: no-use-before-declare */\n  useExisting: forwardRef(() => SliderComponent),\n  multi: true\n};\nclass SliderComponent {\n  /**\n   * @param {?} renderer\n   * @param {?} elementRef\n   * @param {?} changeDetectionRef\n   * @param {?} zone\n   */\n  constructor(renderer, elementRef, changeDetectionRef, zone) {\n    this.renderer = renderer;\n    this.elementRef = elementRef;\n    this.changeDetectionRef = changeDetectionRef;\n    this.zone = zone;\n    // Model for low value of slider. For simple slider, this is the only input. For range slider, this is the low value.\n    this.value = null;\n    // Output for low value slider to support two-way bindings\n    this.valueChange = new EventEmitter();\n    // Model for high value of slider. Not used in simple slider. For range slider, this is the high value.\n    this.highValue = null;\n    // Output for high value slider to support two-way bindings\n    this.highValueChange = new EventEmitter();\n    // An object with all the other options of the slider.\n    // Each option can be updated at runtime and the slider will automatically be re-rendered.\n    this.options = new Options();\n    // Event emitted when user starts interaction with the slider\n    this.userChangeStart = new EventEmitter();\n    // Event emitted on each change coming from user interaction\n    this.userChange = new EventEmitter();\n    // Event emitted when user finishes interaction with the slider\n    this.userChangeEnd = new EventEmitter();\n    this.initHasRun = false;\n    this.inputModelChangeSubject = new Subject();\n    this.inputModelChangeSubscription = null;\n    this.outputModelChangeSubject = new Subject();\n    this.outputModelChangeSubscription = null;\n    this.viewLowValue = null;\n    this.viewHighValue = null;\n    this.viewOptions = new Options();\n    this.handleHalfDimension = 0;\n    this.maxHandlePosition = 0;\n    this.currentTrackingPointer = null;\n    this.currentFocusPointer = null;\n    this.firstKeyDown = false;\n    this.touchId = null;\n    this.dragging = new Dragging();\n    // Host element class bindings\n    this.sliderElementVerticalClass = false;\n    this.sliderElementAnimateClass = false;\n    this.sliderElementWithLegendClass = false;\n    this.sliderElementDisabledAttr = null;\n    this.sliderElementAriaLabel = 'ngx-slider';\n    this.barStyle = {};\n    this.minPointerStyle = {};\n    this.maxPointerStyle = {};\n    this.fullBarTransparentClass = false;\n    this.selectionBarDraggableClass = false;\n    this.ticksUnderValuesClass = false;\n    this.intermediateTicks = false;\n    this.ticks = [];\n    this.eventListenerHelper = null;\n    this.onMoveEventListener = null;\n    this.onEndEventListener = null;\n    this.moving = false;\n    this.resizeObserver = null;\n    this.onTouchedCallback = null;\n    this.onChangeCallback = null;\n    this.eventListenerHelper = new EventListenerHelper(this.renderer);\n  }\n  /**\n   * @param {?} manualRefresh\n   * @return {?}\n   */\n  set manualRefresh(manualRefresh) {\n    this.unsubscribeManualRefresh();\n    this.manualRefreshSubscription = manualRefresh.subscribe(() => {\n      setTimeout(() => this.calculateViewDimensionsAndDetectChanges());\n    });\n  }\n  /**\n   * @param {?} triggerFocus\n   * @return {?}\n   */\n  set triggerFocus(triggerFocus) {\n    this.unsubscribeTriggerFocus();\n    this.triggerFocusSubscription = triggerFocus.subscribe(pointerType => {\n      this.focusPointer(pointerType);\n    });\n  }\n  /**\n   * @return {?}\n   */\n  get range() {\n    return !ValueHelper.isNullOrUndefined(this.value) && !ValueHelper.isNullOrUndefined(this.highValue);\n  }\n  /**\n   * @return {?}\n   */\n  get showTicks() {\n    return this.viewOptions.showTicks;\n  }\n  /**\n   * @return {?}\n   */\n  ngOnInit() {\n    this.viewOptions = new Options();\n    Object.assign(this.viewOptions, this.options);\n    // We need to run these two things first, before the rest of the init in ngAfterViewInit(),\n    // because these two settings are set through @HostBinding and Angular change detection\n    // mechanism doesn't like them changing in ngAfterViewInit()\n    this.updateDisabledState();\n    this.updateVerticalState();\n    this.updateAriaLabel();\n  }\n  /**\n   * @return {?}\n   */\n  ngAfterViewInit() {\n    this.applyOptions();\n    this.subscribeInputModelChangeSubject();\n    this.subscribeOutputModelChangeSubject();\n    // Once we apply options, we need to normalise model values for the first time\n    this.renormaliseModelValues();\n    this.viewLowValue = this.modelValueToViewValue(this.value);\n    if (this.range) {\n      this.viewHighValue = this.modelValueToViewValue(this.highValue);\n    } else {\n      this.viewHighValue = null;\n    }\n    this.updateVerticalState(); // need to run this again to cover changes to slider elements\n    this.manageElementsStyle();\n    this.updateDisabledState();\n    this.calculateViewDimensions();\n    this.addAccessibility();\n    this.updateCeilLabel();\n    this.updateFloorLabel();\n    this.initHandles();\n    this.manageEventsBindings();\n    this.updateAriaLabel();\n    this.subscribeResizeObserver();\n    this.initHasRun = true;\n    // Run change detection manually to resolve some issues when init procedure changes values used in the view\n    if (!this.isRefDestroyed()) {\n      this.changeDetectionRef.detectChanges();\n    }\n  }\n  /**\n   * @param {?} changes\n   * @return {?}\n   */\n  ngOnChanges(changes) {\n    // Always apply options first\n    if (!ValueHelper.isNullOrUndefined(changes[\"options\"]) && JSON.stringify(changes[\"options\"].previousValue) !== JSON.stringify(changes[\"options\"].currentValue)) {\n      this.onChangeOptions();\n    }\n    // Then value changes\n    if (!ValueHelper.isNullOrUndefined(changes[\"value\"]) || !ValueHelper.isNullOrUndefined(changes[\"highValue\"])) {\n      this.inputModelChangeSubject.next({\n        value: this.value,\n        highValue: this.highValue,\n        forceChange: false,\n        internalChange: false\n      });\n    }\n  }\n  /**\n   * @return {?}\n   */\n  ngOnDestroy() {\n    this.unbindEvents();\n    this.unsubscribeResizeObserver();\n    this.unsubscribeInputModelChangeSubject();\n    this.unsubscribeOutputModelChangeSubject();\n    this.unsubscribeManualRefresh();\n    this.unsubscribeTriggerFocus();\n  }\n  /**\n   * @param {?} obj\n   * @return {?}\n   */\n  writeValue(obj) {\n    if (obj instanceof Array) {\n      this.value = obj[0];\n      this.highValue = obj[1];\n    } else {\n      this.value = obj;\n    }\n    // ngOnChanges() is not called in this instance, so we need to communicate the change manually\n    this.inputModelChangeSubject.next({\n      value: this.value,\n      highValue: this.highValue,\n      forceChange: false,\n      internalChange: false\n    });\n  }\n  /**\n   * @param {?} onChangeCallback\n   * @return {?}\n   */\n  registerOnChange(onChangeCallback) {\n    this.onChangeCallback = onChangeCallback;\n  }\n  /**\n   * @param {?} onTouchedCallback\n   * @return {?}\n   */\n  registerOnTouched(onTouchedCallback) {\n    this.onTouchedCallback = onTouchedCallback;\n  }\n  /**\n   * @param {?} isDisabled\n   * @return {?}\n   */\n  setDisabledState(isDisabled) {\n    this.viewOptions.disabled = isDisabled;\n    this.updateDisabledState();\n  }\n  /**\n   * @param {?} ariaLabel\n   * @return {?}\n   */\n  setAriaLabel(ariaLabel) {\n    this.viewOptions.ariaLabel = ariaLabel;\n    this.updateAriaLabel();\n  }\n  /**\n   * @param {?} event\n   * @return {?}\n   */\n  onResize(event) {\n    this.calculateViewDimensionsAndDetectChanges();\n  }\n  /**\n   * @return {?}\n   */\n  subscribeInputModelChangeSubject() {\n    this.inputModelChangeSubscription = this.inputModelChangeSubject.pipe(distinctUntilChanged(ModelChange.compare),\n    // Hack to reset the status of the distinctUntilChanged() - if a \"fake\" event comes through with forceChange=true,\n    // we forcefully by-pass distinctUntilChanged(), but otherwise drop the event\n    filter(modelChange => !modelChange.forceChange && !modelChange.internalChange)).subscribe(modelChange => this.applyInputModelChange(modelChange));\n  }\n  /**\n   * @return {?}\n   */\n  subscribeOutputModelChangeSubject() {\n    this.outputModelChangeSubscription = this.outputModelChangeSubject.pipe(distinctUntilChanged(ModelChange.compare)).subscribe(modelChange => this.publishOutputModelChange(modelChange));\n  }\n  /**\n   * @return {?}\n   */\n  subscribeResizeObserver() {\n    if (CompatibilityHelper.isResizeObserverAvailable()) {\n      this.resizeObserver = new ResizeObserver(() => this.calculateViewDimensionsAndDetectChanges());\n      this.resizeObserver.observe(this.elementRef.nativeElement);\n    }\n  }\n  /**\n   * @return {?}\n   */\n  unsubscribeResizeObserver() {\n    if (CompatibilityHelper.isResizeObserverAvailable() && this.resizeObserver !== null) {\n      this.resizeObserver.disconnect();\n      this.resizeObserver = null;\n    }\n  }\n  /**\n   * @return {?}\n   */\n  unsubscribeOnMove() {\n    if (!ValueHelper.isNullOrUndefined(this.onMoveEventListener)) {\n      this.eventListenerHelper.detachEventListener(this.onMoveEventListener);\n      this.onMoveEventListener = null;\n    }\n  }\n  /**\n   * @return {?}\n   */\n  unsubscribeOnEnd() {\n    if (!ValueHelper.isNullOrUndefined(this.onEndEventListener)) {\n      this.eventListenerHelper.detachEventListener(this.onEndEventListener);\n      this.onEndEventListener = null;\n    }\n  }\n  /**\n   * @return {?}\n   */\n  unsubscribeInputModelChangeSubject() {\n    if (!ValueHelper.isNullOrUndefined(this.inputModelChangeSubscription)) {\n      this.inputModelChangeSubscription.unsubscribe();\n      this.inputModelChangeSubscription = null;\n    }\n  }\n  /**\n   * @return {?}\n   */\n  unsubscribeOutputModelChangeSubject() {\n    if (!ValueHelper.isNullOrUndefined(this.outputModelChangeSubscription)) {\n      this.outputModelChangeSubscription.unsubscribe();\n      this.outputModelChangeSubscription = null;\n    }\n  }\n  /**\n   * @return {?}\n   */\n  unsubscribeManualRefresh() {\n    if (!ValueHelper.isNullOrUndefined(this.manualRefreshSubscription)) {\n      this.manualRefreshSubscription.unsubscribe();\n      this.manualRefreshSubscription = null;\n    }\n  }\n  /**\n   * @return {?}\n   */\n  unsubscribeTriggerFocus() {\n    if (!ValueHelper.isNullOrUndefined(this.triggerFocusSubscription)) {\n      this.triggerFocusSubscription.unsubscribe();\n      this.triggerFocusSubscription = null;\n    }\n  }\n  /**\n   * @param {?} pointerType\n   * @return {?}\n   */\n  getPointerElement(pointerType) {\n    if (pointerType === PointerType.Min) {\n      return this.minHandleElement;\n    } else if (pointerType === PointerType.Max) {\n      return this.maxHandleElement;\n    }\n    return null;\n  }\n  /**\n   * @return {?}\n   */\n  getCurrentTrackingValue() {\n    if (this.currentTrackingPointer === PointerType.Min) {\n      return this.viewLowValue;\n    } else if (this.currentTrackingPointer === PointerType.Max) {\n      return this.viewHighValue;\n    }\n    return null;\n  }\n  /**\n   * @param {?} modelValue\n   * @return {?}\n   */\n  modelValueToViewValue(modelValue) {\n    if (ValueHelper.isNullOrUndefined(modelValue)) {\n      return NaN;\n    }\n    if (!ValueHelper.isNullOrUndefined(this.viewOptions.stepsArray) && !this.viewOptions.bindIndexForStepsArray) {\n      return ValueHelper.findStepIndex(+modelValue, this.viewOptions.stepsArray);\n    }\n    return +modelValue;\n  }\n  /**\n   * @param {?} viewValue\n   * @return {?}\n   */\n  viewValueToModelValue(viewValue) {\n    if (!ValueHelper.isNullOrUndefined(this.viewOptions.stepsArray) && !this.viewOptions.bindIndexForStepsArray) {\n      return this.getStepValue(viewValue);\n    }\n    return viewValue;\n  }\n  /**\n   * @param {?} sliderValue\n   * @return {?}\n   */\n  getStepValue(sliderValue) {\n    /** @type {?} */\n    const step = this.viewOptions.stepsArray[sliderValue];\n    return !ValueHelper.isNullOrUndefined(step) ? step.value : NaN;\n  }\n  /**\n   * @return {?}\n   */\n  applyViewChange() {\n    this.value = this.viewValueToModelValue(this.viewLowValue);\n    if (this.range) {\n      this.highValue = this.viewValueToModelValue(this.viewHighValue);\n    }\n    this.outputModelChangeSubject.next({\n      value: this.value,\n      highValue: this.highValue,\n      userEventInitiated: true,\n      forceChange: false\n    });\n    // At this point all changes are applied and outputs are emitted, so we should be done.\n    // However, input changes are communicated in different stream and we need to be ready to\n    // act on the next input change even if it is exactly the same as last input change.\n    // Therefore, we send a special event to reset the stream.\n    this.inputModelChangeSubject.next({\n      value: this.value,\n      highValue: this.highValue,\n      forceChange: false,\n      internalChange: true\n    });\n  }\n  /**\n   * @param {?} modelChange\n   * @return {?}\n   */\n  applyInputModelChange(modelChange) {\n    /** @type {?} */\n    const normalisedModelChange = this.normaliseModelValues(modelChange);\n    /** @type {?} */\n    const normalisationChange = !ModelValues.compare(modelChange, normalisedModelChange);\n    if (normalisationChange) {\n      this.value = normalisedModelChange.value;\n      this.highValue = normalisedModelChange.highValue;\n    }\n    this.viewLowValue = this.modelValueToViewValue(normalisedModelChange.value);\n    if (this.range) {\n      this.viewHighValue = this.modelValueToViewValue(normalisedModelChange.highValue);\n    } else {\n      this.viewHighValue = null;\n    }\n    this.updateLowHandle(this.valueToPosition(this.viewLowValue));\n    if (this.range) {\n      this.updateHighHandle(this.valueToPosition(this.viewHighValue));\n    }\n    this.updateSelectionBar();\n    this.updateTicksScale();\n    this.updateAriaAttributes();\n    if (this.range) {\n      this.updateCombinedLabel();\n    }\n    // At the end, we need to communicate the model change to the outputs as well\n    // Normalisation changes are also always forced out to ensure that subscribers always end up in correct state\n    this.outputModelChangeSubject.next({\n      value: normalisedModelChange.value,\n      highValue: normalisedModelChange.highValue,\n      forceChange: normalisationChange,\n      userEventInitiated: false\n    });\n  }\n  /**\n   * @param {?} modelChange\n   * @return {?}\n   */\n  publishOutputModelChange(modelChange) {\n    /** @type {?} */\n    const emitOutputs = () => {\n      this.valueChange.emit(modelChange.value);\n      if (this.range) {\n        this.highValueChange.emit(modelChange.highValue);\n      }\n      if (!ValueHelper.isNullOrUndefined(this.onChangeCallback)) {\n        if (this.range) {\n          this.onChangeCallback([modelChange.value, modelChange.highValue]);\n        } else {\n          this.onChangeCallback(modelChange.value);\n        }\n      }\n      if (!ValueHelper.isNullOrUndefined(this.onTouchedCallback)) {\n        if (this.range) {\n          this.onTouchedCallback([modelChange.value, modelChange.highValue]);\n        } else {\n          this.onTouchedCallback(modelChange.value);\n        }\n      }\n    };\n    if (modelChange.userEventInitiated) {\n      // If this change was initiated by a user event, we can emit outputs in the same tick\n      emitOutputs();\n      this.userChange.emit(this.getChangeContext());\n    } else {\n      // But, if the change was initated by something else like a change in input bindings,\n      // we need to wait until next tick to emit the outputs to keep Angular change detection happy\n      setTimeout(() => {\n        emitOutputs();\n      });\n    }\n  }\n  /**\n   * @param {?} input\n   * @return {?}\n   */\n  normaliseModelValues(input) {\n    /** @type {?} */\n    const normalisedInput = new ModelValues();\n    normalisedInput.value = input.value;\n    normalisedInput.highValue = input.highValue;\n    if (!ValueHelper.isNullOrUndefined(this.viewOptions.stepsArray)) {\n      // When using steps array, only round to nearest step in the array\n      // No other enforcement can be done, as the step array may be out of order, and that is perfectly fine\n      if (this.viewOptions.enforceStepsArray) {\n        /** @type {?} */\n        const valueIndex = ValueHelper.findStepIndex(normalisedInput.value, this.viewOptions.stepsArray);\n        normalisedInput.value = this.viewOptions.stepsArray[valueIndex].value;\n        if (this.range) {\n          /** @type {?} */\n          const highValueIndex = ValueHelper.findStepIndex(normalisedInput.highValue, this.viewOptions.stepsArray);\n          normalisedInput.highValue = this.viewOptions.stepsArray[highValueIndex].value;\n        }\n      }\n      return normalisedInput;\n    }\n    if (this.viewOptions.enforceStep) {\n      normalisedInput.value = this.roundStep(normalisedInput.value);\n      if (this.range) {\n        normalisedInput.highValue = this.roundStep(normalisedInput.highValue);\n      }\n    }\n    if (this.viewOptions.enforceRange) {\n      normalisedInput.value = MathHelper.clampToRange(normalisedInput.value, this.viewOptions.floor, this.viewOptions.ceil);\n      if (this.range) {\n        normalisedInput.highValue = MathHelper.clampToRange(normalisedInput.highValue, this.viewOptions.floor, this.viewOptions.ceil);\n      }\n      // Make sure that range slider invariant (value <= highValue) is always satisfied\n      if (this.range && input.value > input.highValue) {\n        // We know that both values are now clamped correctly, they may just be in the wrong order\n        // So the easy solution is to swap them... except swapping is sometimes disabled in options, so we make the two values the same\n        if (this.viewOptions.noSwitching) {\n          normalisedInput.value = normalisedInput.highValue;\n        } else {\n          /** @type {?} */\n          const tempValue = input.value;\n          normalisedInput.value = input.highValue;\n          normalisedInput.highValue = tempValue;\n        }\n      }\n    }\n    return normalisedInput;\n  }\n  /**\n   * @return {?}\n   */\n  renormaliseModelValues() {\n    /** @type {?} */\n    const previousModelValues = {\n      value: this.value,\n      highValue: this.highValue\n    };\n    /** @type {?} */\n    const normalisedModelValues = this.normaliseModelValues(previousModelValues);\n    if (!ModelValues.compare(normalisedModelValues, previousModelValues)) {\n      this.value = normalisedModelValues.value;\n      this.highValue = normalisedModelValues.highValue;\n      this.outputModelChangeSubject.next({\n        value: this.value,\n        highValue: this.highValue,\n        forceChange: true,\n        userEventInitiated: false\n      });\n    }\n  }\n  /**\n   * @return {?}\n   */\n  onChangeOptions() {\n    if (!this.initHasRun) {\n      return;\n    }\n    /** @type {?} */\n    const previousOptionsInfluencingEventBindings = this.getOptionsInfluencingEventBindings(this.viewOptions);\n    this.applyOptions();\n    /** @type {?} */\n    const newOptionsInfluencingEventBindings = this.getOptionsInfluencingEventBindings(this.viewOptions);\n    /** @type {?} */\n    const rebindEvents = !ValueHelper.areArraysEqual(previousOptionsInfluencingEventBindings, newOptionsInfluencingEventBindings);\n    // With new options, we need to re-normalise model values if necessary\n    this.renormaliseModelValues();\n    this.viewLowValue = this.modelValueToViewValue(this.value);\n    if (this.range) {\n      this.viewHighValue = this.modelValueToViewValue(this.highValue);\n    } else {\n      this.viewHighValue = null;\n    }\n    this.resetSlider(rebindEvents);\n  }\n  /**\n   * @return {?}\n   */\n  applyOptions() {\n    this.viewOptions = new Options();\n    Object.assign(this.viewOptions, this.options);\n    this.viewOptions.draggableRange = this.range && this.viewOptions.draggableRange;\n    this.viewOptions.draggableRangeOnly = this.range && this.viewOptions.draggableRangeOnly;\n    if (this.viewOptions.draggableRangeOnly) {\n      this.viewOptions.draggableRange = true;\n    }\n    this.viewOptions.showTicks = this.viewOptions.showTicks || this.viewOptions.showTicksValues || !ValueHelper.isNullOrUndefined(this.viewOptions.ticksArray);\n    if (this.viewOptions.showTicks && (!ValueHelper.isNullOrUndefined(this.viewOptions.tickStep) || !ValueHelper.isNullOrUndefined(this.viewOptions.ticksArray))) {\n      this.intermediateTicks = true;\n    }\n    this.viewOptions.showSelectionBar = this.viewOptions.showSelectionBar || this.viewOptions.showSelectionBarEnd || !ValueHelper.isNullOrUndefined(this.viewOptions.showSelectionBarFromValue);\n    if (!ValueHelper.isNullOrUndefined(this.viewOptions.stepsArray)) {\n      this.applyStepsArrayOptions();\n    } else {\n      this.applyFloorCeilOptions();\n    }\n    if (ValueHelper.isNullOrUndefined(this.viewOptions.combineLabels)) {\n      this.viewOptions.combineLabels = (minValue, maxValue) => {\n        return minValue + ' - ' + maxValue;\n      };\n    }\n    if (this.viewOptions.logScale && this.viewOptions.floor === 0) {\n      throw Error('Can\\'t use floor=0 with logarithmic scale');\n    }\n  }\n  /**\n   * @return {?}\n   */\n  applyStepsArrayOptions() {\n    this.viewOptions.floor = 0;\n    this.viewOptions.ceil = this.viewOptions.stepsArray.length - 1;\n    this.viewOptions.step = 1;\n    if (ValueHelper.isNullOrUndefined(this.viewOptions.translate)) {\n      this.viewOptions.translate = modelValue => {\n        if (this.viewOptions.bindIndexForStepsArray) {\n          return String(this.getStepValue(modelValue));\n        }\n        return String(modelValue);\n      };\n    }\n  }\n  /**\n   * @return {?}\n   */\n  applyFloorCeilOptions() {\n    if (ValueHelper.isNullOrUndefined(this.viewOptions.step)) {\n      this.viewOptions.step = 1;\n    } else {\n      this.viewOptions.step = +this.viewOptions.step;\n      if (this.viewOptions.step <= 0) {\n        this.viewOptions.step = 1;\n      }\n    }\n    if (ValueHelper.isNullOrUndefined(this.viewOptions.ceil) || ValueHelper.isNullOrUndefined(this.viewOptions.floor)) {\n      throw Error('floor and ceil options must be supplied');\n    }\n    this.viewOptions.ceil = +this.viewOptions.ceil;\n    this.viewOptions.floor = +this.viewOptions.floor;\n    if (ValueHelper.isNullOrUndefined(this.viewOptions.translate)) {\n      this.viewOptions.translate = value => String(value);\n    }\n  }\n  /**\n   * @param {?=} rebindEvents\n   * @return {?}\n   */\n  resetSlider(rebindEvents = true) {\n    this.manageElementsStyle();\n    this.addAccessibility();\n    this.updateCeilLabel();\n    this.updateFloorLabel();\n    if (rebindEvents) {\n      this.unbindEvents();\n      this.manageEventsBindings();\n    }\n    this.updateDisabledState();\n    this.updateAriaLabel();\n    this.calculateViewDimensions();\n    this.refocusPointerIfNeeded();\n  }\n  /**\n   * @param {?} pointerType\n   * @return {?}\n   */\n  focusPointer(pointerType) {\n    // If not supplied, use min pointer as default\n    if (pointerType !== PointerType.Min && pointerType !== PointerType.Max) {\n      pointerType = PointerType.Min;\n    }\n    if (pointerType === PointerType.Min) {\n      this.minHandleElement.focus();\n    } else if (this.range && pointerType === PointerType.Max) {\n      this.maxHandleElement.focus();\n    }\n  }\n  /**\n   * @return {?}\n   */\n  refocusPointerIfNeeded() {\n    if (!ValueHelper.isNullOrUndefined(this.currentFocusPointer)) {\n      this.onPointerFocus(this.currentFocusPointer);\n      /** @type {?} */\n      const element = this.getPointerElement(this.currentFocusPointer);\n      element.focus();\n    }\n  }\n  /**\n   * @return {?}\n   */\n  manageElementsStyle() {\n    this.updateScale();\n    this.floorLabelElement.setAlwaysHide(this.viewOptions.showTicksValues || this.viewOptions.hideLimitLabels);\n    this.ceilLabelElement.setAlwaysHide(this.viewOptions.showTicksValues || this.viewOptions.hideLimitLabels);\n    /** @type {?} */\n    const hideLabelsForTicks = this.viewOptions.showTicksValues && !this.intermediateTicks;\n    this.minHandleLabelElement.setAlwaysHide(hideLabelsForTicks || this.viewOptions.hidePointerLabels);\n    this.maxHandleLabelElement.setAlwaysHide(hideLabelsForTicks || !this.range || this.viewOptions.hidePointerLabels);\n    this.combinedLabelElement.setAlwaysHide(hideLabelsForTicks || !this.range || this.viewOptions.hidePointerLabels);\n    this.selectionBarElement.setAlwaysHide(!this.range && !this.viewOptions.showSelectionBar);\n    this.leftOuterSelectionBarElement.setAlwaysHide(!this.range || !this.viewOptions.showOuterSelectionBars);\n    this.rightOuterSelectionBarElement.setAlwaysHide(!this.range || !this.viewOptions.showOuterSelectionBars);\n    this.fullBarTransparentClass = this.range && this.viewOptions.showOuterSelectionBars;\n    this.selectionBarDraggableClass = this.viewOptions.draggableRange && !this.viewOptions.onlyBindHandles;\n    this.ticksUnderValuesClass = this.intermediateTicks && this.options.showTicksValues;\n    if (this.sliderElementVerticalClass !== this.viewOptions.vertical) {\n      this.updateVerticalState();\n      // The above change in host component class will not be applied until the end of this cycle\n      // However, functions calculating the slider position expect the slider to be already styled as vertical\n      // So as a workaround, we need to reset the slider once again to compute the correct values\n      setTimeout(() => {\n        this.resetSlider();\n      });\n    }\n    // Changing animate class may interfere with slider reset/initialisation, so we should set it separately,\n    // after all is properly set up\n    if (this.sliderElementAnimateClass !== this.viewOptions.animate) {\n      setTimeout(() => {\n        this.sliderElementAnimateClass = this.viewOptions.animate;\n      });\n    }\n    this.updateRotate();\n  }\n  /**\n   * @return {?}\n   */\n  manageEventsBindings() {\n    if (this.viewOptions.disabled || this.viewOptions.readOnly) {\n      this.unbindEvents();\n    } else {\n      this.bindEvents();\n    }\n  }\n  /**\n   * @return {?}\n   */\n  updateDisabledState() {\n    this.sliderElementDisabledAttr = this.viewOptions.disabled ? 'disabled' : null;\n  }\n  /**\n   * @return {?}\n   */\n  updateAriaLabel() {\n    this.sliderElementAriaLabel = this.viewOptions.ariaLabel || 'nxg-slider';\n  }\n  /**\n   * @return {?}\n   */\n  updateVerticalState() {\n    this.sliderElementVerticalClass = this.viewOptions.vertical;\n    for (const element of this.getAllSliderElements()) {\n      // This is also called before ngAfterInit, so need to check that view child bindings work\n      if (!ValueHelper.isNullOrUndefined(element)) {\n        element.setVertical(this.viewOptions.vertical);\n      }\n    }\n  }\n  /**\n   * @return {?}\n   */\n  updateScale() {\n    for (const element of this.getAllSliderElements()) {\n      element.setScale(this.viewOptions.scale);\n    }\n  }\n  /**\n   * @return {?}\n   */\n  updateRotate() {\n    for (const element of this.getAllSliderElements()) {\n      element.setRotate(this.viewOptions.rotate);\n    }\n  }\n  /**\n   * @return {?}\n   */\n  getAllSliderElements() {\n    return [this.leftOuterSelectionBarElement, this.rightOuterSelectionBarElement, this.fullBarElement, this.selectionBarElement, this.minHandleElement, this.maxHandleElement, this.floorLabelElement, this.ceilLabelElement, this.minHandleLabelElement, this.maxHandleLabelElement, this.combinedLabelElement, this.ticksElement];\n  }\n  /**\n   * @return {?}\n   */\n  initHandles() {\n    this.updateLowHandle(this.valueToPosition(this.viewLowValue));\n    /*\n       the order here is important since the selection bar should be\n       updated after the high handle but before the combined label\n       */\n    if (this.range) {\n      this.updateHighHandle(this.valueToPosition(this.viewHighValue));\n    }\n    this.updateSelectionBar();\n    if (this.range) {\n      this.updateCombinedLabel();\n    }\n    this.updateTicksScale();\n  }\n  /**\n   * @return {?}\n   */\n  addAccessibility() {\n    this.updateAriaAttributes();\n    this.minHandleElement.role = 'slider';\n    if (this.viewOptions.keyboardSupport && !(this.viewOptions.readOnly || this.viewOptions.disabled)) {\n      this.minHandleElement.tabindex = '0';\n    } else {\n      this.minHandleElement.tabindex = '';\n    }\n    this.minHandleElement.ariaOrientation = this.viewOptions.vertical || this.viewOptions.rotate !== 0 ? 'vertical' : 'horizontal';\n    if (!ValueHelper.isNullOrUndefined(this.viewOptions.ariaLabel)) {\n      this.minHandleElement.ariaLabel = this.viewOptions.ariaLabel;\n    } else if (!ValueHelper.isNullOrUndefined(this.viewOptions.ariaLabelledBy)) {\n      this.minHandleElement.ariaLabelledBy = this.viewOptions.ariaLabelledBy;\n    }\n    if (this.range) {\n      this.maxHandleElement.role = 'slider';\n      if (this.viewOptions.keyboardSupport && !(this.viewOptions.readOnly || this.viewOptions.disabled)) {\n        this.maxHandleElement.tabindex = '0';\n      } else {\n        this.maxHandleElement.tabindex = '';\n      }\n      this.maxHandleElement.ariaOrientation = this.viewOptions.vertical || this.viewOptions.rotate !== 0 ? 'vertical' : 'horizontal';\n      if (!ValueHelper.isNullOrUndefined(this.viewOptions.ariaLabelHigh)) {\n        this.maxHandleElement.ariaLabel = this.viewOptions.ariaLabelHigh;\n      } else if (!ValueHelper.isNullOrUndefined(this.viewOptions.ariaLabelledByHigh)) {\n        this.maxHandleElement.ariaLabelledBy = this.viewOptions.ariaLabelledByHigh;\n      }\n    }\n  }\n  /**\n   * @return {?}\n   */\n  updateAriaAttributes() {\n    this.minHandleElement.ariaValueNow = (+this.value).toString();\n    this.minHandleElement.ariaValueText = this.viewOptions.translate(+this.value, LabelType.Low);\n    this.minHandleElement.ariaValueMin = this.viewOptions.floor.toString();\n    this.minHandleElement.ariaValueMax = this.viewOptions.ceil.toString();\n    if (this.range) {\n      this.maxHandleElement.ariaValueNow = (+this.highValue).toString();\n      this.maxHandleElement.ariaValueText = this.viewOptions.translate(+this.highValue, LabelType.High);\n      this.maxHandleElement.ariaValueMin = this.viewOptions.floor.toString();\n      this.maxHandleElement.ariaValueMax = this.viewOptions.ceil.toString();\n    }\n  }\n  /**\n   * @return {?}\n   */\n  calculateViewDimensions() {\n    if (!ValueHelper.isNullOrUndefined(this.viewOptions.handleDimension)) {\n      this.minHandleElement.setDimension(this.viewOptions.handleDimension);\n    } else {\n      this.minHandleElement.calculateDimension();\n    }\n    /** @type {?} */\n    const handleWidth = this.minHandleElement.dimension;\n    this.handleHalfDimension = handleWidth / 2;\n    if (!ValueHelper.isNullOrUndefined(this.viewOptions.barDimension)) {\n      this.fullBarElement.setDimension(this.viewOptions.barDimension);\n    } else {\n      this.fullBarElement.calculateDimension();\n    }\n    this.maxHandlePosition = this.fullBarElement.dimension - handleWidth;\n    if (this.initHasRun) {\n      this.updateFloorLabel();\n      this.updateCeilLabel();\n      this.initHandles();\n    }\n  }\n  /**\n   * @return {?}\n   */\n  calculateViewDimensionsAndDetectChanges() {\n    this.calculateViewDimensions();\n    if (!this.isRefDestroyed()) {\n      this.changeDetectionRef.detectChanges();\n    }\n  }\n  /**\n   * If the slider reference is already destroyed\n   * @return {?} boolean - true if ref is destroyed\n   */\n  isRefDestroyed() {\n    return this.changeDetectionRef['destroyed'];\n  }\n  /**\n   * @return {?}\n   */\n  updateTicksScale() {\n    if (!this.viewOptions.showTicks) {\n      setTimeout(() => {\n        this.sliderElementWithLegendClass = false;\n      });\n      return;\n    }\n    /** @type {?} */\n    const ticksArray = !ValueHelper.isNullOrUndefined(this.viewOptions.ticksArray) ? this.viewOptions.ticksArray : this.getTicksArray();\n    /** @type {?} */\n    const translate = this.viewOptions.vertical ? 'translateY' : 'translateX';\n    if (this.viewOptions.rightToLeft) {\n      ticksArray.reverse();\n    }\n    /** @type {?} */\n    const tickValueStep = !ValueHelper.isNullOrUndefined(this.viewOptions.tickValueStep) ? this.viewOptions.tickValueStep : !ValueHelper.isNullOrUndefined(this.viewOptions.tickStep) ? this.viewOptions.tickStep : this.viewOptions.step;\n    /** @type {?} */\n    let hasAtLeastOneLegend = false;\n    /** @type {?} */\n    const newTicks = ticksArray.map(value => {\n      /** @type {?} */\n      let position = this.valueToPosition(value);\n      if (this.viewOptions.vertical) {\n        position = this.maxHandlePosition - position;\n      }\n      /** @type {?} */\n      const translation = translate + '(' + Math.round(position) + 'px)';\n      /** @type {?} */\n      const tick = new Tick();\n      tick.selected = this.isTickSelected(value);\n      tick.style = {\n        '-webkit-transform': translation,\n        '-moz-transform': translation,\n        '-o-transform': translation,\n        '-ms-transform': translation,\n        transform: translation\n      };\n      if (tick.selected && !ValueHelper.isNullOrUndefined(this.viewOptions.getSelectionBarColor)) {\n        tick.style['background-color'] = this.getSelectionBarColor();\n      }\n      if (!tick.selected && !ValueHelper.isNullOrUndefined(this.viewOptions.getTickColor)) {\n        tick.style['background-color'] = this.getTickColor(value);\n      }\n      if (!ValueHelper.isNullOrUndefined(this.viewOptions.ticksTooltip)) {\n        tick.tooltip = this.viewOptions.ticksTooltip(value);\n        tick.tooltipPlacement = this.viewOptions.vertical ? 'right' : 'top';\n      }\n      if (this.viewOptions.showTicksValues && !ValueHelper.isNullOrUndefined(tickValueStep) && MathHelper.isModuloWithinPrecisionLimit(value, tickValueStep, this.viewOptions.precisionLimit)) {\n        tick.value = this.getDisplayValue(value, LabelType.TickValue);\n        if (!ValueHelper.isNullOrUndefined(this.viewOptions.ticksValuesTooltip)) {\n          tick.valueTooltip = this.viewOptions.ticksValuesTooltip(value);\n          tick.valueTooltipPlacement = this.viewOptions.vertical ? 'right' : 'top';\n        }\n      }\n      /** @type {?} */\n      let legend = null;\n      if (!ValueHelper.isNullOrUndefined(this.viewOptions.stepsArray)) {\n        /** @type {?} */\n        const step = this.viewOptions.stepsArray[value];\n        if (!ValueHelper.isNullOrUndefined(this.viewOptions.getStepLegend)) {\n          legend = this.viewOptions.getStepLegend(step);\n        } else if (!ValueHelper.isNullOrUndefined(step)) {\n          legend = step.legend;\n        }\n      } else if (!ValueHelper.isNullOrUndefined(this.viewOptions.getLegend)) {\n        legend = this.viewOptions.getLegend(value);\n      }\n      if (!ValueHelper.isNullOrUndefined(legend)) {\n        tick.legend = legend;\n        hasAtLeastOneLegend = true;\n      }\n      return tick;\n    });\n    setTimeout(() => {\n      this.sliderElementWithLegendClass = hasAtLeastOneLegend;\n    });\n    // We should avoid re-creating the ticks array if possible\n    // This both improves performance and makes CSS animations work correctly\n    if (!ValueHelper.isNullOrUndefined(this.ticks) && this.ticks.length === newTicks.length) {\n      for (let i = 0; i < newTicks.length; ++i) {\n        Object.assign(this.ticks[i], newTicks[i]);\n      }\n    } else {\n      this.ticks = newTicks;\n    }\n    if (!this.isRefDestroyed()) {\n      this.changeDetectionRef.detectChanges();\n    }\n  }\n  /**\n   * @return {?}\n   */\n  getTicksArray() {\n    /** @type {?} */\n    const step = !ValueHelper.isNullOrUndefined(this.viewOptions.tickStep) ? this.viewOptions.tickStep : this.viewOptions.step;\n    /** @type {?} */\n    const ticksArray = [];\n    /** @type {?} */\n    const numberOfValues = 1 + Math.floor(MathHelper.roundToPrecisionLimit(Math.abs(this.viewOptions.ceil - this.viewOptions.floor) / step, this.viewOptions.precisionLimit));\n    for (let index = 0; index < numberOfValues; ++index) {\n      ticksArray.push(MathHelper.roundToPrecisionLimit(this.viewOptions.floor + step * index, this.viewOptions.precisionLimit));\n    }\n    return ticksArray;\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n  isTickSelected(value) {\n    if (!this.range) {\n      if (!ValueHelper.isNullOrUndefined(this.viewOptions.showSelectionBarFromValue)) {\n        /** @type {?} */\n        const center = this.viewOptions.showSelectionBarFromValue;\n        if (this.viewLowValue > center && value >= center && value <= this.viewLowValue) {\n          return true;\n        } else if (this.viewLowValue < center && value <= center && value >= this.viewLowValue) {\n          return true;\n        }\n      } else if (this.viewOptions.showSelectionBarEnd) {\n        if (value >= this.viewLowValue) {\n          return true;\n        }\n      } else if (this.viewOptions.showSelectionBar && value <= this.viewLowValue) {\n        return true;\n      }\n    }\n    if (this.range && value >= this.viewLowValue && value <= this.viewHighValue) {\n      return true;\n    }\n    return false;\n  }\n  /**\n   * @return {?}\n   */\n  updateFloorLabel() {\n    if (!this.floorLabelElement.alwaysHide) {\n      this.floorLabelElement.setValue(this.getDisplayValue(this.viewOptions.floor, LabelType.Floor));\n      this.floorLabelElement.calculateDimension();\n      /** @type {?} */\n      const position = this.viewOptions.rightToLeft ? this.fullBarElement.dimension - this.floorLabelElement.dimension : 0;\n      this.floorLabelElement.setPosition(position);\n    }\n  }\n  /**\n   * @return {?}\n   */\n  updateCeilLabel() {\n    if (!this.ceilLabelElement.alwaysHide) {\n      this.ceilLabelElement.setValue(this.getDisplayValue(this.viewOptions.ceil, LabelType.Ceil));\n      this.ceilLabelElement.calculateDimension();\n      /** @type {?} */\n      const position = this.viewOptions.rightToLeft ? 0 : this.fullBarElement.dimension - this.ceilLabelElement.dimension;\n      this.ceilLabelElement.setPosition(position);\n    }\n  }\n  /**\n   * @param {?} which\n   * @param {?} newPos\n   * @return {?}\n   */\n  updateHandles(which, newPos) {\n    if (which === PointerType.Min) {\n      this.updateLowHandle(newPos);\n    } else if (which === PointerType.Max) {\n      this.updateHighHandle(newPos);\n    }\n    this.updateSelectionBar();\n    this.updateTicksScale();\n    if (this.range) {\n      this.updateCombinedLabel();\n    }\n  }\n  /**\n   * @param {?} labelType\n   * @param {?} newPos\n   * @return {?}\n   */\n  getHandleLabelPos(labelType, newPos) {\n    /** @type {?} */\n    const labelDimension = labelType === PointerType.Min ? this.minHandleLabelElement.dimension : this.maxHandleLabelElement.dimension;\n    /** @type {?} */\n    const nearHandlePos = newPos - labelDimension / 2 + this.handleHalfDimension;\n    /** @type {?} */\n    const endOfBarPos = this.fullBarElement.dimension - labelDimension;\n    if (!this.viewOptions.boundPointerLabels) {\n      return nearHandlePos;\n    }\n    if (this.viewOptions.rightToLeft && labelType === PointerType.Min || !this.viewOptions.rightToLeft && labelType === PointerType.Max) {\n      return Math.min(nearHandlePos, endOfBarPos);\n    } else {\n      return Math.min(Math.max(nearHandlePos, 0), endOfBarPos);\n    }\n  }\n  /**\n   * @param {?} newPos\n   * @return {?}\n   */\n  updateLowHandle(newPos) {\n    this.minHandleElement.setPosition(newPos);\n    this.minHandleLabelElement.setValue(this.getDisplayValue(this.viewLowValue, LabelType.Low));\n    this.minHandleLabelElement.setPosition(this.getHandleLabelPos(PointerType.Min, newPos));\n    if (!ValueHelper.isNullOrUndefined(this.viewOptions.getPointerColor)) {\n      this.minPointerStyle = {\n        backgroundColor: this.getPointerColor(PointerType.Min)\n      };\n    }\n    if (this.viewOptions.autoHideLimitLabels) {\n      this.updateFloorAndCeilLabelsVisibility();\n    }\n  }\n  /**\n   * @param {?} newPos\n   * @return {?}\n   */\n  updateHighHandle(newPos) {\n    this.maxHandleElement.setPosition(newPos);\n    this.maxHandleLabelElement.setValue(this.getDisplayValue(this.viewHighValue, LabelType.High));\n    this.maxHandleLabelElement.setPosition(this.getHandleLabelPos(PointerType.Max, newPos));\n    if (!ValueHelper.isNullOrUndefined(this.viewOptions.getPointerColor)) {\n      this.maxPointerStyle = {\n        backgroundColor: this.getPointerColor(PointerType.Max)\n      };\n    }\n    if (this.viewOptions.autoHideLimitLabels) {\n      this.updateFloorAndCeilLabelsVisibility();\n    }\n  }\n  /**\n   * @return {?}\n   */\n  updateFloorAndCeilLabelsVisibility() {\n    // Show based only on hideLimitLabels if pointer labels are hidden\n    if (this.viewOptions.hidePointerLabels) {\n      return;\n    }\n    /** @type {?} */\n    let floorLabelHidden = false;\n    /** @type {?} */\n    let ceilLabelHidden = false;\n    /** @type {?} */\n    const isMinLabelAtFloor = this.isLabelBelowFloorLabel(this.minHandleLabelElement);\n    /** @type {?} */\n    const isMinLabelAtCeil = this.isLabelAboveCeilLabel(this.minHandleLabelElement);\n    /** @type {?} */\n    const isMaxLabelAtCeil = this.isLabelAboveCeilLabel(this.maxHandleLabelElement);\n    /** @type {?} */\n    const isCombinedLabelAtFloor = this.isLabelBelowFloorLabel(this.combinedLabelElement);\n    /** @type {?} */\n    const isCombinedLabelAtCeil = this.isLabelAboveCeilLabel(this.combinedLabelElement);\n    if (isMinLabelAtFloor) {\n      floorLabelHidden = true;\n      this.floorLabelElement.hide();\n    } else {\n      floorLabelHidden = false;\n      this.floorLabelElement.show();\n    }\n    if (isMinLabelAtCeil) {\n      ceilLabelHidden = true;\n      this.ceilLabelElement.hide();\n    } else {\n      ceilLabelHidden = false;\n      this.ceilLabelElement.show();\n    }\n    if (this.range) {\n      /** @type {?} */\n      const hideCeil = this.combinedLabelElement.isVisible() ? isCombinedLabelAtCeil : isMaxLabelAtCeil;\n      /** @type {?} */\n      const hideFloor = this.combinedLabelElement.isVisible() ? isCombinedLabelAtFloor : isMinLabelAtFloor;\n      if (hideCeil) {\n        this.ceilLabelElement.hide();\n      } else if (!ceilLabelHidden) {\n        this.ceilLabelElement.show();\n      }\n      // Hide or show floor label\n      if (hideFloor) {\n        this.floorLabelElement.hide();\n      } else if (!floorLabelHidden) {\n        this.floorLabelElement.show();\n      }\n    }\n  }\n  /**\n   * @param {?} label\n   * @return {?}\n   */\n  isLabelBelowFloorLabel(label) {\n    /** @type {?} */\n    const pos = label.position;\n    /** @type {?} */\n    const dim = label.dimension;\n    /** @type {?} */\n    const floorPos = this.floorLabelElement.position;\n    /** @type {?} */\n    const floorDim = this.floorLabelElement.dimension;\n    return this.viewOptions.rightToLeft ? pos + dim >= floorPos - 2 : pos <= floorPos + floorDim + 2;\n  }\n  /**\n   * @param {?} label\n   * @return {?}\n   */\n  isLabelAboveCeilLabel(label) {\n    /** @type {?} */\n    const pos = label.position;\n    /** @type {?} */\n    const dim = label.dimension;\n    /** @type {?} */\n    const ceilPos = this.ceilLabelElement.position;\n    /** @type {?} */\n    const ceilDim = this.ceilLabelElement.dimension;\n    return this.viewOptions.rightToLeft ? pos <= ceilPos + ceilDim + 2 : pos + dim >= ceilPos - 2;\n  }\n  /**\n   * @return {?}\n   */\n  updateSelectionBar() {\n    /** @type {?} */\n    let position = 0;\n    /** @type {?} */\n    let dimension = 0;\n    /** @type {?} */\n    const isSelectionBarFromRight = this.viewOptions.rightToLeft ? !this.viewOptions.showSelectionBarEnd : this.viewOptions.showSelectionBarEnd;\n    /** @type {?} */\n    const positionForRange = this.viewOptions.rightToLeft ? this.maxHandleElement.position + this.handleHalfDimension : this.minHandleElement.position + this.handleHalfDimension;\n    if (this.range) {\n      dimension = Math.abs(this.maxHandleElement.position - this.minHandleElement.position);\n      position = positionForRange;\n    } else {\n      if (!ValueHelper.isNullOrUndefined(this.viewOptions.showSelectionBarFromValue)) {\n        /** @type {?} */\n        const center = this.viewOptions.showSelectionBarFromValue;\n        /** @type {?} */\n        const centerPosition = this.valueToPosition(center);\n        /** @type {?} */\n        const isModelGreaterThanCenter = this.viewOptions.rightToLeft ? this.viewLowValue <= center : this.viewLowValue > center;\n        if (isModelGreaterThanCenter) {\n          dimension = this.minHandleElement.position - centerPosition;\n          position = centerPosition + this.handleHalfDimension;\n        } else {\n          dimension = centerPosition - this.minHandleElement.position;\n          position = this.minHandleElement.position + this.handleHalfDimension;\n        }\n      } else if (isSelectionBarFromRight) {\n        dimension = Math.ceil(Math.abs(this.maxHandlePosition - this.minHandleElement.position) + this.handleHalfDimension);\n        position = Math.floor(this.minHandleElement.position + this.handleHalfDimension);\n      } else {\n        dimension = this.minHandleElement.position + this.handleHalfDimension;\n        position = 0;\n      }\n    }\n    this.selectionBarElement.setDimension(dimension);\n    this.selectionBarElement.setPosition(position);\n    if (this.range && this.viewOptions.showOuterSelectionBars) {\n      if (this.viewOptions.rightToLeft) {\n        this.rightOuterSelectionBarElement.setDimension(position);\n        this.rightOuterSelectionBarElement.setPosition(0);\n        this.fullBarElement.calculateDimension();\n        this.leftOuterSelectionBarElement.setDimension(this.fullBarElement.dimension - (position + dimension));\n        this.leftOuterSelectionBarElement.setPosition(position + dimension);\n      } else {\n        this.leftOuterSelectionBarElement.setDimension(position);\n        this.leftOuterSelectionBarElement.setPosition(0);\n        this.fullBarElement.calculateDimension();\n        this.rightOuterSelectionBarElement.setDimension(this.fullBarElement.dimension - (position + dimension));\n        this.rightOuterSelectionBarElement.setPosition(position + dimension);\n      }\n    }\n    if (!ValueHelper.isNullOrUndefined(this.viewOptions.getSelectionBarColor)) {\n      /** @type {?} */\n      const color = this.getSelectionBarColor();\n      this.barStyle = {\n        backgroundColor: color\n      };\n    } else if (!ValueHelper.isNullOrUndefined(this.viewOptions.selectionBarGradient)) {\n      /** @type {?} */\n      const offset = !ValueHelper.isNullOrUndefined(this.viewOptions.showSelectionBarFromValue) ? this.valueToPosition(this.viewOptions.showSelectionBarFromValue) : 0;\n      /** @type {?} */\n      const reversed = offset - position > 0 && !isSelectionBarFromRight || offset - position <= 0 && isSelectionBarFromRight;\n      /** @type {?} */\n      const direction = this.viewOptions.vertical ? reversed ? 'bottom' : 'top' : reversed ? 'left' : 'right';\n      this.barStyle = {\n        backgroundImage: 'linear-gradient(to ' + direction + ', ' + this.viewOptions.selectionBarGradient.from + ' 0%,' + this.viewOptions.selectionBarGradient.to + ' 100%)'\n      };\n      if (this.viewOptions.vertical) {\n        this.barStyle.backgroundPosition = 'center ' + (offset + dimension + position + (reversed ? -this.handleHalfDimension : 0)) + 'px';\n        this.barStyle.backgroundSize = '100% ' + (this.fullBarElement.dimension - this.handleHalfDimension) + 'px';\n      } else {\n        this.barStyle.backgroundPosition = offset - position + (reversed ? this.handleHalfDimension : 0) + 'px center';\n        this.barStyle.backgroundSize = this.fullBarElement.dimension - this.handleHalfDimension + 'px 100%';\n      }\n    }\n  }\n  /**\n   * @return {?}\n   */\n  getSelectionBarColor() {\n    if (this.range) {\n      return this.viewOptions.getSelectionBarColor(this.value, this.highValue);\n    }\n    return this.viewOptions.getSelectionBarColor(this.value);\n  }\n  /**\n   * @param {?} pointerType\n   * @return {?}\n   */\n  getPointerColor(pointerType) {\n    if (pointerType === PointerType.Max) {\n      return this.viewOptions.getPointerColor(this.highValue, pointerType);\n    }\n    return this.viewOptions.getPointerColor(this.value, pointerType);\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n  getTickColor(value) {\n    return this.viewOptions.getTickColor(value);\n  }\n  /**\n   * @return {?}\n   */\n  updateCombinedLabel() {\n    /** @type {?} */\n    let isLabelOverlap = null;\n    if (this.viewOptions.rightToLeft) {\n      isLabelOverlap = this.minHandleLabelElement.position - this.minHandleLabelElement.dimension - 10 <= this.maxHandleLabelElement.position;\n    } else {\n      isLabelOverlap = this.minHandleLabelElement.position + this.minHandleLabelElement.dimension + 10 >= this.maxHandleLabelElement.position;\n    }\n    if (isLabelOverlap) {\n      /** @type {?} */\n      const lowDisplayValue = this.getDisplayValue(this.viewLowValue, LabelType.Low);\n      /** @type {?} */\n      const highDisplayValue = this.getDisplayValue(this.viewHighValue, LabelType.High);\n      /** @type {?} */\n      const combinedLabelValue = this.viewOptions.rightToLeft ? this.viewOptions.combineLabels(highDisplayValue, lowDisplayValue) : this.viewOptions.combineLabels(lowDisplayValue, highDisplayValue);\n      this.combinedLabelElement.setValue(combinedLabelValue);\n      /** @type {?} */\n      const pos = this.viewOptions.boundPointerLabels ? Math.min(Math.max(this.selectionBarElement.position + this.selectionBarElement.dimension / 2 - this.combinedLabelElement.dimension / 2, 0), this.fullBarElement.dimension - this.combinedLabelElement.dimension) : this.selectionBarElement.position + this.selectionBarElement.dimension / 2 - this.combinedLabelElement.dimension / 2;\n      this.combinedLabelElement.setPosition(pos);\n      this.minHandleLabelElement.hide();\n      this.maxHandleLabelElement.hide();\n      this.combinedLabelElement.show();\n    } else {\n      this.updateHighHandle(this.valueToPosition(this.viewHighValue));\n      this.updateLowHandle(this.valueToPosition(this.viewLowValue));\n      this.maxHandleLabelElement.show();\n      this.minHandleLabelElement.show();\n      this.combinedLabelElement.hide();\n    }\n    if (this.viewOptions.autoHideLimitLabels) {\n      this.updateFloorAndCeilLabelsVisibility();\n    }\n  }\n  /**\n   * @param {?} value\n   * @param {?} which\n   * @return {?}\n   */\n  getDisplayValue(value, which) {\n    if (!ValueHelper.isNullOrUndefined(this.viewOptions.stepsArray) && !this.viewOptions.bindIndexForStepsArray) {\n      value = this.getStepValue(value);\n    }\n    return this.viewOptions.translate(value, which);\n  }\n  /**\n   * @param {?} value\n   * @param {?=} customStep\n   * @return {?}\n   */\n  roundStep(value, customStep) {\n    /** @type {?} */\n    const step = !ValueHelper.isNullOrUndefined(customStep) ? customStep : this.viewOptions.step;\n    /** @type {?} */\n    let steppedDifference = MathHelper.roundToPrecisionLimit((value - this.viewOptions.floor) / step, this.viewOptions.precisionLimit);\n    steppedDifference = Math.round(steppedDifference) * step;\n    return MathHelper.roundToPrecisionLimit(this.viewOptions.floor + steppedDifference, this.viewOptions.precisionLimit);\n  }\n  /**\n   * @param {?} val\n   * @return {?}\n   */\n  valueToPosition(val) {\n    /** @type {?} */\n    let fn = ValueHelper.linearValueToPosition;\n    if (!ValueHelper.isNullOrUndefined(this.viewOptions.customValueToPosition)) {\n      fn = this.viewOptions.customValueToPosition;\n    } else if (this.viewOptions.logScale) {\n      fn = ValueHelper.logValueToPosition;\n    }\n    val = MathHelper.clampToRange(val, this.viewOptions.floor, this.viewOptions.ceil);\n    /** @type {?} */\n    let percent = fn(val, this.viewOptions.floor, this.viewOptions.ceil);\n    if (ValueHelper.isNullOrUndefined(percent)) {\n      percent = 0;\n    }\n    if (this.viewOptions.rightToLeft) {\n      percent = 1 - percent;\n    }\n    return percent * this.maxHandlePosition;\n  }\n  /**\n   * @param {?} position\n   * @return {?}\n   */\n  positionToValue(position) {\n    /** @type {?} */\n    let percent = position / this.maxHandlePosition;\n    if (this.viewOptions.rightToLeft) {\n      percent = 1 - percent;\n    }\n    /** @type {?} */\n    let fn = ValueHelper.linearPositionToValue;\n    if (!ValueHelper.isNullOrUndefined(this.viewOptions.customPositionToValue)) {\n      fn = this.viewOptions.customPositionToValue;\n    } else if (this.viewOptions.logScale) {\n      fn = ValueHelper.logPositionToValue;\n    }\n    /** @type {?} */\n    const value = fn(percent, this.viewOptions.floor, this.viewOptions.ceil);\n    return !ValueHelper.isNullOrUndefined(value) ? value : 0;\n  }\n  /**\n   * @param {?} event\n   * @param {?=} targetTouchId\n   * @return {?}\n   */\n  getEventXY(event, targetTouchId) {\n    if (event instanceof MouseEvent) {\n      return this.viewOptions.vertical || this.viewOptions.rotate !== 0 ? event.clientY : event.clientX;\n    }\n    /** @type {?} */\n    let touchIndex = 0;\n    /** @type {?} */\n    const touches = event.touches;\n    if (!ValueHelper.isNullOrUndefined(targetTouchId)) {\n      for (let i = 0; i < touches.length; i++) {\n        if (touches[i].identifier === targetTouchId) {\n          touchIndex = i;\n          break;\n        }\n      }\n    }\n    // Return the target touch or if the target touch was not found in the event\n    // returns the coordinates of the first touch\n    return this.viewOptions.vertical || this.viewOptions.rotate !== 0 ? touches[touchIndex].clientY : touches[touchIndex].clientX;\n  }\n  /**\n   * @param {?} event\n   * @param {?=} targetTouchId\n   * @return {?}\n   */\n  getEventPosition(event, targetTouchId) {\n    /** @type {?} */\n    const sliderElementBoundingRect = this.elementRef.nativeElement.getBoundingClientRect();\n    /** @type {?} */\n    const sliderPos = this.viewOptions.vertical || this.viewOptions.rotate !== 0 ? sliderElementBoundingRect.bottom : sliderElementBoundingRect.left;\n    /** @type {?} */\n    let eventPos = 0;\n    if (this.viewOptions.vertical || this.viewOptions.rotate !== 0) {\n      eventPos = -this.getEventXY(event, targetTouchId) + sliderPos;\n    } else {\n      eventPos = this.getEventXY(event, targetTouchId) - sliderPos;\n    }\n    return eventPos * this.viewOptions.scale - this.handleHalfDimension;\n  }\n  /**\n   * @param {?} event\n   * @return {?}\n   */\n  getNearestHandle(event) {\n    if (!this.range) {\n      return PointerType.Min;\n    }\n    /** @type {?} */\n    const position = this.getEventPosition(event);\n    /** @type {?} */\n    const distanceMin = Math.abs(position - this.minHandleElement.position);\n    /** @type {?} */\n    const distanceMax = Math.abs(position - this.maxHandleElement.position);\n    if (distanceMin < distanceMax) {\n      return PointerType.Min;\n    } else if (distanceMin > distanceMax) {\n      return PointerType.Max;\n    } else if (!this.viewOptions.rightToLeft) {\n      // if event is at the same distance from min/max then if it's at left of minH, we return minH else maxH\n      return position < this.minHandleElement.position ? PointerType.Min : PointerType.Max;\n    }\n    // reverse in rtl\n    return position > this.minHandleElement.position ? PointerType.Min : PointerType.Max;\n  }\n  /**\n   * @return {?}\n   */\n  bindEvents() {\n    /** @type {?} */\n    const draggableRange = this.viewOptions.draggableRange;\n    if (!this.viewOptions.onlyBindHandles) {\n      this.selectionBarElement.on('mousedown', event => this.onBarStart(null, draggableRange, event, true, true, true));\n    }\n    if (this.viewOptions.draggableRangeOnly) {\n      this.minHandleElement.on('mousedown', event => this.onBarStart(PointerType.Min, draggableRange, event, true, true));\n      this.maxHandleElement.on('mousedown', event => this.onBarStart(PointerType.Max, draggableRange, event, true, true));\n    } else {\n      this.minHandleElement.on('mousedown', event => this.onStart(PointerType.Min, event, true, true));\n      if (this.range) {\n        this.maxHandleElement.on('mousedown', event => this.onStart(PointerType.Max, event, true, true));\n      }\n      if (!this.viewOptions.onlyBindHandles) {\n        this.fullBarElement.on('mousedown', event => this.onStart(null, event, true, true, true));\n        this.ticksElement.on('mousedown', event => this.onStart(null, event, true, true, true, true));\n      }\n    }\n    if (!this.viewOptions.onlyBindHandles) {\n      this.selectionBarElement.onPassive('touchstart', event => this.onBarStart(null, draggableRange, event, true, true, true));\n    }\n    if (this.viewOptions.draggableRangeOnly) {\n      this.minHandleElement.onPassive('touchstart', event => this.onBarStart(PointerType.Min, draggableRange, event, true, true));\n      this.maxHandleElement.onPassive('touchstart', event => this.onBarStart(PointerType.Max, draggableRange, event, true, true));\n    } else {\n      this.minHandleElement.onPassive('touchstart', event => this.onStart(PointerType.Min, event, true, true));\n      if (this.range) {\n        this.maxHandleElement.onPassive('touchstart', event => this.onStart(PointerType.Max, event, true, true));\n      }\n      if (!this.viewOptions.onlyBindHandles) {\n        this.fullBarElement.onPassive('touchstart', event => this.onStart(null, event, true, true, true));\n        this.ticksElement.onPassive('touchstart', event => this.onStart(null, event, false, false, true, true));\n      }\n    }\n    if (this.viewOptions.keyboardSupport) {\n      this.minHandleElement.on('focus', () => this.onPointerFocus(PointerType.Min));\n      if (this.range) {\n        this.maxHandleElement.on('focus', () => this.onPointerFocus(PointerType.Max));\n      }\n    }\n  }\n  /**\n   * @param {?} options\n   * @return {?}\n   */\n  getOptionsInfluencingEventBindings(options) {\n    return [options.disabled, options.readOnly, options.draggableRange, options.draggableRangeOnly, options.onlyBindHandles, options.keyboardSupport];\n  }\n  /**\n   * @return {?}\n   */\n  unbindEvents() {\n    this.unsubscribeOnMove();\n    this.unsubscribeOnEnd();\n    for (const element of this.getAllSliderElements()) {\n      if (!ValueHelper.isNullOrUndefined(element)) {\n        element.off();\n      }\n    }\n  }\n  /**\n   * @param {?} pointerType\n   * @param {?} draggableRange\n   * @param {?} event\n   * @param {?} bindMove\n   * @param {?} bindEnd\n   * @param {?=} simulateImmediateMove\n   * @param {?=} simulateImmediateEnd\n   * @return {?}\n   */\n  onBarStart(pointerType, draggableRange, event, bindMove, bindEnd, simulateImmediateMove, simulateImmediateEnd) {\n    if (draggableRange) {\n      this.onDragStart(pointerType, event, bindMove, bindEnd);\n    } else {\n      this.onStart(pointerType, event, bindMove, bindEnd, simulateImmediateMove, simulateImmediateEnd);\n    }\n  }\n  /**\n   * @param {?} pointerType\n   * @param {?} event\n   * @param {?} bindMove\n   * @param {?} bindEnd\n   * @param {?=} simulateImmediateMove\n   * @param {?=} simulateImmediateEnd\n   * @return {?}\n   */\n  onStart(pointerType, event, bindMove, bindEnd, simulateImmediateMove, simulateImmediateEnd) {\n    event.stopPropagation();\n    // Only call preventDefault() when handling non-passive events (passive events don't need it)\n    if (!CompatibilityHelper.isTouchEvent(event) && !supportsPassiveEvents) {\n      event.preventDefault();\n    }\n    this.moving = false;\n    // We have to do this in case the HTML where the sliders are on\n    // have been animated into view.\n    this.calculateViewDimensions();\n    if (ValueHelper.isNullOrUndefined(pointerType)) {\n      pointerType = this.getNearestHandle(event);\n    }\n    this.currentTrackingPointer = pointerType;\n    /** @type {?} */\n    const pointerElement = this.getPointerElement(pointerType);\n    pointerElement.active = true;\n    if (this.viewOptions.keyboardSupport) {\n      pointerElement.focus();\n    }\n    if (bindMove) {\n      this.unsubscribeOnMove();\n      /** @type {?} */\n      const onMoveCallback = e => this.dragging.active ? this.onDragMove(e) : this.onMove(e);\n      if (CompatibilityHelper.isTouchEvent(event)) {\n        this.onMoveEventListener = this.eventListenerHelper.attachPassiveEventListener(document, 'touchmove', onMoveCallback);\n      } else {\n        this.onMoveEventListener = this.eventListenerHelper.attachEventListener(document, 'mousemove', onMoveCallback);\n      }\n    }\n    if (bindEnd) {\n      this.unsubscribeOnEnd();\n      /** @type {?} */\n      const onEndCallback = e => this.onEnd(e);\n      if (CompatibilityHelper.isTouchEvent(event)) {\n        this.onEndEventListener = this.eventListenerHelper.attachPassiveEventListener(document, 'touchend', onEndCallback);\n      } else {\n        this.onEndEventListener = this.eventListenerHelper.attachEventListener(document, 'mouseup', onEndCallback);\n      }\n    }\n    this.userChangeStart.emit(this.getChangeContext());\n    if (CompatibilityHelper.isTouchEvent(event) && !ValueHelper.isNullOrUndefined( /** @type {?} */event.changedTouches)) {\n      // Store the touch identifier\n      if (ValueHelper.isNullOrUndefined(this.touchId)) {\n        this.touchId = /** @type {?} */event.changedTouches[0].identifier;\n      }\n    }\n    // Click events, either with mouse or touch gesture are weird. Sometimes they result in full\n    // start, move, end sequence, and sometimes, they don't - they only invoke mousedown\n    // As a workaround, we simulate the first move event and the end event if it's necessary\n    if (simulateImmediateMove) {\n      this.onMove(event, true);\n    }\n    if (simulateImmediateEnd) {\n      this.onEnd(event);\n    }\n  }\n  /**\n   * @param {?} event\n   * @param {?=} fromTick\n   * @return {?}\n   */\n  onMove(event, fromTick) {\n    /** @type {?} */\n    let touchForThisSlider = null;\n    if (CompatibilityHelper.isTouchEvent(event)) {\n      /** @type {?} */\n      const changedTouches = /** @type {?} */event.changedTouches;\n      for (let i = 0; i < changedTouches.length; i++) {\n        if (changedTouches[i].identifier === this.touchId) {\n          touchForThisSlider = changedTouches[i];\n          break;\n        }\n      }\n      if (ValueHelper.isNullOrUndefined(touchForThisSlider)) {\n        return;\n      }\n    }\n    if (this.viewOptions.animate && !this.viewOptions.animateOnMove) {\n      if (this.moving) {\n        this.sliderElementAnimateClass = false;\n      }\n    }\n    this.moving = true;\n    /** @type {?} */\n    const newPos = !ValueHelper.isNullOrUndefined(touchForThisSlider) ? this.getEventPosition(event, touchForThisSlider.identifier) : this.getEventPosition(event);\n    /** @type {?} */\n    let newValue;\n    /** @type {?} */\n    const ceilValue = this.viewOptions.rightToLeft ? this.viewOptions.floor : this.viewOptions.ceil;\n    /** @type {?} */\n    const floorValue = this.viewOptions.rightToLeft ? this.viewOptions.ceil : this.viewOptions.floor;\n    if (newPos <= 0) {\n      newValue = floorValue;\n    } else if (newPos >= this.maxHandlePosition) {\n      newValue = ceilValue;\n    } else {\n      newValue = this.positionToValue(newPos);\n      if (fromTick && !ValueHelper.isNullOrUndefined(this.viewOptions.tickStep)) {\n        newValue = this.roundStep(newValue, this.viewOptions.tickStep);\n      } else {\n        newValue = this.roundStep(newValue);\n      }\n    }\n    this.positionTrackingHandle(newValue);\n  }\n  /**\n   * @param {?} event\n   * @return {?}\n   */\n  onEnd(event) {\n    if (CompatibilityHelper.isTouchEvent(event)) {\n      /** @type {?} */\n      const changedTouches = /** @type {?} */event.changedTouches;\n      if (changedTouches[0].identifier !== this.touchId) {\n        return;\n      }\n    }\n    this.moving = false;\n    if (this.viewOptions.animate) {\n      this.sliderElementAnimateClass = true;\n    }\n    this.touchId = null;\n    if (!this.viewOptions.keyboardSupport) {\n      this.minHandleElement.active = false;\n      this.maxHandleElement.active = false;\n      this.currentTrackingPointer = null;\n    }\n    this.dragging.active = false;\n    this.unsubscribeOnMove();\n    this.unsubscribeOnEnd();\n    this.userChangeEnd.emit(this.getChangeContext());\n  }\n  /**\n   * @param {?} pointerType\n   * @return {?}\n   */\n  onPointerFocus(pointerType) {\n    /** @type {?} */\n    const pointerElement = this.getPointerElement(pointerType);\n    pointerElement.on('blur', () => this.onPointerBlur(pointerElement));\n    pointerElement.on('keydown', event => this.onKeyboardEvent(event));\n    pointerElement.on('keyup', () => this.onKeyUp());\n    pointerElement.active = true;\n    this.currentTrackingPointer = pointerType;\n    this.currentFocusPointer = pointerType;\n    this.firstKeyDown = true;\n  }\n  /**\n   * @return {?}\n   */\n  onKeyUp() {\n    this.firstKeyDown = true;\n    this.userChangeEnd.emit(this.getChangeContext());\n  }\n  /**\n   * @param {?} pointer\n   * @return {?}\n   */\n  onPointerBlur(pointer) {\n    pointer.off('blur');\n    pointer.off('keydown');\n    pointer.off('keyup');\n    pointer.active = false;\n    if (ValueHelper.isNullOrUndefined(this.touchId)) {\n      this.currentTrackingPointer = null;\n      this.currentFocusPointer = null;\n    }\n  }\n  /**\n   * @param {?} currentValue\n   * @return {?}\n   */\n  getKeyActions(currentValue) {\n    /** @type {?} */\n    const valueRange = this.viewOptions.ceil - this.viewOptions.floor;\n    /** @type {?} */\n    let increaseStep = currentValue + this.viewOptions.step;\n    /** @type {?} */\n    let decreaseStep = currentValue - this.viewOptions.step;\n    /** @type {?} */\n    let increasePage = currentValue + valueRange / 10;\n    /** @type {?} */\n    let decreasePage = currentValue - valueRange / 10;\n    if (this.viewOptions.reversedControls) {\n      increaseStep = currentValue - this.viewOptions.step;\n      decreaseStep = currentValue + this.viewOptions.step;\n      increasePage = currentValue - valueRange / 10;\n      decreasePage = currentValue + valueRange / 10;\n    }\n    /** @type {?} */\n    const actions = {\n      UP: increaseStep,\n      DOWN: decreaseStep,\n      LEFT: decreaseStep,\n      RIGHT: increaseStep,\n      PAGEUP: increasePage,\n      PAGEDOWN: decreasePage,\n      HOME: this.viewOptions.reversedControls ? this.viewOptions.ceil : this.viewOptions.floor,\n      END: this.viewOptions.reversedControls ? this.viewOptions.floor : this.viewOptions.ceil\n    };\n    // right to left means swapping right and left arrows\n    if (this.viewOptions.rightToLeft) {\n      actions[\"LEFT\"] = increaseStep;\n      actions[\"RIGHT\"] = decreaseStep;\n      // right to left and vertical means we also swap up and down\n      if (this.viewOptions.vertical || this.viewOptions.rotate !== 0) {\n        actions[\"UP\"] = decreaseStep;\n        actions[\"DOWN\"] = increaseStep;\n      }\n    }\n    return actions;\n  }\n  /**\n   * @param {?} event\n   * @return {?}\n   */\n  onKeyboardEvent(event) {\n    /** @type {?} */\n    const currentValue = this.getCurrentTrackingValue();\n    /** @type {?} */\n    const keyCode = !ValueHelper.isNullOrUndefined(event.keyCode) ? event.keyCode : event.which;\n    /** @type {?} */\n    const keys = {\n      38: 'UP',\n      40: 'DOWN',\n      37: 'LEFT',\n      39: 'RIGHT',\n      33: 'PAGEUP',\n      34: 'PAGEDOWN',\n      36: 'HOME',\n      35: 'END'\n    };\n    /** @type {?} */\n    const actions = this.getKeyActions(currentValue);\n    /** @type {?} */\n    const key = keys[keyCode];\n    /** @type {?} */\n    const action = actions[key];\n    if (ValueHelper.isNullOrUndefined(action) || ValueHelper.isNullOrUndefined(this.currentTrackingPointer)) {\n      return;\n    }\n    event.preventDefault();\n    if (this.firstKeyDown) {\n      this.firstKeyDown = false;\n      this.userChangeStart.emit(this.getChangeContext());\n    }\n    /** @type {?} */\n    const actionValue = MathHelper.clampToRange(action, this.viewOptions.floor, this.viewOptions.ceil);\n    /** @type {?} */\n    const newValue = this.roundStep(actionValue);\n    if (!this.viewOptions.draggableRangeOnly) {\n      this.positionTrackingHandle(newValue);\n    } else {\n      /** @type {?} */\n      const difference = this.viewHighValue - this.viewLowValue;\n      /** @type {?} */\n      let newMinValue;\n      /** @type {?} */\n      let newMaxValue;\n      if (this.currentTrackingPointer === PointerType.Min) {\n        newMinValue = newValue;\n        newMaxValue = newValue + difference;\n        if (newMaxValue > this.viewOptions.ceil) {\n          newMaxValue = this.viewOptions.ceil;\n          newMinValue = newMaxValue - difference;\n        }\n      } else if (this.currentTrackingPointer === PointerType.Max) {\n        newMaxValue = newValue;\n        newMinValue = newValue - difference;\n        if (newMinValue < this.viewOptions.floor) {\n          newMinValue = this.viewOptions.floor;\n          newMaxValue = newMinValue + difference;\n        }\n      }\n      this.positionTrackingBar(newMinValue, newMaxValue);\n    }\n  }\n  /**\n   * @param {?} pointerType\n   * @param {?} event\n   * @param {?} bindMove\n   * @param {?} bindEnd\n   * @return {?}\n   */\n  onDragStart(pointerType, event, bindMove, bindEnd) {\n    /** @type {?} */\n    const position = this.getEventPosition(event);\n    this.dragging = new Dragging();\n    this.dragging.active = true;\n    this.dragging.value = this.positionToValue(position);\n    this.dragging.difference = this.viewHighValue - this.viewLowValue;\n    this.dragging.lowLimit = this.viewOptions.rightToLeft ? this.minHandleElement.position - position : position - this.minHandleElement.position;\n    this.dragging.highLimit = this.viewOptions.rightToLeft ? position - this.maxHandleElement.position : this.maxHandleElement.position - position;\n    this.onStart(pointerType, event, bindMove, bindEnd);\n  }\n  /**\n   * Get min value depending on whether the newPos is outOfBounds above or below the bar and rightToLeft\n   * @param {?} newPos\n   * @param {?} outOfBounds\n   * @param {?} isAbove\n   * @return {?}\n   */\n  getMinValue(newPos, outOfBounds, isAbove) {\n    /** @type {?} */\n    const isRTL = this.viewOptions.rightToLeft;\n    /** @type {?} */\n    let value = null;\n    if (outOfBounds) {\n      if (isAbove) {\n        value = isRTL ? this.viewOptions.floor : this.viewOptions.ceil - this.dragging.difference;\n      } else {\n        value = isRTL ? this.viewOptions.ceil - this.dragging.difference : this.viewOptions.floor;\n      }\n    } else {\n      value = isRTL ? this.positionToValue(newPos + this.dragging.lowLimit) : this.positionToValue(newPos - this.dragging.lowLimit);\n    }\n    return this.roundStep(value);\n  }\n  /**\n   * Get max value depending on whether the newPos is outOfBounds above or below the bar and rightToLeft\n   * @param {?} newPos\n   * @param {?} outOfBounds\n   * @param {?} isAbove\n   * @return {?}\n   */\n  getMaxValue(newPos, outOfBounds, isAbove) {\n    /** @type {?} */\n    const isRTL = this.viewOptions.rightToLeft;\n    /** @type {?} */\n    let value = null;\n    if (outOfBounds) {\n      if (isAbove) {\n        value = isRTL ? this.viewOptions.floor + this.dragging.difference : this.viewOptions.ceil;\n      } else {\n        value = isRTL ? this.viewOptions.ceil : this.viewOptions.floor + this.dragging.difference;\n      }\n    } else {\n      if (isRTL) {\n        value = this.positionToValue(newPos + this.dragging.lowLimit) + this.dragging.difference;\n      } else {\n        value = this.positionToValue(newPos - this.dragging.lowLimit) + this.dragging.difference;\n      }\n    }\n    return this.roundStep(value);\n  }\n  /**\n   * @param {?=} event\n   * @return {?}\n   */\n  onDragMove(event) {\n    /** @type {?} */\n    const newPos = this.getEventPosition(event);\n    if (this.viewOptions.animate && !this.viewOptions.animateOnMove) {\n      if (this.moving) {\n        this.sliderElementAnimateClass = false;\n      }\n    }\n    this.moving = true;\n    /** @type {?} */\n    let ceilLimit;\n    /** @type {?} */\n    let floorLimit;\n    /** @type {?} */\n    let floorHandleElement;\n    /** @type {?} */\n    let ceilHandleElement;\n    if (this.viewOptions.rightToLeft) {\n      ceilLimit = this.dragging.lowLimit;\n      floorLimit = this.dragging.highLimit;\n      floorHandleElement = this.maxHandleElement;\n      ceilHandleElement = this.minHandleElement;\n    } else {\n      ceilLimit = this.dragging.highLimit;\n      floorLimit = this.dragging.lowLimit;\n      floorHandleElement = this.minHandleElement;\n      ceilHandleElement = this.maxHandleElement;\n    }\n    /** @type {?} */\n    const isUnderFloorLimit = newPos <= floorLimit;\n    /** @type {?} */\n    const isOverCeilLimit = newPos >= this.maxHandlePosition - ceilLimit;\n    /** @type {?} */\n    let newMinValue;\n    /** @type {?} */\n    let newMaxValue;\n    if (isUnderFloorLimit) {\n      if (floorHandleElement.position === 0) {\n        return;\n      }\n      newMinValue = this.getMinValue(newPos, true, false);\n      newMaxValue = this.getMaxValue(newPos, true, false);\n    } else if (isOverCeilLimit) {\n      if (ceilHandleElement.position === this.maxHandlePosition) {\n        return;\n      }\n      newMaxValue = this.getMaxValue(newPos, true, true);\n      newMinValue = this.getMinValue(newPos, true, true);\n    } else {\n      newMinValue = this.getMinValue(newPos, false, false);\n      newMaxValue = this.getMaxValue(newPos, false, false);\n    }\n    this.positionTrackingBar(newMinValue, newMaxValue);\n  }\n  /**\n   * @param {?} newMinValue\n   * @param {?} newMaxValue\n   * @return {?}\n   */\n  positionTrackingBar(newMinValue, newMaxValue) {\n    if (!ValueHelper.isNullOrUndefined(this.viewOptions.minLimit) && newMinValue < this.viewOptions.minLimit) {\n      newMinValue = this.viewOptions.minLimit;\n      newMaxValue = MathHelper.roundToPrecisionLimit(newMinValue + this.dragging.difference, this.viewOptions.precisionLimit);\n    }\n    if (!ValueHelper.isNullOrUndefined(this.viewOptions.maxLimit) && newMaxValue > this.viewOptions.maxLimit) {\n      newMaxValue = this.viewOptions.maxLimit;\n      newMinValue = MathHelper.roundToPrecisionLimit(newMaxValue - this.dragging.difference, this.viewOptions.precisionLimit);\n    }\n    this.viewLowValue = newMinValue;\n    this.viewHighValue = newMaxValue;\n    this.applyViewChange();\n    this.updateHandles(PointerType.Min, this.valueToPosition(newMinValue));\n    this.updateHandles(PointerType.Max, this.valueToPosition(newMaxValue));\n  }\n  /**\n   * @param {?} newValue\n   * @return {?}\n   */\n  positionTrackingHandle(newValue) {\n    newValue = this.applyMinMaxLimit(newValue);\n    if (this.range) {\n      if (this.viewOptions.pushRange) {\n        newValue = this.applyPushRange(newValue);\n      } else {\n        if (this.viewOptions.noSwitching) {\n          if (this.currentTrackingPointer === PointerType.Min && newValue > this.viewHighValue) {\n            newValue = this.applyMinMaxRange(this.viewHighValue);\n          } else if (this.currentTrackingPointer === PointerType.Max && newValue < this.viewLowValue) {\n            newValue = this.applyMinMaxRange(this.viewLowValue);\n          }\n        }\n        newValue = this.applyMinMaxRange(newValue);\n        /* This is to check if we need to switch the min and max handles */\n        if (this.currentTrackingPointer === PointerType.Min && newValue > this.viewHighValue) {\n          this.viewLowValue = this.viewHighValue;\n          this.applyViewChange();\n          this.updateHandles(PointerType.Min, this.maxHandleElement.position);\n          this.updateAriaAttributes();\n          this.currentTrackingPointer = PointerType.Max;\n          this.minHandleElement.active = false;\n          this.maxHandleElement.active = true;\n          if (this.viewOptions.keyboardSupport) {\n            this.maxHandleElement.focus();\n          }\n        } else if (this.currentTrackingPointer === PointerType.Max && newValue < this.viewLowValue) {\n          this.viewHighValue = this.viewLowValue;\n          this.applyViewChange();\n          this.updateHandles(PointerType.Max, this.minHandleElement.position);\n          this.updateAriaAttributes();\n          this.currentTrackingPointer = PointerType.Min;\n          this.maxHandleElement.active = false;\n          this.minHandleElement.active = true;\n          if (this.viewOptions.keyboardSupport) {\n            this.minHandleElement.focus();\n          }\n        }\n      }\n    }\n    if (this.getCurrentTrackingValue() !== newValue) {\n      if (this.currentTrackingPointer === PointerType.Min) {\n        this.viewLowValue = newValue;\n        this.applyViewChange();\n      } else if (this.currentTrackingPointer === PointerType.Max) {\n        this.viewHighValue = newValue;\n        this.applyViewChange();\n      }\n      this.updateHandles(this.currentTrackingPointer, this.valueToPosition(newValue));\n      this.updateAriaAttributes();\n    }\n  }\n  /**\n   * @param {?} newValue\n   * @return {?}\n   */\n  applyMinMaxLimit(newValue) {\n    if (!ValueHelper.isNullOrUndefined(this.viewOptions.minLimit) && newValue < this.viewOptions.minLimit) {\n      return this.viewOptions.minLimit;\n    }\n    if (!ValueHelper.isNullOrUndefined(this.viewOptions.maxLimit) && newValue > this.viewOptions.maxLimit) {\n      return this.viewOptions.maxLimit;\n    }\n    return newValue;\n  }\n  /**\n   * @param {?} newValue\n   * @return {?}\n   */\n  applyMinMaxRange(newValue) {\n    /** @type {?} */\n    const oppositeValue = this.currentTrackingPointer === PointerType.Min ? this.viewHighValue : this.viewLowValue;\n    /** @type {?} */\n    const difference = Math.abs(newValue - oppositeValue);\n    if (!ValueHelper.isNullOrUndefined(this.viewOptions.minRange)) {\n      if (difference < this.viewOptions.minRange) {\n        if (this.currentTrackingPointer === PointerType.Min) {\n          return MathHelper.roundToPrecisionLimit(this.viewHighValue - this.viewOptions.minRange, this.viewOptions.precisionLimit);\n        } else if (this.currentTrackingPointer === PointerType.Max) {\n          return MathHelper.roundToPrecisionLimit(this.viewLowValue + this.viewOptions.minRange, this.viewOptions.precisionLimit);\n        }\n      }\n    }\n    if (!ValueHelper.isNullOrUndefined(this.viewOptions.maxRange)) {\n      if (difference > this.viewOptions.maxRange) {\n        if (this.currentTrackingPointer === PointerType.Min) {\n          return MathHelper.roundToPrecisionLimit(this.viewHighValue - this.viewOptions.maxRange, this.viewOptions.precisionLimit);\n        } else if (this.currentTrackingPointer === PointerType.Max) {\n          return MathHelper.roundToPrecisionLimit(this.viewLowValue + this.viewOptions.maxRange, this.viewOptions.precisionLimit);\n        }\n      }\n    }\n    return newValue;\n  }\n  /**\n   * @param {?} newValue\n   * @return {?}\n   */\n  applyPushRange(newValue) {\n    /** @type {?} */\n    const difference = this.currentTrackingPointer === PointerType.Min ? this.viewHighValue - newValue : newValue - this.viewLowValue;\n    /** @type {?} */\n    const minRange = !ValueHelper.isNullOrUndefined(this.viewOptions.minRange) ? this.viewOptions.minRange : this.viewOptions.step;\n    /** @type {?} */\n    const maxRange = this.viewOptions.maxRange;\n    // if smaller than minRange\n    if (difference < minRange) {\n      if (this.currentTrackingPointer === PointerType.Min) {\n        this.viewHighValue = MathHelper.roundToPrecisionLimit(Math.min(newValue + minRange, this.viewOptions.ceil), this.viewOptions.precisionLimit);\n        newValue = MathHelper.roundToPrecisionLimit(this.viewHighValue - minRange, this.viewOptions.precisionLimit);\n        this.applyViewChange();\n        this.updateHandles(PointerType.Max, this.valueToPosition(this.viewHighValue));\n      } else if (this.currentTrackingPointer === PointerType.Max) {\n        this.viewLowValue = MathHelper.roundToPrecisionLimit(Math.max(newValue - minRange, this.viewOptions.floor), this.viewOptions.precisionLimit);\n        newValue = MathHelper.roundToPrecisionLimit(this.viewLowValue + minRange, this.viewOptions.precisionLimit);\n        this.applyViewChange();\n        this.updateHandles(PointerType.Min, this.valueToPosition(this.viewLowValue));\n      }\n      this.updateAriaAttributes();\n    } else if (!ValueHelper.isNullOrUndefined(maxRange) && difference > maxRange) {\n      // if greater than maxRange\n      if (this.currentTrackingPointer === PointerType.Min) {\n        this.viewHighValue = MathHelper.roundToPrecisionLimit(newValue + maxRange, this.viewOptions.precisionLimit);\n        this.applyViewChange();\n        this.updateHandles(PointerType.Max, this.valueToPosition(this.viewHighValue));\n      } else if (this.currentTrackingPointer === PointerType.Max) {\n        this.viewLowValue = MathHelper.roundToPrecisionLimit(newValue - maxRange, this.viewOptions.precisionLimit);\n        this.applyViewChange();\n        this.updateHandles(PointerType.Min, this.valueToPosition(this.viewLowValue));\n      }\n      this.updateAriaAttributes();\n    }\n    return newValue;\n  }\n  /**\n   * @return {?}\n   */\n  getChangeContext() {\n    /** @type {?} */\n    const changeContext = new ChangeContext();\n    changeContext.pointerType = this.currentTrackingPointer;\n    changeContext.value = +this.value;\n    if (this.range) {\n      changeContext.highValue = +this.highValue;\n    }\n    return changeContext;\n  }\n}\nSliderComponent.ɵfac = function SliderComponent_Factory(t) {\n  return new (t || SliderComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone));\n};\nSliderComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: SliderComponent,\n  selectors: [[\"ngx-slider\"]],\n  contentQueries: function SliderComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, _c0, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.tooltipTemplate = _t.first);\n    }\n  },\n  viewQuery: function SliderComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(_c1, 5, SliderElementDirective);\n      ɵngcc0.ɵɵviewQuery(_c2, 5, SliderElementDirective);\n      ɵngcc0.ɵɵviewQuery(_c3, 5, SliderElementDirective);\n      ɵngcc0.ɵɵviewQuery(_c4, 5, SliderElementDirective);\n      ɵngcc0.ɵɵviewQuery(_c5, 5, SliderHandleDirective);\n      ɵngcc0.ɵɵviewQuery(_c6, 5, SliderHandleDirective);\n      ɵngcc0.ɵɵviewQuery(_c7, 5, SliderLabelDirective);\n      ɵngcc0.ɵɵviewQuery(_c8, 5, SliderLabelDirective);\n      ɵngcc0.ɵɵviewQuery(_c9, 5, SliderLabelDirective);\n      ɵngcc0.ɵɵviewQuery(_c10, 5, SliderLabelDirective);\n      ɵngcc0.ɵɵviewQuery(_c11, 5, SliderLabelDirective);\n      ɵngcc0.ɵɵviewQuery(_c12, 5, SliderElementDirective);\n    }\n    if (rf & 2) {\n      let _t;\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.leftOuterSelectionBarElement = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.rightOuterSelectionBarElement = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.fullBarElement = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.selectionBarElement = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.minHandleElement = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.maxHandleElement = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.floorLabelElement = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.ceilLabelElement = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.minHandleLabelElement = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.maxHandleLabelElement = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.combinedLabelElement = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.ticksElement = _t.first);\n    }\n  },\n  hostAttrs: [1, \"ngx-slider\"],\n  hostVars: 8,\n  hostBindings: function SliderComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"resize\", function SliderComponent_resize_HostBindingHandler($event) {\n        return ctx.onResize($event);\n      }, false, ɵngcc0.ɵɵresolveWindow);\n    }\n    if (rf & 2) {\n      ɵngcc0.ɵɵattribute(\"disabled\", ctx.sliderElementDisabledAttr)(\"aria-label\", ctx.sliderElementAriaLabel);\n      ɵngcc0.ɵɵclassProp(\"vertical\", ctx.sliderElementVerticalClass)(\"animate\", ctx.sliderElementAnimateClass)(\"with-legend\", ctx.sliderElementWithLegendClass);\n    }\n  },\n  inputs: {\n    value: \"value\",\n    highValue: \"highValue\",\n    options: \"options\",\n    manualRefresh: \"manualRefresh\",\n    triggerFocus: \"triggerFocus\"\n  },\n  outputs: {\n    valueChange: \"valueChange\",\n    highValueChange: \"highValueChange\",\n    userChangeStart: \"userChangeStart\",\n    userChange: \"userChange\",\n    userChangeEnd: \"userChangeEnd\"\n  },\n  features: [ɵngcc0.ɵɵProvidersFeature([NGX_SLIDER_CONTROL_VALUE_ACCESSOR]), ɵngcc0.ɵɵNgOnChangesFeature],\n  decls: 29,\n  vars: 13,\n  consts: [[\"ngxSliderElement\", \"\", 1, \"ngx-slider-span\", \"ngx-slider-bar-wrapper\", \"ngx-slider-left-out-selection\"], [\"leftOuterSelectionBar\", \"\"], [1, \"ngx-slider-span\", \"ngx-slider-bar\"], [\"ngxSliderElement\", \"\", 1, \"ngx-slider-span\", \"ngx-slider-bar-wrapper\", \"ngx-slider-right-out-selection\"], [\"rightOuterSelectionBar\", \"\"], [\"ngxSliderElement\", \"\", 1, \"ngx-slider-span\", \"ngx-slider-bar-wrapper\", \"ngx-slider-full-bar\"], [\"fullBar\", \"\"], [\"ngxSliderElement\", \"\", 1, \"ngx-slider-span\", \"ngx-slider-bar-wrapper\", \"ngx-slider-selection-bar\"], [\"selectionBar\", \"\"], [1, \"ngx-slider-span\", \"ngx-slider-bar\", \"ngx-slider-selection\", 3, \"ngStyle\"], [\"ngxSliderHandle\", \"\", 1, \"ngx-slider-span\", \"ngx-slider-pointer\", \"ngx-slider-pointer-min\", 3, \"ngStyle\"], [\"minHandle\", \"\"], [\"ngxSliderHandle\", \"\", 1, \"ngx-slider-span\", \"ngx-slider-pointer\", \"ngx-slider-pointer-max\", 3, \"ngStyle\"], [\"maxHandle\", \"\"], [\"ngxSliderLabel\", \"\", 1, \"ngx-slider-span\", \"ngx-slider-bubble\", \"ngx-slider-limit\", \"ngx-slider-floor\"], [\"floorLabel\", \"\"], [\"ngxSliderLabel\", \"\", 1, \"ngx-slider-span\", \"ngx-slider-bubble\", \"ngx-slider-limit\", \"ngx-slider-ceil\"], [\"ceilLabel\", \"\"], [\"ngxSliderLabel\", \"\", 1, \"ngx-slider-span\", \"ngx-slider-bubble\", \"ngx-slider-model-value\"], [\"minHandleLabel\", \"\"], [\"ngxSliderLabel\", \"\", 1, \"ngx-slider-span\", \"ngx-slider-bubble\", \"ngx-slider-model-high\"], [\"maxHandleLabel\", \"\"], [\"ngxSliderLabel\", \"\", 1, \"ngx-slider-span\", \"ngx-slider-bubble\", \"ngx-slider-combined\"], [\"combinedLabel\", \"\"], [\"ngxSliderElement\", \"\", 1, \"ngx-slider-ticks\", 3, \"hidden\"], [\"ticksElement\", \"\"], [\"class\", \"ngx-slider-tick\", 3, \"ngClass\", \"ngStyle\", 4, \"ngFor\", \"ngForOf\"], [1, \"ngx-slider-tick\", 3, \"ngClass\", \"ngStyle\"], [3, \"template\", \"tooltip\", \"placement\"], [\"class\", \"ngx-slider-span ngx-slider-tick-value\", 3, \"template\", \"tooltip\", \"placement\", \"content\", 4, \"ngIf\"], [\"class\", \"ngx-slider-span ngx-slider-tick-legend\", 3, \"innerHTML\", 4, \"ngIf\"], [1, \"ngx-slider-span\", \"ngx-slider-tick-value\", 3, \"template\", \"tooltip\", \"placement\", \"content\"], [1, \"ngx-slider-span\", \"ngx-slider-tick-legend\", 3, \"innerHTML\"]],\n  template: function SliderComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementStart(0, \"span\", 0, 1);\n      ɵngcc0.ɵɵelement(2, \"span\", 2);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementStart(3, \"span\", 3, 4);\n      ɵngcc0.ɵɵelement(5, \"span\", 2);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementStart(6, \"span\", 5, 6);\n      ɵngcc0.ɵɵelement(8, \"span\", 2);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementStart(9, \"span\", 7, 8);\n      ɵngcc0.ɵɵelement(11, \"span\", 9);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelement(12, \"span\", 10, 11)(14, \"span\", 12, 13)(16, \"span\", 14, 15)(18, \"span\", 16, 17)(20, \"span\", 18, 19)(22, \"span\", 20, 21)(24, \"span\", 22, 23);\n      ɵngcc0.ɵɵelementStart(26, \"span\", 24, 25);\n      ɵngcc0.ɵɵtemplate(28, SliderComponent_span_28_Template, 4, 9, \"span\", 26);\n      ɵngcc0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      ɵngcc0.ɵɵadvance(6);\n      ɵngcc0.ɵɵclassProp(\"ngx-slider-transparent\", ctx.fullBarTransparentClass);\n      ɵngcc0.ɵɵadvance(3);\n      ɵngcc0.ɵɵclassProp(\"ngx-slider-draggable\", ctx.selectionBarDraggableClass);\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"ngStyle\", ctx.barStyle);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngStyle\", ctx.minPointerStyle);\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵstyleProp(\"display\", ctx.range ? \"inherit\" : \"none\");\n      ɵngcc0.ɵɵproperty(\"ngStyle\", ctx.maxPointerStyle);\n      ɵngcc0.ɵɵadvance(12);\n      ɵngcc0.ɵɵclassProp(\"ngx-slider-ticks-values-under\", ctx.ticksUnderValuesClass);\n      ɵngcc0.ɵɵproperty(\"hidden\", !ctx.showTicks);\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.ticks);\n    }\n  },\n  dependencies: function () {\n    return [ɵngcc1.NgClass, ɵngcc1.NgForOf, ɵngcc1.NgIf, ɵngcc1.NgStyle, SliderElementDirective, SliderHandleDirective, SliderLabelDirective, TooltipWrapperComponent];\n  },\n  styles: [\".ngx-slider{display:inline-block;position:relative;height:4px;width:100%;margin:35px 0 15px;vertical-align:middle;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;touch-action:pan-y}  .ngx-slider.with-legend{margin-bottom:40px}  .ngx-slider[disabled]{cursor:not-allowed}  .ngx-slider[disabled] .ngx-slider-pointer{cursor:not-allowed;background-color:#d8e0f3}  .ngx-slider[disabled] .ngx-slider-draggable{cursor:not-allowed}  .ngx-slider[disabled] .ngx-slider-selection{background:#8b91a2}  .ngx-slider[disabled] .ngx-slider-tick{cursor:not-allowed}  .ngx-slider[disabled] .ngx-slider-tick.ngx-slider-selected{background:#8b91a2}  .ngx-slider .ngx-slider-span{white-space:nowrap;position:absolute;display:inline-block}  .ngx-slider .ngx-slider-base{width:100%;height:100%;padding:0}  .ngx-slider .ngx-slider-bar-wrapper{left:0;box-sizing:border-box;margin-top:-16px;padding-top:16px;width:100%;height:32px;z-index:1}  .ngx-slider .ngx-slider-draggable{cursor:move}  .ngx-slider .ngx-slider-bar{left:0;width:100%;height:4px;z-index:1;background:#d8e0f3;border-radius:2px}  .ngx-slider .ngx-slider-bar-wrapper.ngx-slider-transparent .ngx-slider-bar{background:0 0}  .ngx-slider .ngx-slider-bar-wrapper.ngx-slider-left-out-selection .ngx-slider-bar{background:#df002d}  .ngx-slider .ngx-slider-bar-wrapper.ngx-slider-right-out-selection .ngx-slider-bar{background:#03a688}  .ngx-slider .ngx-slider-selection{z-index:2;background:#0db9f0;border-radius:2px}  .ngx-slider .ngx-slider-pointer{cursor:pointer;width:32px;height:32px;top:-14px;background-color:#0db9f0;z-index:3;border-radius:16px}  .ngx-slider .ngx-slider-pointer:after{content:'';width:8px;height:8px;position:absolute;top:12px;left:12px;border-radius:4px;background:#fff}  .ngx-slider .ngx-slider-pointer:hover:after{background-color:#fff}  .ngx-slider .ngx-slider-pointer.ngx-slider-active{z-index:4}  .ngx-slider .ngx-slider-pointer.ngx-slider-active:after{background-color:#451aff}  .ngx-slider .ngx-slider-bubble{cursor:default;bottom:16px;padding:1px 3px;color:#55637d;font-size:16px}  .ngx-slider .ngx-slider-bubble.ngx-slider-limit{color:#55637d}  .ngx-slider .ngx-slider-ticks{box-sizing:border-box;width:100%;height:0;position:absolute;left:0;top:-3px;margin:0;z-index:1;list-style:none}  .ngx-slider .ngx-slider-ticks-values-under .ngx-slider-tick-value{top:auto;bottom:-36px}  .ngx-slider .ngx-slider-tick{text-align:center;cursor:pointer;width:10px;height:10px;background:#d8e0f3;border-radius:50%;position:absolute;top:0;left:0;margin-left:11px}  .ngx-slider .ngx-slider-tick.ngx-slider-selected{background:#0db9f0}  .ngx-slider .ngx-slider-tick-value{position:absolute;top:-34px;-webkit-transform:translate(-50%,0);transform:translate(-50%,0)}  .ngx-slider .ngx-slider-tick-legend{position:absolute;top:24px;-webkit-transform:translate(-50%,0);transform:translate(-50%,0);max-width:50px;white-space:normal}  .ngx-slider.vertical{position:relative;width:4px;height:100%;margin:0 20px;padding:0;vertical-align:baseline;touch-action:pan-x}  .ngx-slider.vertical .ngx-slider-base{width:100%;height:100%;padding:0}  .ngx-slider.vertical .ngx-slider-bar-wrapper{top:auto;left:0;margin:0 0 0 -16px;padding:0 0 0 16px;height:100%;width:32px}  .ngx-slider.vertical .ngx-slider-bar{bottom:0;left:auto;width:4px;height:100%}  .ngx-slider.vertical .ngx-slider-pointer{left:-14px!important;top:auto;bottom:0}  .ngx-slider.vertical .ngx-slider-bubble{left:16px!important;bottom:0}  .ngx-slider.vertical .ngx-slider-ticks{height:100%;width:0;left:-3px;top:0;z-index:1}  .ngx-slider.vertical .ngx-slider-tick{vertical-align:middle;margin-left:auto;margin-top:11px}  .ngx-slider.vertical .ngx-slider-tick-value{left:24px;top:auto;-webkit-transform:translate(0,-28%);transform:translate(0,-28%)}  .ngx-slider.vertical .ngx-slider-tick-legend{top:auto;right:24px;-webkit-transform:translate(0,-28%);transform:translate(0,-28%);max-width:none;white-space:nowrap}  .ngx-slider.vertical .ngx-slider-ticks-values-under .ngx-slider-tick-value{bottom:auto;left:auto;right:24px}  .ngx-slider *{transition:none}  .ngx-slider.animate .ngx-slider-bar-wrapper{transition:.3s linear}  .ngx-slider.animate .ngx-slider-selection{transition:background-color .3s linear}  .ngx-slider.animate .ngx-slider-pointer{transition:.3s linear}  .ngx-slider.animate .ngx-slider-pointer:after{transition:.3s linear}  .ngx-slider.animate .ngx-slider-bubble{transition:.3s linear}  .ngx-slider.animate .ngx-slider-bubble.ngx-slider-limit{transition:opacity .3s linear}  .ngx-slider.animate .ngx-slider-bubble.ngx-slider-combined{transition:opacity .3s linear}  .ngx-slider.animate .ngx-slider-tick{transition:background-color .3s linear}\"]\n});\n/** @nocollapse */\nSliderComponent.ctorParameters = () => [{\n  type: Renderer2\n}, {\n  type: ElementRef\n}, {\n  type: ChangeDetectorRef\n}, {\n  type: NgZone\n}];\nSliderComponent.propDecorators = {\n  value: [{\n    type: Input\n  }],\n  valueChange: [{\n    type: Output\n  }],\n  highValue: [{\n    type: Input\n  }],\n  highValueChange: [{\n    type: Output\n  }],\n  options: [{\n    type: Input\n  }],\n  userChangeStart: [{\n    type: Output\n  }],\n  userChange: [{\n    type: Output\n  }],\n  userChangeEnd: [{\n    type: Output\n  }],\n  manualRefresh: [{\n    type: Input\n  }],\n  triggerFocus: [{\n    type: Input\n  }],\n  leftOuterSelectionBarElement: [{\n    type: ViewChild,\n    args: ['leftOuterSelectionBar', {\n      read: SliderElementDirective\n    }]\n  }],\n  rightOuterSelectionBarElement: [{\n    type: ViewChild,\n    args: ['rightOuterSelectionBar', {\n      read: SliderElementDirective\n    }]\n  }],\n  fullBarElement: [{\n    type: ViewChild,\n    args: ['fullBar', {\n      read: SliderElementDirective\n    }]\n  }],\n  selectionBarElement: [{\n    type: ViewChild,\n    args: ['selectionBar', {\n      read: SliderElementDirective\n    }]\n  }],\n  minHandleElement: [{\n    type: ViewChild,\n    args: ['minHandle', {\n      read: SliderHandleDirective\n    }]\n  }],\n  maxHandleElement: [{\n    type: ViewChild,\n    args: ['maxHandle', {\n      read: SliderHandleDirective\n    }]\n  }],\n  floorLabelElement: [{\n    type: ViewChild,\n    args: ['floorLabel', {\n      read: SliderLabelDirective\n    }]\n  }],\n  ceilLabelElement: [{\n    type: ViewChild,\n    args: ['ceilLabel', {\n      read: SliderLabelDirective\n    }]\n  }],\n  minHandleLabelElement: [{\n    type: ViewChild,\n    args: ['minHandleLabel', {\n      read: SliderLabelDirective\n    }]\n  }],\n  maxHandleLabelElement: [{\n    type: ViewChild,\n    args: ['maxHandleLabel', {\n      read: SliderLabelDirective\n    }]\n  }],\n  combinedLabelElement: [{\n    type: ViewChild,\n    args: ['combinedLabel', {\n      read: SliderLabelDirective\n    }]\n  }],\n  ticksElement: [{\n    type: ViewChild,\n    args: ['ticksElement', {\n      read: SliderElementDirective\n    }]\n  }],\n  tooltipTemplate: [{\n    type: ContentChild,\n    args: ['tooltipTemplate']\n  }],\n  sliderElementVerticalClass: [{\n    type: HostBinding,\n    args: ['class.vertical']\n  }],\n  sliderElementAnimateClass: [{\n    type: HostBinding,\n    args: ['class.animate']\n  }],\n  sliderElementWithLegendClass: [{\n    type: HostBinding,\n    args: ['class.with-legend']\n  }],\n  sliderElementDisabledAttr: [{\n    type: HostBinding,\n    args: ['attr.disabled']\n  }],\n  sliderElementAriaLabel: [{\n    type: HostBinding,\n    args: ['attr.aria-label']\n  }],\n  onResize: [{\n    type: HostListener,\n    args: ['window:resize', ['$event']]\n  }]\n};\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SliderComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-slider',\n      template: `<!-- // 0 Left selection bar outside two handles -->\n<span ngxSliderElement #leftOuterSelectionBar class=\"ngx-slider-span ngx-slider-bar-wrapper ngx-slider-left-out-selection\">\n  <span class=\"ngx-slider-span ngx-slider-bar\"></span>\n</span>\n<!-- // 1 Right selection bar outside two handles -->\n<span ngxSliderElement #rightOuterSelectionBar class=\"ngx-slider-span ngx-slider-bar-wrapper ngx-slider-right-out-selection\">\n  <span class=\"ngx-slider-span ngx-slider-bar\"></span>\n</span>\n<!-- // 2 The whole slider bar -->\n<span ngxSliderElement #fullBar [class.ngx-slider-transparent]=\"fullBarTransparentClass\" class=\"ngx-slider-span ngx-slider-bar-wrapper ngx-slider-full-bar\">\n  <span class=\"ngx-slider-span ngx-slider-bar\"></span>\n</span>\n<!-- // 3 Selection bar between two handles -->\n<span ngxSliderElement #selectionBar [class.ngx-slider-draggable]=\"selectionBarDraggableClass\" class=\"ngx-slider-span ngx-slider-bar-wrapper ngx-slider-selection-bar\">\n  <span class=\"ngx-slider-span ngx-slider-bar ngx-slider-selection\" [ngStyle]=\"barStyle\"></span>\n</span>\n<!-- // 4 Low slider handle -->\n<span ngxSliderHandle #minHandle class=\"ngx-slider-span ngx-slider-pointer ngx-slider-pointer-min\" [ngStyle]=minPointerStyle></span>\n<!-- // 5 High slider handle -->\n<span ngxSliderHandle #maxHandle [style.display]=\"range ? 'inherit' : 'none'\" class=\"ngx-slider-span ngx-slider-pointer ngx-slider-pointer-max\" [ngStyle]=maxPointerStyle></span>\n<!-- // 6 Floor label -->\n<span ngxSliderLabel #floorLabel class=\"ngx-slider-span ngx-slider-bubble ngx-slider-limit ngx-slider-floor\"></span>\n<!-- // 7 Ceiling label -->\n<span ngxSliderLabel #ceilLabel class=\"ngx-slider-span ngx-slider-bubble ngx-slider-limit ngx-slider-ceil\"></span>\n<!-- // 8 Label above the low slider handle -->\n<span ngxSliderLabel #minHandleLabel class=\"ngx-slider-span ngx-slider-bubble ngx-slider-model-value\"></span>\n<!-- // 9 Label above the high slider handle -->\n<span ngxSliderLabel #maxHandleLabel class=\"ngx-slider-span ngx-slider-bubble ngx-slider-model-high\"></span>\n<!-- // 10 Combined range label when the slider handles are close ex. 15 - 17 -->\n<span ngxSliderLabel #combinedLabel class=\"ngx-slider-span ngx-slider-bubble ngx-slider-combined\"></span>\n<!-- // 11 The ticks -->\n<span ngxSliderElement #ticksElement [hidden]=\"!showTicks\" [class.ngx-slider-ticks-values-under]=\"ticksUnderValuesClass\" class=\"ngx-slider-ticks\">\n  <span *ngFor=\"let t of ticks\" class=\"ngx-slider-tick\" [ngClass]=\"{'ngx-slider-selected': t.selected}\" [ngStyle]=\"t.style\">\n    <ngx-slider-tooltip-wrapper [template]=\"tooltipTemplate\" [tooltip]=\"t.tooltip\" [placement]=\"t.tooltipPlacement\"></ngx-slider-tooltip-wrapper>\n    <ngx-slider-tooltip-wrapper *ngIf=\"t.value != null\" class=\"ngx-slider-span ngx-slider-tick-value\"\n        [template]=\"tooltipTemplate\" [tooltip]=\"t.valueTooltip\" [placement]=\"t.valueTooltipPlacement\" [content]=\"t.value\"></ngx-slider-tooltip-wrapper>\n    <span *ngIf=\"t.legend != null\" class=\"ngx-slider-span ngx-slider-tick-legend\" [innerHTML]=\"t.legend\"></span>\n  </span>\n</span>`,\n      host: {\n        class: 'ngx-slider'\n      },\n      providers: [NGX_SLIDER_CONTROL_VALUE_ACCESSOR],\n      styles: [\"::ng-deep .ngx-slider{display:inline-block;position:relative;height:4px;width:100%;margin:35px 0 15px;vertical-align:middle;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;touch-action:pan-y}::ng-deep .ngx-slider.with-legend{margin-bottom:40px}::ng-deep .ngx-slider[disabled]{cursor:not-allowed}::ng-deep .ngx-slider[disabled] .ngx-slider-pointer{cursor:not-allowed;background-color:#d8e0f3}::ng-deep .ngx-slider[disabled] .ngx-slider-draggable{cursor:not-allowed}::ng-deep .ngx-slider[disabled] .ngx-slider-selection{background:#8b91a2}::ng-deep .ngx-slider[disabled] .ngx-slider-tick{cursor:not-allowed}::ng-deep .ngx-slider[disabled] .ngx-slider-tick.ngx-slider-selected{background:#8b91a2}::ng-deep .ngx-slider .ngx-slider-span{white-space:nowrap;position:absolute;display:inline-block}::ng-deep .ngx-slider .ngx-slider-base{width:100%;height:100%;padding:0}::ng-deep .ngx-slider .ngx-slider-bar-wrapper{left:0;box-sizing:border-box;margin-top:-16px;padding-top:16px;width:100%;height:32px;z-index:1}::ng-deep .ngx-slider .ngx-slider-draggable{cursor:move}::ng-deep .ngx-slider .ngx-slider-bar{left:0;width:100%;height:4px;z-index:1;background:#d8e0f3;border-radius:2px}::ng-deep .ngx-slider .ngx-slider-bar-wrapper.ngx-slider-transparent .ngx-slider-bar{background:0 0}::ng-deep .ngx-slider .ngx-slider-bar-wrapper.ngx-slider-left-out-selection .ngx-slider-bar{background:#df002d}::ng-deep .ngx-slider .ngx-slider-bar-wrapper.ngx-slider-right-out-selection .ngx-slider-bar{background:#03a688}::ng-deep .ngx-slider .ngx-slider-selection{z-index:2;background:#0db9f0;border-radius:2px}::ng-deep .ngx-slider .ngx-slider-pointer{cursor:pointer;width:32px;height:32px;top:-14px;background-color:#0db9f0;z-index:3;border-radius:16px}::ng-deep .ngx-slider .ngx-slider-pointer:after{content:'';width:8px;height:8px;position:absolute;top:12px;left:12px;border-radius:4px;background:#fff}::ng-deep .ngx-slider .ngx-slider-pointer:hover:after{background-color:#fff}::ng-deep .ngx-slider .ngx-slider-pointer.ngx-slider-active{z-index:4}::ng-deep .ngx-slider .ngx-slider-pointer.ngx-slider-active:after{background-color:#451aff}::ng-deep .ngx-slider .ngx-slider-bubble{cursor:default;bottom:16px;padding:1px 3px;color:#55637d;font-size:16px}::ng-deep .ngx-slider .ngx-slider-bubble.ngx-slider-limit{color:#55637d}::ng-deep .ngx-slider .ngx-slider-ticks{box-sizing:border-box;width:100%;height:0;position:absolute;left:0;top:-3px;margin:0;z-index:1;list-style:none}::ng-deep .ngx-slider .ngx-slider-ticks-values-under .ngx-slider-tick-value{top:auto;bottom:-36px}::ng-deep .ngx-slider .ngx-slider-tick{text-align:center;cursor:pointer;width:10px;height:10px;background:#d8e0f3;border-radius:50%;position:absolute;top:0;left:0;margin-left:11px}::ng-deep .ngx-slider .ngx-slider-tick.ngx-slider-selected{background:#0db9f0}::ng-deep .ngx-slider .ngx-slider-tick-value{position:absolute;top:-34px;-webkit-transform:translate(-50%,0);transform:translate(-50%,0)}::ng-deep .ngx-slider .ngx-slider-tick-legend{position:absolute;top:24px;-webkit-transform:translate(-50%,0);transform:translate(-50%,0);max-width:50px;white-space:normal}::ng-deep .ngx-slider.vertical{position:relative;width:4px;height:100%;margin:0 20px;padding:0;vertical-align:baseline;touch-action:pan-x}::ng-deep .ngx-slider.vertical .ngx-slider-base{width:100%;height:100%;padding:0}::ng-deep .ngx-slider.vertical .ngx-slider-bar-wrapper{top:auto;left:0;margin:0 0 0 -16px;padding:0 0 0 16px;height:100%;width:32px}::ng-deep .ngx-slider.vertical .ngx-slider-bar{bottom:0;left:auto;width:4px;height:100%}::ng-deep .ngx-slider.vertical .ngx-slider-pointer{left:-14px!important;top:auto;bottom:0}::ng-deep .ngx-slider.vertical .ngx-slider-bubble{left:16px!important;bottom:0}::ng-deep .ngx-slider.vertical .ngx-slider-ticks{height:100%;width:0;left:-3px;top:0;z-index:1}::ng-deep .ngx-slider.vertical .ngx-slider-tick{vertical-align:middle;margin-left:auto;margin-top:11px}::ng-deep .ngx-slider.vertical .ngx-slider-tick-value{left:24px;top:auto;-webkit-transform:translate(0,-28%);transform:translate(0,-28%)}::ng-deep .ngx-slider.vertical .ngx-slider-tick-legend{top:auto;right:24px;-webkit-transform:translate(0,-28%);transform:translate(0,-28%);max-width:none;white-space:nowrap}::ng-deep .ngx-slider.vertical .ngx-slider-ticks-values-under .ngx-slider-tick-value{bottom:auto;left:auto;right:24px}::ng-deep .ngx-slider *{transition:none}::ng-deep .ngx-slider.animate .ngx-slider-bar-wrapper{transition:.3s linear}::ng-deep .ngx-slider.animate .ngx-slider-selection{transition:background-color .3s linear}::ng-deep .ngx-slider.animate .ngx-slider-pointer{transition:.3s linear}::ng-deep .ngx-slider.animate .ngx-slider-pointer:after{transition:.3s linear}::ng-deep .ngx-slider.animate .ngx-slider-bubble{transition:.3s linear}::ng-deep .ngx-slider.animate .ngx-slider-bubble.ngx-slider-limit{transition:opacity .3s linear}::ng-deep .ngx-slider.animate .ngx-slider-bubble.ngx-slider-combined{transition:opacity .3s linear}::ng-deep .ngx-slider.animate .ngx-slider-tick{transition:background-color .3s linear}\"]\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.Renderer2\n    }, {\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: ɵngcc0.NgZone\n    }];\n  }, {\n    value: [{\n      type: Input\n    }],\n    valueChange: [{\n      type: Output\n    }],\n    highValue: [{\n      type: Input\n    }],\n    highValueChange: [{\n      type: Output\n    }],\n    options: [{\n      type: Input\n    }],\n    userChangeStart: [{\n      type: Output\n    }],\n    userChange: [{\n      type: Output\n    }],\n    userChangeEnd: [{\n      type: Output\n    }],\n    sliderElementVerticalClass: [{\n      type: HostBinding,\n      args: ['class.vertical']\n    }],\n    sliderElementAnimateClass: [{\n      type: HostBinding,\n      args: ['class.animate']\n    }],\n    sliderElementWithLegendClass: [{\n      type: HostBinding,\n      args: ['class.with-legend']\n    }],\n    sliderElementDisabledAttr: [{\n      type: HostBinding,\n      args: ['attr.disabled']\n    }],\n    sliderElementAriaLabel: [{\n      type: HostBinding,\n      args: ['attr.aria-label']\n    }],\n    manualRefresh: [{\n      type: Input\n    }],\n    triggerFocus: [{\n      type: Input\n    }],\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onResize: [{\n      type: HostListener,\n      args: ['window:resize', ['$event']]\n    }],\n    leftOuterSelectionBarElement: [{\n      type: ViewChild,\n      args: ['leftOuterSelectionBar', {\n        read: SliderElementDirective\n      }]\n    }],\n    rightOuterSelectionBarElement: [{\n      type: ViewChild,\n      args: ['rightOuterSelectionBar', {\n        read: SliderElementDirective\n      }]\n    }],\n    fullBarElement: [{\n      type: ViewChild,\n      args: ['fullBar', {\n        read: SliderElementDirective\n      }]\n    }],\n    selectionBarElement: [{\n      type: ViewChild,\n      args: ['selectionBar', {\n        read: SliderElementDirective\n      }]\n    }],\n    minHandleElement: [{\n      type: ViewChild,\n      args: ['minHandle', {\n        read: SliderHandleDirective\n      }]\n    }],\n    maxHandleElement: [{\n      type: ViewChild,\n      args: ['maxHandle', {\n        read: SliderHandleDirective\n      }]\n    }],\n    floorLabelElement: [{\n      type: ViewChild,\n      args: ['floorLabel', {\n        read: SliderLabelDirective\n      }]\n    }],\n    ceilLabelElement: [{\n      type: ViewChild,\n      args: ['ceilLabel', {\n        read: SliderLabelDirective\n      }]\n    }],\n    minHandleLabelElement: [{\n      type: ViewChild,\n      args: ['minHandleLabel', {\n        read: SliderLabelDirective\n      }]\n    }],\n    maxHandleLabelElement: [{\n      type: ViewChild,\n      args: ['maxHandleLabel', {\n        read: SliderLabelDirective\n      }]\n    }],\n    combinedLabelElement: [{\n      type: ViewChild,\n      args: ['combinedLabel', {\n        read: SliderLabelDirective\n      }]\n    }],\n    ticksElement: [{\n      type: ViewChild,\n      args: ['ticksElement', {\n        read: SliderElementDirective\n      }]\n    }],\n    tooltipTemplate: [{\n      type: ContentChild,\n      args: ['tooltipTemplate']\n    }]\n  });\n})();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nclass TooltipWrapperComponent {}\nTooltipWrapperComponent.ɵfac = function TooltipWrapperComponent_Factory(t) {\n  return new (t || TooltipWrapperComponent)();\n};\nTooltipWrapperComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: TooltipWrapperComponent,\n  selectors: [[\"ngx-slider-tooltip-wrapper\"]],\n  inputs: {\n    template: \"template\",\n    tooltip: \"tooltip\",\n    placement: \"placement\",\n    content: \"content\"\n  },\n  decls: 2,\n  vars: 2,\n  consts: [[4, \"ngIf\"], [4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [1, \"ngx-slider-inner-tooltip\"]],\n  template: function TooltipWrapperComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵtemplate(0, TooltipWrapperComponent_ng_container_0_Template, 2, 6, \"ng-container\", 0);\n      ɵngcc0.ɵɵtemplate(1, TooltipWrapperComponent_ng_container_1_Template, 3, 3, \"ng-container\", 0);\n    }\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.template);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.template);\n    }\n  },\n  dependencies: [ɵngcc1.NgIf, ɵngcc1.NgTemplateOutlet],\n  styles: [\".ngx-slider-inner-tooltip[_ngcontent-%COMP%]{height:100%}\"]\n});\nTooltipWrapperComponent.propDecorators = {\n  template: [{\n    type: Input\n  }],\n  tooltip: [{\n    type: Input\n  }],\n  placement: [{\n    type: Input\n  }],\n  content: [{\n    type: Input\n  }]\n};\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TooltipWrapperComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-slider-tooltip-wrapper',\n      template: `<ng-container *ngIf=\"template\">\n  <ng-template *ngTemplateOutlet=\"template; context: {tooltip: tooltip, placement: placement, content: content}\"></ng-template>\n</ng-container>\n\n<ng-container *ngIf=\"!template\">\n  <div class=\"ngx-slider-inner-tooltip\" [attr.title]=\"tooltip\" [attr.data-tooltip-placement]=\"placement\">\n    {{content}}\n  </div>\n</ng-container>`,\n      styles: [\".ngx-slider-inner-tooltip{height:100%}\"]\n    }]\n  }], null, {\n    template: [{\n      type: Input\n    }],\n    tooltip: [{\n      type: Input\n    }],\n    placement: [{\n      type: Input\n    }],\n    content: [{\n      type: Input\n    }]\n  });\n})();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * NgxSlider module\n *\n * The module exports the slider component\n */\nclass NgxSliderModule {}\nNgxSliderModule.ɵfac = function NgxSliderModule_Factory(t) {\n  return new (t || NgxSliderModule)();\n};\nNgxSliderModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n  type: NgxSliderModule\n});\nNgxSliderModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n  imports: [CommonModule]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgxSliderModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      declarations: [SliderComponent, SliderElementDirective, SliderHandleDirective, SliderLabelDirective, TooltipWrapperComponent],\n      exports: [SliderComponent]\n    }]\n  }], null, null);\n})();\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgxSliderModule, {\n    declarations: function () {\n      return [SliderComponent, SliderElementDirective, SliderHandleDirective, SliderLabelDirective, TooltipWrapperComponent];\n    },\n    imports: function () {\n      return [CommonModule];\n    },\n    exports: function () {\n      return [SliderComponent];\n    }\n  });\n})();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\nexport { NgxSliderModule, ChangeContext, PointerType, LabelType, Options, SliderElementDirective as ɵb, SliderHandleDirective as ɵc, SliderLabelDirective as ɵd, SliderComponent as ɵa, TooltipWrapperComponent as ɵe };","map":{"version":3,"names":["Subject","throttleTime","tap","distinctUntilChanged","filter","supportsPassiveEvents","Directive","ElementRef","Renderer2","HostBinding","ChangeDetectorRef","Component","ViewChild","HostListener","Input","EventEmitter","Output","ContentChild","forwardRef","NgZone","NgModule","NG_VALUE_ACCESSOR","CommonModule","ɵngcc0","ɵngcc1","_c0","_c1","_c2","_c3","_c4","_c5","_c6","_c7","_c8","_c9","_c10","_c11","_c12","SliderComponent_span_28_ngx_slider_tooltip_wrapper_2_Template","rf","ctx","ɵɵelement","t_r13","ɵɵnextContext","$implicit","ctx_r14","ɵɵproperty","tooltipTemplate","valueTooltip","valueTooltipPlacement","value","SliderComponent_span_28_span_3_Template","legend","ɵɵsanitizeHtml","_c13","a0","SliderComponent_span_28_Template","ɵɵelementStart","ɵɵtemplate","ɵɵelementEnd","ctx_r12","ɵɵpureFunction1","selected","style","ɵɵadvance","tooltip","tooltipPlacement","TooltipWrapperComponent_ng_container_0_1_ng_template_0_Template","TooltipWrapperComponent_ng_container_0_1_Template","_c14","a1","a2","placement","content","TooltipWrapperComponent_ng_container_0_Template","ɵɵelementContainerStart","ɵɵelementContainerEnd","ctx_r0","template","ɵɵpureFunction3","TooltipWrapperComponent_ng_container_1_Template","ɵɵtext","ctx_r1","ɵɵattribute","ɵɵtextInterpolate1","LabelType","Low","High","Floor","Ceil","TickValue","Options","constructor","floor","ceil","step","minRange","maxRange","pushRange","minLimit","maxLimit","translate","combineLabels","getLegend","getStepLegend","stepsArray","bindIndexForStepsArray","draggableRange","draggableRangeOnly","showSelectionBar","showSelectionBarEnd","showSelectionBarFromValue","showOuterSelectionBars","hidePointerLabels","hideLimitLabels","autoHideLimitLabels","readOnly","disabled","showTicks","showTicksValues","tickStep","tickValueStep","ticksArray","ticksTooltip","ticksValuesTooltip","vertical","getSelectionBarColor","getTickColor","getPointerColor","keyboardSupport","scale","rotate","enforceStep","enforceRange","enforceStepsArray","noSwitching","onlyBindHandles","rightToLeft","reversedControls","boundPointerLabels","logScale","customValueToPosition","customPositionToValue","precisionLimit","selectionBarGradient","ariaLabel","ariaLabelledBy","ariaLabelHigh","ariaLabelledByHigh","handleDimension","barDimension","animate","animateOnMove","PointerType","Min","Max","ChangeContext","ValueHelper","isNullOrUndefined","undefined","areArraysEqual","array1","array2","length","i","linearValueToPosition","val","minVal","maxVal","range","logValueToPosition","Math","log","linearPositionToValue","percent","logPositionToValue","exp","findStepIndex","modelValue","differences","map","abs","minDifferenceIndex","index","CompatibilityHelper","isTouchEvent","event","window","TouchEvent","touches","isResizeObserverAvailable","ResizeObserver","MathHelper","roundToPrecisionLimit","toPrecision","isModuloWithinPrecisionLimit","modulo","limit","pow","clampToRange","min","max","EventListener","eventName","events","eventsSubscription","teardownCallback","EventListenerHelper","renderer","attachPassiveEventListener","nativeElement","callback","throttleInterval","attachEventListener","listener","observerCallback","next","addEventListener","passive","capture","removeEventListener","pipe","leading","trailing","subscribe","detachEventListener","eventListener","unsubscribe","complete","listen","SliderElementDirective","elemRef","changeDetectionRef","_position","_dimension","_alwaysHide","_vertical","_scale","_rotate","opacity","visibility","left","bottom","height","width","transform","eventListeners","eventListenerHelper","position","dimension","alwaysHide","setAlwaysHide","hide","show","isVisible","setVertical","setScale","setRotate","getRotate","setPosition","pos","isRefDestroyed","markForCheck","round","calculateDimension","getBoundingClientRect","top","right","setDimension","dim","on","debounceInterval","push","onPassive","off","listenersToKeep","listenersToRemove","ɵfac","SliderElementDirective_Factory","t","ɵɵdirectiveInject","ɵdir","ɵɵdefineDirective","type","selectors","hostVars","hostBindings","SliderElementDirective_HostBindings","ɵɵstyleProp","ctorParameters","propDecorators","args","ngDevMode","ɵsetClassMetadata","selector","SliderHandleDirective","active","role","tabindex","ariaOrientation","ariaValueNow","ariaValueText","ariaValueMin","ariaValueMax","focus","SliderHandleDirective_Factory","SliderHandleDirective_HostBindings","ɵɵclassProp","features","ɵɵInheritDefinitionFeature","SliderLabelDirective","_value","setValue","recalculateDimension","innerHTML","SliderLabelDirective_Factory","Tick","Dragging","difference","lowLimit","highLimit","ModelValues","compare","x","y","highValue","ModelChange","forceChange","NGX_SLIDER_CONTROL_VALUE_ACCESSOR","provide","useExisting","SliderComponent","multi","elementRef","zone","valueChange","highValueChange","options","userChangeStart","userChange","userChangeEnd","initHasRun","inputModelChangeSubject","inputModelChangeSubscription","outputModelChangeSubject","outputModelChangeSubscription","viewLowValue","viewHighValue","viewOptions","handleHalfDimension","maxHandlePosition","currentTrackingPointer","currentFocusPointer","firstKeyDown","touchId","dragging","sliderElementVerticalClass","sliderElementAnimateClass","sliderElementWithLegendClass","sliderElementDisabledAttr","sliderElementAriaLabel","barStyle","minPointerStyle","maxPointerStyle","fullBarTransparentClass","selectionBarDraggableClass","ticksUnderValuesClass","intermediateTicks","ticks","onMoveEventListener","onEndEventListener","moving","resizeObserver","onTouchedCallback","onChangeCallback","manualRefresh","unsubscribeManualRefresh","manualRefreshSubscription","setTimeout","calculateViewDimensionsAndDetectChanges","triggerFocus","unsubscribeTriggerFocus","triggerFocusSubscription","pointerType","focusPointer","ngOnInit","Object","assign","updateDisabledState","updateVerticalState","updateAriaLabel","ngAfterViewInit","applyOptions","subscribeInputModelChangeSubject","subscribeOutputModelChangeSubject","renormaliseModelValues","modelValueToViewValue","manageElementsStyle","calculateViewDimensions","addAccessibility","updateCeilLabel","updateFloorLabel","initHandles","manageEventsBindings","subscribeResizeObserver","detectChanges","ngOnChanges","changes","JSON","stringify","previousValue","currentValue","onChangeOptions","internalChange","ngOnDestroy","unbindEvents","unsubscribeResizeObserver","unsubscribeInputModelChangeSubject","unsubscribeOutputModelChangeSubject","writeValue","obj","Array","registerOnChange","registerOnTouched","setDisabledState","isDisabled","setAriaLabel","onResize","modelChange","applyInputModelChange","publishOutputModelChange","observe","disconnect","unsubscribeOnMove","unsubscribeOnEnd","getPointerElement","minHandleElement","maxHandleElement","getCurrentTrackingValue","NaN","viewValueToModelValue","viewValue","getStepValue","sliderValue","applyViewChange","userEventInitiated","normalisedModelChange","normaliseModelValues","normalisationChange","updateLowHandle","valueToPosition","updateHighHandle","updateSelectionBar","updateTicksScale","updateAriaAttributes","updateCombinedLabel","emitOutputs","emit","getChangeContext","input","normalisedInput","valueIndex","highValueIndex","roundStep","tempValue","previousModelValues","normalisedModelValues","previousOptionsInfluencingEventBindings","getOptionsInfluencingEventBindings","newOptionsInfluencingEventBindings","rebindEvents","resetSlider","applyStepsArrayOptions","applyFloorCeilOptions","minValue","maxValue","Error","String","refocusPointerIfNeeded","onPointerFocus","element","updateScale","floorLabelElement","ceilLabelElement","hideLabelsForTicks","minHandleLabelElement","maxHandleLabelElement","combinedLabelElement","selectionBarElement","leftOuterSelectionBarElement","rightOuterSelectionBarElement","updateRotate","bindEvents","getAllSliderElements","fullBarElement","ticksElement","toString","handleWidth","getTicksArray","reverse","hasAtLeastOneLegend","newTicks","translation","tick","isTickSelected","getDisplayValue","numberOfValues","center","updateHandles","which","newPos","getHandleLabelPos","labelType","labelDimension","nearHandlePos","endOfBarPos","backgroundColor","updateFloorAndCeilLabelsVisibility","floorLabelHidden","ceilLabelHidden","isMinLabelAtFloor","isLabelBelowFloorLabel","isMinLabelAtCeil","isLabelAboveCeilLabel","isMaxLabelAtCeil","isCombinedLabelAtFloor","isCombinedLabelAtCeil","hideCeil","hideFloor","label","floorPos","floorDim","ceilPos","ceilDim","isSelectionBarFromRight","positionForRange","centerPosition","isModelGreaterThanCenter","color","offset","reversed","direction","backgroundImage","from","to","backgroundPosition","backgroundSize","isLabelOverlap","lowDisplayValue","highDisplayValue","combinedLabelValue","customStep","steppedDifference","fn","positionToValue","getEventXY","targetTouchId","MouseEvent","clientY","clientX","touchIndex","identifier","getEventPosition","sliderElementBoundingRect","sliderPos","eventPos","getNearestHandle","distanceMin","distanceMax","onBarStart","onStart","bindMove","bindEnd","simulateImmediateMove","simulateImmediateEnd","onDragStart","stopPropagation","preventDefault","pointerElement","onMoveCallback","e","onDragMove","onMove","document","onEndCallback","onEnd","changedTouches","fromTick","touchForThisSlider","newValue","ceilValue","floorValue","positionTrackingHandle","onPointerBlur","onKeyboardEvent","onKeyUp","pointer","getKeyActions","valueRange","increaseStep","decreaseStep","increasePage","decreasePage","actions","UP","DOWN","LEFT","RIGHT","PAGEUP","PAGEDOWN","HOME","END","keyCode","keys","key","action","actionValue","newMinValue","newMaxValue","positionTrackingBar","getMinValue","outOfBounds","isAbove","isRTL","getMaxValue","ceilLimit","floorLimit","floorHandleElement","ceilHandleElement","isUnderFloorLimit","isOverCeilLimit","applyMinMaxLimit","applyPushRange","applyMinMaxRange","oppositeValue","changeContext","SliderComponent_Factory","ɵcmp","ɵɵdefineComponent","contentQueries","SliderComponent_ContentQueries","dirIndex","ɵɵcontentQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","first","viewQuery","SliderComponent_Query","ɵɵviewQuery","hostAttrs","SliderComponent_HostBindings","ɵɵlistener","SliderComponent_resize_HostBindingHandler","$event","ɵɵresolveWindow","inputs","outputs","ɵɵProvidersFeature","ɵɵNgOnChangesFeature","decls","vars","consts","SliderComponent_Template","dependencies","NgClass","NgForOf","NgIf","NgStyle","TooltipWrapperComponent","styles","read","host","class","providers","TooltipWrapperComponent_Factory","TooltipWrapperComponent_Template","NgTemplateOutlet","NgxSliderModule","NgxSliderModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","imports","declarations","exports","ngJitMode","ɵɵsetNgModuleScope","ɵb","ɵc","ɵd","ɵa","ɵe"],"sources":["/Users/macbookpro/Documents/Etude-Tech/RGPD_Frontend/node_modules/@angular-slider/ngx-slider/__ivy_ngcc__/fesm2015/angular-slider-ngx-slider.js"],"sourcesContent":["import { Subject } from 'rxjs';\nimport { throttleTime, tap, distinctUntilChanged, filter } from 'rxjs/operators';\nimport { supportsPassiveEvents } from 'detect-passive-events';\nimport { Directive, ElementRef, Renderer2, HostBinding, ChangeDetectorRef, Component, ViewChild, HostListener, Input, EventEmitter, Output, ContentChild, forwardRef, NgZone, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** @enum {number} */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\n\nconst _c0 = [\"tooltipTemplate\"];\nconst _c1 = [\"leftOuterSelectionBar\"];\nconst _c2 = [\"rightOuterSelectionBar\"];\nconst _c3 = [\"fullBar\"];\nconst _c4 = [\"selectionBar\"];\nconst _c5 = [\"minHandle\"];\nconst _c6 = [\"maxHandle\"];\nconst _c7 = [\"floorLabel\"];\nconst _c8 = [\"ceilLabel\"];\nconst _c9 = [\"minHandleLabel\"];\nconst _c10 = [\"maxHandleLabel\"];\nconst _c11 = [\"combinedLabel\"];\nconst _c12 = [\"ticksElement\"];\nfunction SliderComponent_span_28_ngx_slider_tooltip_wrapper_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"ngx-slider-tooltip-wrapper\", 31);\n} if (rf & 2) {\n    const t_r13 = ɵngcc0.ɵɵnextContext().$implicit;\n    const ctx_r14 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"template\", ctx_r14.tooltipTemplate)(\"tooltip\", t_r13.valueTooltip)(\"placement\", t_r13.valueTooltipPlacement)(\"content\", t_r13.value);\n} }\nfunction SliderComponent_span_28_span_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"span\", 32);\n} if (rf & 2) {\n    const t_r13 = ɵngcc0.ɵɵnextContext().$implicit;\n    ɵngcc0.ɵɵproperty(\"innerHTML\", t_r13.legend, ɵngcc0.ɵɵsanitizeHtml);\n} }\nconst _c13 = function (a0) { return { \"ngx-slider-selected\": a0 }; };\nfunction SliderComponent_span_28_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 27);\n    ɵngcc0.ɵɵelement(1, \"ngx-slider-tooltip-wrapper\", 28);\n    ɵngcc0.ɵɵtemplate(2, SliderComponent_span_28_ngx_slider_tooltip_wrapper_2_Template, 1, 4, \"ngx-slider-tooltip-wrapper\", 29);\n    ɵngcc0.ɵɵtemplate(3, SliderComponent_span_28_span_3_Template, 1, 1, \"span\", 30);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const t_r13 = ctx.$implicit;\n    const ctx_r12 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction1(7, _c13, t_r13.selected))(\"ngStyle\", t_r13.style);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"template\", ctx_r12.tooltipTemplate)(\"tooltip\", t_r13.tooltip)(\"placement\", t_r13.tooltipPlacement);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", t_r13.value != null);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", t_r13.legend != null);\n} }\nfunction TooltipWrapperComponent_ng_container_0_1_ng_template_0_Template(rf, ctx) { }\nfunction TooltipWrapperComponent_ng_container_0_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, TooltipWrapperComponent_ng_container_0_1_ng_template_0_Template, 0, 0, \"ng-template\");\n} }\nconst _c14 = function (a0, a1, a2) { return { tooltip: a0, placement: a1, content: a2 }; };\nfunction TooltipWrapperComponent_ng_container_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, TooltipWrapperComponent_ng_container_0_1_Template, 1, 0, null, 1);\n    ɵngcc0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.template)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction3(2, _c14, ctx_r0.tooltip, ctx_r0.placement, ctx_r0.content));\n} }\nfunction TooltipWrapperComponent_ng_container_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 2);\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵattribute(\"title\", ctx_r1.tooltip)(\"data-tooltip-placement\", ctx_r1.placement);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r1.content, \" \");\n} }\nconst LabelType = {\n    /** Label above low pointer */\n    Low: 0,\n    /** Label above high pointer */\n    High: 1,\n    /** Label for minimum slider value */\n    Floor: 2,\n    /** Label for maximum slider value */\n    Ceil: 3,\n    /** Label below legend tick */\n    TickValue: 4,\n};\nLabelType[LabelType.Low] = 'Low';\nLabelType[LabelType.High] = 'High';\nLabelType[LabelType.Floor] = 'Floor';\nLabelType[LabelType.Ceil] = 'Ceil';\nLabelType[LabelType.TickValue] = 'TickValue';\n/**\n * Slider options\n */\nclass Options {\n    constructor() {\n        /**\n         * Minimum value for a slider.\n         * Not applicable when using stepsArray.\n         */\n        this.floor = 0;\n        /**\n         * Maximum value for a slider.\n         * Not applicable when using stepsArray.\n         */\n        this.ceil = null;\n        /**\n         * Step between each value.\n         * Not applicable when using stepsArray.\n         */\n        this.step = 1;\n        /**\n         * The minimum range authorized on the slider.\n         * Applies to range slider only.\n         * When using stepsArray, expressed as index into stepsArray.\n         */\n        this.minRange = null;\n        /**\n         * The maximum range authorized on the slider.\n         * Applies to range slider only.\n         * When using stepsArray, expressed as index into stepsArray.\n         */\n        this.maxRange = null;\n        /**\n         * Set to true to have a push behavior. When the min handle goes above the max,\n         * the max is moved as well (and vice-versa). The range between min and max is\n         * defined by the step option (defaults to 1) and can also be overriden by\n         * the minRange option. Applies to range slider only.\n         */\n        this.pushRange = false;\n        /**\n         * The minimum value authorized on the slider.\n         * When using stepsArray, expressed as index into stepsArray.\n         */\n        this.minLimit = null;\n        /**\n         * The maximum value authorized on the slider.\n         * When using stepsArray, expressed as index into stepsArray.\n         */\n        this.maxLimit = null;\n        /**\n         * Custom translate function. Use this if you want to translate values displayed\n         * on the slider.\n         */\n        this.translate = null;\n        /**\n         * Custom function for combining overlapping labels in range slider.\n         * It takes the min and max values (already translated with translate fuction)\n         * and should return how these two values should be combined.\n         * If not provided, the default function will join the two values with\n         * ' - ' as separator.\n         */\n        this.combineLabels = null;\n        /**\n         * Use to display legend under ticks (thus, it needs to be used along with\n         * showTicks or showTicksValues). The function will be called with each tick\n         * value and returned content will be displayed under the tick as a legend.\n         * If the returned value is null, then no legend is displayed under\n         * the corresponding tick.You can also directly provide the legend values\n         * in the stepsArray option.\n         */\n        this.getLegend = null;\n        /**\n         * Use to display a custom legend of a stepItem from stepsArray.\n         * It will be the same as getLegend but for stepsArray.\n         */\n        this.getStepLegend = null;\n        /**\n         * If you want to display a slider with non linear/number steps.\n         * Just pass an array with each slider value and that's it; the floor, ceil and step settings\n         * of the slider will be computed automatically.\n         * By default, the value model and valueHigh model values will be the value of the selected item\n         * in the stepsArray.\n         * They can also be bound to the index of the selected item by setting the bindIndexForStepsArray\n         * option to true.\n         */\n        this.stepsArray = null;\n        /**\n         * Set to true to bind the index of the selected item to value model and valueHigh model.\n         */\n        this.bindIndexForStepsArray = false;\n        /**\n         * When set to true and using a range slider, the range can be dragged by the selection bar.\n         * Applies to range slider only.\n         */\n        this.draggableRange = false;\n        /**\n         * Same as draggableRange but the slider range can't be changed.\n         * Applies to range slider only.\n         */\n        this.draggableRangeOnly = false;\n        /**\n         * Set to true to always show the selection bar before the slider handle.\n         */\n        this.showSelectionBar = false;\n        /**\n         * Set to true to always show the selection bar after the slider handle.\n         */\n        this.showSelectionBarEnd = false;\n        /**\n         * Set a number to draw the selection bar between this value and the slider handle.\n         * When using stepsArray, expressed as index into stepsArray.\n         */\n        this.showSelectionBarFromValue = null;\n        /**\n         * Only for range slider. Set to true to visualize in different colour the areas\n         * on the left/right (top/bottom for vertical range slider) of selection bar between the handles.\n         */\n        this.showOuterSelectionBars = false;\n        /**\n         * Set to true to hide pointer labels\n         */\n        this.hidePointerLabels = false;\n        /**\n         * Set to true to hide min / max labels\n         */\n        this.hideLimitLabels = false;\n        /**\n         * Set to false to disable the auto-hiding behavior of the limit labels.\n         */\n        this.autoHideLimitLabels = true;\n        /**\n         * Set to true to make the slider read-only.\n         */\n        this.readOnly = false;\n        /**\n         * Set to true to disable the slider.\n         */\n        this.disabled = false;\n        /**\n         * Set to true to display a tick for each step of the slider.\n         */\n        this.showTicks = false;\n        /**\n         * Set to true to display a tick and the step value for each step of the slider..\n         */\n        this.showTicksValues = false;\n        /* The step between each tick to display. If not set, the step value is used.\n            Not used when ticksArray is specified. */\n        this.tickStep = null;\n        /* The step between displaying each tick step value.\n            If not set, then tickStep or step is used, depending on which one is set. */\n        this.tickValueStep = null;\n        /**\n         * Use to display ticks at specific positions.\n         * The array contains the index of the ticks that should be displayed.\n         * For example, [0, 1, 5] will display a tick for the first, second and sixth values.\n         */\n        this.ticksArray = null;\n        /**\n         * Used to display a tooltip when a tick is hovered.\n         * Set to a function that returns the tooltip content for a given value.\n         */\n        this.ticksTooltip = null;\n        /**\n         * Same as ticksTooltip but for ticks values.\n         */\n        this.ticksValuesTooltip = null;\n        /**\n         * Set to true to display the slider vertically.\n         * The slider will take the full height of its parent.\n         * Changing this value at runtime is not currently supported.\n         */\n        this.vertical = false;\n        /**\n         * Function that returns the current color of the selection bar.\n         * If your color won't change, don't use this option but set it through CSS.\n         * If the returned color depends on a model value (either value or valueHigh),\n         * you should use the argument passed to the function.\n         * Indeed, when the function is called, there is no certainty that the model\n         * has already been updated.\n         */\n        this.getSelectionBarColor = null;\n        /**\n         * Function that returns the color of a tick. showTicks must be enabled.\n         */\n        this.getTickColor = null;\n        /**\n         * Function that returns the current color of a pointer.\n         * If your color won't change, don't use this option but set it through CSS.\n         * If the returned color depends on a model value (either value or valueHigh),\n         * you should use the argument passed to the function.\n         * Indeed, when the function is called, there is no certainty that the model has already been updated.\n         * To handle range slider pointers independently, you should evaluate pointerType within the given\n         * function where \"min\" stands for value model and \"max\" for valueHigh model values.\n         */\n        this.getPointerColor = null;\n        /**\n         * Handles are focusable (on click or with tab) and can be modified using the following keyboard controls:\n         * Left/bottom arrows: -1\n         * Right/top arrows: +1\n         * Page-down: -10%\n         * Page-up: +10%\n         * Home: minimum value\n         * End: maximum value\n         */\n        this.keyboardSupport = true;\n        /**\n         * If you display the slider in an element that uses transform: scale(0.5), set the scale value to 2\n         * so that the slider is rendered properly and the events are handled correctly.\n         */\n        this.scale = 1;\n        /**\n         * If you display the slider in an element that uses transform: rotate(90deg), set the rotate value to 90\n         * so that the slider is rendered properly and the events are handled correctly. Value is in degrees.\n         */\n        this.rotate = 0;\n        /**\n         * Set to true to force the value(s) to be rounded to the step, even when modified from the outside.\n         * When set to false, if the model values are modified from outside the slider, they are not rounded\n         * and can be between two steps.\n         */\n        this.enforceStep = true;\n        /**\n         * Set to true to force the value(s) to be normalised to allowed range (floor to ceil), even when modified from the outside.\n         * When set to false, if the model values are modified from outside the slider, and they are outside allowed range,\n         * the slider may be rendered incorrectly. However, setting this to false may be useful if you want to perform custom normalisation.\n         */\n        this.enforceRange = true;\n        /**\n         * Set to true to force the value(s) to be rounded to the nearest step value, even when modified from the outside.\n         * When set to false, if the model values are modified from outside the slider, and they are outside allowed range,\n         * the slider may be rendered incorrectly. However, setting this to false may be useful if you want to perform custom normalisation.\n         */\n        this.enforceStepsArray = true;\n        /**\n         * Set to true to prevent to user from switching the min and max handles. Applies to range slider only.\n         */\n        this.noSwitching = false;\n        /**\n         * Set to true to only bind events on slider handles.\n         */\n        this.onlyBindHandles = false;\n        /**\n         * Set to true to show graphs right to left.\n         * If vertical is true it will be from top to bottom and left / right arrow functions reversed.\n         */\n        this.rightToLeft = false;\n        /**\n         * Set to true to reverse keyboard navigation:\n         * Right/top arrows: -1\n         * Left/bottom arrows: +1\n         * Page-up: -10%\n         * Page-down: +10%\n         * End: minimum value\n         * Home: maximum value\n         */\n        this.reversedControls = false;\n        /**\n         * Set to true to keep the slider labels inside the slider bounds.\n         */\n        this.boundPointerLabels = true;\n        /**\n         * Set to true to use a logarithmic scale to display the slider.\n         */\n        this.logScale = false;\n        /**\n         * Function that returns the position on the slider for a given value.\n         * The position must be a percentage between 0 and 1.\n         * The function should be monotonically increasing or decreasing; otherwise the slider may behave incorrectly.\n         */\n        this.customValueToPosition = null;\n        /**\n         * Function that returns the value for a given position on the slider.\n         * The position is a percentage between 0 and 1.\n         * The function should be monotonically increasing or decreasing; otherwise the slider may behave incorrectly.\n         */\n        this.customPositionToValue = null;\n        /**\n         * Precision limit for calculated values.\n         * Values used in calculations will be rounded to this number of significant digits\n         * to prevent accumulating small floating-point errors.\n         */\n        this.precisionLimit = 12;\n        /**\n         * Use to display the selection bar as a gradient.\n         * The given object must contain from and to properties which are colors.\n         */\n        this.selectionBarGradient = null;\n        /**\n         * Use to add a label directly to the slider for accessibility. Adds the aria-label attribute.\n         */\n        this.ariaLabel = 'ngx-slider';\n        /**\n         * Use instead of ariaLabel to reference the id of an element which will be used to label the slider.\n         * Adds the aria-labelledby attribute.\n         */\n        this.ariaLabelledBy = null;\n        /**\n         * Use to add a label directly to the slider range for accessibility. Adds the aria-label attribute.\n         */\n        this.ariaLabelHigh = 'ngx-slider-max';\n        /**\n         * Use instead of ariaLabelHigh to reference the id of an element which will be used to label the slider range.\n         * Adds the aria-labelledby attribute.\n         */\n        this.ariaLabelledByHigh = null;\n        /**\n         * Use to increase rendering performance. If the value is not provided, the slider calculates the with/height of the handle\n         */\n        this.handleDimension = null;\n        /**\n         * Use to increase rendering performance. If the value is not provided, the slider calculates the with/height of the bar\n         */\n        this.barDimension = null;\n        /**\n         * Enable/disable CSS animations\n         */\n        this.animate = true;\n        /**\n         * Enable/disable CSS animations while moving the slider\n         */\n        this.animateOnMove = false;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** @enum {number} */\nconst PointerType = {\n    /** Low pointer */\n    Min: 0,\n    /** High pointer */\n    Max: 1,\n};\nPointerType[PointerType.Min] = 'Min';\nPointerType[PointerType.Max] = 'Max';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nclass ChangeContext {\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n *  Collection of functions to handle conversions/lookups of values\n */\nclass ValueHelper {\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    static isNullOrUndefined(value) {\n        return value === undefined || value === null;\n    }\n    /**\n     * @param {?} array1\n     * @param {?} array2\n     * @return {?}\n     */\n    static areArraysEqual(array1, array2) {\n        if (array1.length !== array2.length) {\n            return false;\n        }\n        for (let i = 0; i < array1.length; ++i) {\n            if (array1[i] !== array2[i]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    /**\n     * @param {?} val\n     * @param {?} minVal\n     * @param {?} maxVal\n     * @return {?}\n     */\n    static linearValueToPosition(val, minVal, maxVal) {\n        /** @type {?} */\n        const range = maxVal - minVal;\n        return (val - minVal) / range;\n    }\n    /**\n     * @param {?} val\n     * @param {?} minVal\n     * @param {?} maxVal\n     * @return {?}\n     */\n    static logValueToPosition(val, minVal, maxVal) {\n        val = Math.log(val);\n        minVal = Math.log(minVal);\n        maxVal = Math.log(maxVal);\n        /** @type {?} */\n        const range = maxVal - minVal;\n        return (val - minVal) / range;\n    }\n    /**\n     * @param {?} percent\n     * @param {?} minVal\n     * @param {?} maxVal\n     * @return {?}\n     */\n    static linearPositionToValue(percent, minVal, maxVal) {\n        return percent * (maxVal - minVal) + minVal;\n    }\n    /**\n     * @param {?} percent\n     * @param {?} minVal\n     * @param {?} maxVal\n     * @return {?}\n     */\n    static logPositionToValue(percent, minVal, maxVal) {\n        minVal = Math.log(minVal);\n        maxVal = Math.log(maxVal);\n        /** @type {?} */\n        const value = percent * (maxVal - minVal) + minVal;\n        return Math.exp(value);\n    }\n    /**\n     * @param {?} modelValue\n     * @param {?} stepsArray\n     * @return {?}\n     */\n    static findStepIndex(modelValue, stepsArray) {\n        /** @type {?} */\n        const differences = stepsArray.map((step) => Math.abs(modelValue - step.value));\n        /** @type {?} */\n        let minDifferenceIndex = 0;\n        for (let index = 0; index < stepsArray.length; index++) {\n            if (differences[index] !== differences[minDifferenceIndex] && differences[index] < differences[minDifferenceIndex]) {\n                minDifferenceIndex = index;\n            }\n        }\n        return minDifferenceIndex;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * Helper with compatibility functions to support different browsers\n */\nclass CompatibilityHelper {\n    /**\n     * Workaround for TouchEvent constructor sadly not being available on all browsers (e.g. Firefox, Safari)\n     * @param {?} event\n     * @return {?}\n     */\n    static isTouchEvent(event) {\n        if ((/** @type {?} */ (window)).TouchEvent !== undefined) {\n            return event instanceof TouchEvent;\n        }\n        return event.touches !== undefined;\n    }\n    /**\n     * Detect presence of ResizeObserver API\n     * @return {?}\n     */\n    static isResizeObserverAvailable() {\n        return (/** @type {?} */ (window)).ResizeObserver !== undefined;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * Helper with mathematical functions\n */\nclass MathHelper {\n    /**\n     * @param {?} value\n     * @param {?} precisionLimit\n     * @return {?}\n     */\n    static roundToPrecisionLimit(value, precisionLimit) {\n        return +(value.toPrecision(precisionLimit));\n    }\n    /**\n     * @param {?} value\n     * @param {?} modulo\n     * @param {?} precisionLimit\n     * @return {?}\n     */\n    static isModuloWithinPrecisionLimit(value, modulo, precisionLimit) {\n        /** @type {?} */\n        const limit = Math.pow(10, -precisionLimit);\n        return Math.abs(value % modulo) <= limit || Math.abs(Math.abs(value % modulo) - modulo) <= limit;\n    }\n    /**\n     * @param {?} value\n     * @param {?} floor\n     * @param {?} ceil\n     * @return {?}\n     */\n    static clampToRange(value, floor, ceil) {\n        return Math.min(Math.max(value, floor), ceil);\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nclass EventListener {\n    constructor() {\n        this.eventName = null;\n        this.events = null;\n        this.eventsSubscription = null;\n        this.teardownCallback = null;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * Helper class to attach event listeners to DOM elements with debounce support using rxjs\n */\nclass EventListenerHelper {\n    /**\n     * @param {?} renderer\n     */\n    constructor(renderer) {\n        this.renderer = renderer;\n    }\n    /**\n     * @param {?} nativeElement\n     * @param {?} eventName\n     * @param {?} callback\n     * @param {?=} throttleInterval\n     * @return {?}\n     */\n    attachPassiveEventListener(nativeElement, eventName, callback, throttleInterval) {\n        // Only use passive event listeners if the browser supports it\n        if (supportsPassiveEvents !== true) {\n            return this.attachEventListener(nativeElement, eventName, callback, throttleInterval);\n        }\n        /** @type {?} */\n        const listener = new EventListener();\n        listener.eventName = eventName;\n        listener.events = new Subject();\n        /** @type {?} */\n        const observerCallback = (event) => {\n            listener.events.next(event);\n        };\n        nativeElement.addEventListener(eventName, observerCallback, { passive: true, capture: false });\n        listener.teardownCallback = () => {\n            nativeElement.removeEventListener(eventName, observerCallback, { passive: true, capture: false });\n        };\n        listener.eventsSubscription = listener.events\n            .pipe((!ValueHelper.isNullOrUndefined(throttleInterval))\n            ? throttleTime(throttleInterval, undefined, { leading: true, trailing: true })\n            : tap(() => { }) // no-op\n        )\n            .subscribe((event) => {\n            callback(event);\n        });\n        return listener;\n    }\n    /**\n     * @param {?} eventListener\n     * @return {?}\n     */\n    detachEventListener(eventListener) {\n        if (!ValueHelper.isNullOrUndefined(eventListener.eventsSubscription)) {\n            eventListener.eventsSubscription.unsubscribe();\n            eventListener.eventsSubscription = null;\n        }\n        if (!ValueHelper.isNullOrUndefined(eventListener.events)) {\n            eventListener.events.complete();\n            eventListener.events = null;\n        }\n        if (!ValueHelper.isNullOrUndefined(eventListener.teardownCallback)) {\n            eventListener.teardownCallback();\n            eventListener.teardownCallback = null;\n        }\n    }\n    /**\n     * @param {?} nativeElement\n     * @param {?} eventName\n     * @param {?} callback\n     * @param {?=} throttleInterval\n     * @return {?}\n     */\n    attachEventListener(nativeElement, eventName, callback, throttleInterval) {\n        /** @type {?} */\n        const listener = new EventListener();\n        listener.eventName = eventName;\n        listener.events = new Subject();\n        /** @type {?} */\n        const observerCallback = (event) => {\n            listener.events.next(event);\n        };\n        listener.teardownCallback = this.renderer.listen(nativeElement, eventName, observerCallback);\n        listener.eventsSubscription = listener.events\n            .pipe((!ValueHelper.isNullOrUndefined(throttleInterval))\n            ? throttleTime(throttleInterval, undefined, { leading: true, trailing: true })\n            : tap(() => { }) // no-op\n        )\n            .subscribe((event) => { callback(event); });\n        return listener;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nclass SliderElementDirective {\n    /**\n     * @param {?} elemRef\n     * @param {?} renderer\n     * @param {?} changeDetectionRef\n     */\n    constructor(elemRef, renderer, changeDetectionRef) {\n        this.elemRef = elemRef;\n        this.renderer = renderer;\n        this.changeDetectionRef = changeDetectionRef;\n        this._position = 0;\n        this._dimension = 0;\n        this._alwaysHide = false;\n        this._vertical = false;\n        this._scale = 1;\n        this._rotate = 0;\n        this.opacity = 1;\n        this.visibility = 'visible';\n        this.left = '';\n        this.bottom = '';\n        this.height = '';\n        this.width = '';\n        this.transform = '';\n        this.eventListeners = [];\n        this.eventListenerHelper = new EventListenerHelper(this.renderer);\n    }\n    /**\n     * @return {?}\n     */\n    get position() {\n        return this._position;\n    }\n    /**\n     * @return {?}\n     */\n    get dimension() {\n        return this._dimension;\n    }\n    /**\n     * @return {?}\n     */\n    get alwaysHide() {\n        return this._alwaysHide;\n    }\n    /**\n     * @return {?}\n     */\n    get vertical() {\n        return this._vertical;\n    }\n    /**\n     * @return {?}\n     */\n    get scale() {\n        return this._scale;\n    }\n    /**\n     * @return {?}\n     */\n    get rotate() {\n        return this._rotate;\n    }\n    /**\n     * @param {?} hide\n     * @return {?}\n     */\n    setAlwaysHide(hide) {\n        this._alwaysHide = hide;\n        if (hide) {\n            this.visibility = 'hidden';\n        }\n        else {\n            this.visibility = 'visible';\n        }\n    }\n    /**\n     * @return {?}\n     */\n    hide() {\n        this.opacity = 0;\n    }\n    /**\n     * @return {?}\n     */\n    show() {\n        if (this.alwaysHide) {\n            return;\n        }\n        this.opacity = 1;\n    }\n    /**\n     * @return {?}\n     */\n    isVisible() {\n        if (this.alwaysHide) {\n            return false;\n        }\n        return this.opacity !== 0;\n    }\n    /**\n     * @param {?} vertical\n     * @return {?}\n     */\n    setVertical(vertical) {\n        this._vertical = vertical;\n        if (this._vertical) {\n            this.left = '';\n            this.width = '';\n        }\n        else {\n            this.bottom = '';\n            this.height = '';\n        }\n    }\n    /**\n     * @param {?} scale\n     * @return {?}\n     */\n    setScale(scale) {\n        this._scale = scale;\n    }\n    /**\n     * @param {?} rotate\n     * @return {?}\n     */\n    setRotate(rotate) {\n        this._rotate = rotate;\n        this.transform = 'rotate(' + rotate + 'deg)';\n    }\n    /**\n     * @return {?}\n     */\n    getRotate() {\n        return this._rotate;\n    }\n    /**\n     * @param {?} pos\n     * @return {?}\n     */\n    setPosition(pos) {\n        if (this._position !== pos && !this.isRefDestroyed()) {\n            this.changeDetectionRef.markForCheck();\n        }\n        this._position = pos;\n        if (this._vertical) {\n            this.bottom = Math.round(pos) + 'px';\n        }\n        else {\n            this.left = Math.round(pos) + 'px';\n        }\n    }\n    /**\n     * @return {?}\n     */\n    calculateDimension() {\n        /** @type {?} */\n        const val = this.getBoundingClientRect();\n        if (this.vertical) {\n            this._dimension = (val.bottom - val.top) * this.scale;\n        }\n        else {\n            this._dimension = (val.right - val.left) * this.scale;\n        }\n    }\n    /**\n     * @param {?} dim\n     * @return {?}\n     */\n    setDimension(dim) {\n        if (this._dimension !== dim && !this.isRefDestroyed()) {\n            this.changeDetectionRef.markForCheck();\n        }\n        this._dimension = dim;\n        if (this._vertical) {\n            this.height = Math.round(dim) + 'px';\n        }\n        else {\n            this.width = Math.round(dim) + 'px';\n        }\n    }\n    /**\n     * @return {?}\n     */\n    getBoundingClientRect() {\n        return this.elemRef.nativeElement.getBoundingClientRect();\n    }\n    /**\n     * @param {?} eventName\n     * @param {?} callback\n     * @param {?=} debounceInterval\n     * @return {?}\n     */\n    on(eventName, callback, debounceInterval) {\n        /** @type {?} */\n        const listener = this.eventListenerHelper.attachEventListener(this.elemRef.nativeElement, eventName, callback, debounceInterval);\n        this.eventListeners.push(listener);\n    }\n    /**\n     * @param {?} eventName\n     * @param {?} callback\n     * @param {?=} debounceInterval\n     * @return {?}\n     */\n    onPassive(eventName, callback, debounceInterval) {\n        /** @type {?} */\n        const listener = this.eventListenerHelper.attachPassiveEventListener(this.elemRef.nativeElement, eventName, callback, debounceInterval);\n        this.eventListeners.push(listener);\n    }\n    /**\n     * @param {?=} eventName\n     * @return {?}\n     */\n    off(eventName) {\n        /** @type {?} */\n        let listenersToKeep;\n        /** @type {?} */\n        let listenersToRemove;\n        if (!ValueHelper.isNullOrUndefined(eventName)) {\n            listenersToKeep = this.eventListeners.filter((event) => event.eventName !== eventName);\n            listenersToRemove = this.eventListeners.filter((event) => event.eventName === eventName);\n        }\n        else {\n            listenersToKeep = [];\n            listenersToRemove = this.eventListeners;\n        }\n        for (const listener of listenersToRemove) {\n            this.eventListenerHelper.detachEventListener(listener);\n        }\n        this.eventListeners = listenersToKeep;\n    }\n    /**\n     * @return {?}\n     */\n    isRefDestroyed() {\n        return ValueHelper.isNullOrUndefined(this.changeDetectionRef) || this.changeDetectionRef['destroyed'];\n    }\n}\nSliderElementDirective.ɵfac = function SliderElementDirective_Factory(t) { return new (t || SliderElementDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\nSliderElementDirective.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: SliderElementDirective, selectors: [[\"\", \"ngxSliderElement\", \"\"]], hostVars: 14, hostBindings: function SliderElementDirective_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"opacity\", ctx.opacity)(\"visibility\", ctx.visibility)(\"left\", ctx.left)(\"bottom\", ctx.bottom)(\"height\", ctx.height)(\"width\", ctx.width)(\"transform\", ctx.transform);\n    } } });\n/** @nocollapse */\nSliderElementDirective.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Renderer2 },\n    { type: ChangeDetectorRef }\n];\nSliderElementDirective.propDecorators = {\n    opacity: [{ type: HostBinding, args: ['style.opacity',] }],\n    visibility: [{ type: HostBinding, args: ['style.visibility',] }],\n    left: [{ type: HostBinding, args: ['style.left',] }],\n    bottom: [{ type: HostBinding, args: ['style.bottom',] }],\n    height: [{ type: HostBinding, args: ['style.height',] }],\n    width: [{ type: HostBinding, args: ['style.width',] }],\n    transform: [{ type: HostBinding, args: ['style.transform',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SliderElementDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[ngxSliderElement]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.Renderer2 }, { type: ɵngcc0.ChangeDetectorRef }]; }, { opacity: [{\n            type: HostBinding,\n            args: ['style.opacity']\n        }], visibility: [{\n            type: HostBinding,\n            args: ['style.visibility']\n        }], left: [{\n            type: HostBinding,\n            args: ['style.left']\n        }], bottom: [{\n            type: HostBinding,\n            args: ['style.bottom']\n        }], height: [{\n            type: HostBinding,\n            args: ['style.height']\n        }], width: [{\n            type: HostBinding,\n            args: ['style.width']\n        }], transform: [{\n            type: HostBinding,\n            args: ['style.transform']\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nclass SliderHandleDirective extends SliderElementDirective {\n    /**\n     * @param {?} elemRef\n     * @param {?} renderer\n     * @param {?} changeDetectionRef\n     */\n    constructor(elemRef, renderer, changeDetectionRef) {\n        super(elemRef, renderer, changeDetectionRef);\n        this.active = false;\n        this.role = '';\n        this.tabindex = '';\n        this.ariaOrientation = '';\n        this.ariaLabel = '';\n        this.ariaLabelledBy = '';\n        this.ariaValueNow = '';\n        this.ariaValueText = '';\n        this.ariaValueMin = '';\n        this.ariaValueMax = '';\n    }\n    /**\n     * @return {?}\n     */\n    focus() {\n        this.elemRef.nativeElement.focus();\n    }\n}\nSliderHandleDirective.ɵfac = function SliderHandleDirective_Factory(t) { return new (t || SliderHandleDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\nSliderHandleDirective.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: SliderHandleDirective, selectors: [[\"\", \"ngxSliderHandle\", \"\"]], hostVars: 11, hostBindings: function SliderHandleDirective_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"role\", ctx.role)(\"tabindex\", ctx.tabindex)(\"aria-orientation\", ctx.ariaOrientation)(\"aria-label\", ctx.ariaLabel)(\"aria-labelledby\", ctx.ariaLabelledBy)(\"aria-valuenow\", ctx.ariaValueNow)(\"aria-valuetext\", ctx.ariaValueText)(\"aria-valuemin\", ctx.ariaValueMin)(\"aria-valuemax\", ctx.ariaValueMax);\n        ɵngcc0.ɵɵclassProp(\"ngx-slider-active\", ctx.active);\n    } }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nSliderHandleDirective.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Renderer2 },\n    { type: ChangeDetectorRef }\n];\nSliderHandleDirective.propDecorators = {\n    active: [{ type: HostBinding, args: ['class.ngx-slider-active',] }],\n    role: [{ type: HostBinding, args: ['attr.role',] }],\n    tabindex: [{ type: HostBinding, args: ['attr.tabindex',] }],\n    ariaOrientation: [{ type: HostBinding, args: ['attr.aria-orientation',] }],\n    ariaLabel: [{ type: HostBinding, args: ['attr.aria-label',] }],\n    ariaLabelledBy: [{ type: HostBinding, args: ['attr.aria-labelledby',] }],\n    ariaValueNow: [{ type: HostBinding, args: ['attr.aria-valuenow',] }],\n    ariaValueText: [{ type: HostBinding, args: ['attr.aria-valuetext',] }],\n    ariaValueMin: [{ type: HostBinding, args: ['attr.aria-valuemin',] }],\n    ariaValueMax: [{ type: HostBinding, args: ['attr.aria-valuemax',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SliderHandleDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[ngxSliderHandle]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.Renderer2 }, { type: ɵngcc0.ChangeDetectorRef }]; }, { active: [{\n            type: HostBinding,\n            args: ['class.ngx-slider-active']\n        }], role: [{\n            type: HostBinding,\n            args: ['attr.role']\n        }], tabindex: [{\n            type: HostBinding,\n            args: ['attr.tabindex']\n        }], ariaOrientation: [{\n            type: HostBinding,\n            args: ['attr.aria-orientation']\n        }], ariaLabel: [{\n            type: HostBinding,\n            args: ['attr.aria-label']\n        }], ariaLabelledBy: [{\n            type: HostBinding,\n            args: ['attr.aria-labelledby']\n        }], ariaValueNow: [{\n            type: HostBinding,\n            args: ['attr.aria-valuenow']\n        }], ariaValueText: [{\n            type: HostBinding,\n            args: ['attr.aria-valuetext']\n        }], ariaValueMin: [{\n            type: HostBinding,\n            args: ['attr.aria-valuemin']\n        }], ariaValueMax: [{\n            type: HostBinding,\n            args: ['attr.aria-valuemax']\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nclass SliderLabelDirective extends SliderElementDirective {\n    /**\n     * @param {?} elemRef\n     * @param {?} renderer\n     * @param {?} changeDetectionRef\n     */\n    constructor(elemRef, renderer, changeDetectionRef) {\n        super(elemRef, renderer, changeDetectionRef);\n        this._value = null;\n    }\n    /**\n     * @return {?}\n     */\n    get value() {\n        return this._value;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    setValue(value) {\n        /** @type {?} */\n        let recalculateDimension = false;\n        if (!this.alwaysHide &&\n            (ValueHelper.isNullOrUndefined(this.value) ||\n                this.value.length !== value.length ||\n                (this.value.length > 0 && this.dimension === 0))) {\n            recalculateDimension = true;\n        }\n        this._value = value;\n        this.elemRef.nativeElement.innerHTML = value;\n        // Update dimension only when length of the label have changed\n        if (recalculateDimension) {\n            this.calculateDimension();\n        }\n    }\n}\nSliderLabelDirective.ɵfac = function SliderLabelDirective_Factory(t) { return new (t || SliderLabelDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\nSliderLabelDirective.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: SliderLabelDirective, selectors: [[\"\", \"ngxSliderLabel\", \"\"]], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nSliderLabelDirective.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Renderer2 },\n    { type: ChangeDetectorRef }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SliderLabelDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[ngxSliderLabel]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.Renderer2 }, { type: ɵngcc0.ChangeDetectorRef }]; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nclass Tick {\n    constructor() {\n        this.selected = false;\n        this.style = {};\n        this.tooltip = null;\n        this.tooltipPlacement = null;\n        this.value = null;\n        this.valueTooltip = null;\n        this.valueTooltipPlacement = null;\n        this.legend = null;\n    }\n}\nclass Dragging {\n    constructor() {\n        this.active = false;\n        this.value = 0;\n        this.difference = 0;\n        this.position = 0;\n        this.lowLimit = 0;\n        this.highLimit = 0;\n    }\n}\nclass ModelValues {\n    /**\n     * @param {?=} x\n     * @param {?=} y\n     * @return {?}\n     */\n    static compare(x, y) {\n        if (ValueHelper.isNullOrUndefined(x) && ValueHelper.isNullOrUndefined(y)) {\n            return false;\n        }\n        if (ValueHelper.isNullOrUndefined(x) !== ValueHelper.isNullOrUndefined(y)) {\n            return false;\n        }\n        return x.value === y.value && x.highValue === y.highValue;\n    }\n}\nclass ModelChange extends ModelValues {\n    /**\n     * @param {?=} x\n     * @param {?=} y\n     * @return {?}\n     */\n    static compare(x, y) {\n        if (ValueHelper.isNullOrUndefined(x) && ValueHelper.isNullOrUndefined(y)) {\n            return false;\n        }\n        if (ValueHelper.isNullOrUndefined(x) !== ValueHelper.isNullOrUndefined(y)) {\n            return false;\n        }\n        return x.value === y.value &&\n            x.highValue === y.highValue &&\n            x.forceChange === y.forceChange;\n    }\n}\n/** @type {?} */\nconst NGX_SLIDER_CONTROL_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    /* tslint:disable-next-line: no-use-before-declare */\n    useExisting: forwardRef(() => SliderComponent),\n    multi: true,\n};\nclass SliderComponent {\n    /**\n     * @param {?} renderer\n     * @param {?} elementRef\n     * @param {?} changeDetectionRef\n     * @param {?} zone\n     */\n    constructor(renderer, elementRef, changeDetectionRef, zone) {\n        this.renderer = renderer;\n        this.elementRef = elementRef;\n        this.changeDetectionRef = changeDetectionRef;\n        this.zone = zone;\n        // Model for low value of slider. For simple slider, this is the only input. For range slider, this is the low value.\n        this.value = null;\n        // Output for low value slider to support two-way bindings\n        this.valueChange = new EventEmitter();\n        // Model for high value of slider. Not used in simple slider. For range slider, this is the high value.\n        this.highValue = null;\n        // Output for high value slider to support two-way bindings\n        this.highValueChange = new EventEmitter();\n        // An object with all the other options of the slider.\n        // Each option can be updated at runtime and the slider will automatically be re-rendered.\n        this.options = new Options();\n        // Event emitted when user starts interaction with the slider\n        this.userChangeStart = new EventEmitter();\n        // Event emitted on each change coming from user interaction\n        this.userChange = new EventEmitter();\n        // Event emitted when user finishes interaction with the slider\n        this.userChangeEnd = new EventEmitter();\n        this.initHasRun = false;\n        this.inputModelChangeSubject = new Subject();\n        this.inputModelChangeSubscription = null;\n        this.outputModelChangeSubject = new Subject();\n        this.outputModelChangeSubscription = null;\n        this.viewLowValue = null;\n        this.viewHighValue = null;\n        this.viewOptions = new Options();\n        this.handleHalfDimension = 0;\n        this.maxHandlePosition = 0;\n        this.currentTrackingPointer = null;\n        this.currentFocusPointer = null;\n        this.firstKeyDown = false;\n        this.touchId = null;\n        this.dragging = new Dragging();\n        // Host element class bindings\n        this.sliderElementVerticalClass = false;\n        this.sliderElementAnimateClass = false;\n        this.sliderElementWithLegendClass = false;\n        this.sliderElementDisabledAttr = null;\n        this.sliderElementAriaLabel = 'ngx-slider';\n        this.barStyle = {};\n        this.minPointerStyle = {};\n        this.maxPointerStyle = {};\n        this.fullBarTransparentClass = false;\n        this.selectionBarDraggableClass = false;\n        this.ticksUnderValuesClass = false;\n        this.intermediateTicks = false;\n        this.ticks = [];\n        this.eventListenerHelper = null;\n        this.onMoveEventListener = null;\n        this.onEndEventListener = null;\n        this.moving = false;\n        this.resizeObserver = null;\n        this.onTouchedCallback = null;\n        this.onChangeCallback = null;\n        this.eventListenerHelper = new EventListenerHelper(this.renderer);\n    }\n    /**\n     * @param {?} manualRefresh\n     * @return {?}\n     */\n    set manualRefresh(manualRefresh) {\n        this.unsubscribeManualRefresh();\n        this.manualRefreshSubscription = manualRefresh.subscribe(() => {\n            setTimeout(() => this.calculateViewDimensionsAndDetectChanges());\n        });\n    }\n    /**\n     * @param {?} triggerFocus\n     * @return {?}\n     */\n    set triggerFocus(triggerFocus) {\n        this.unsubscribeTriggerFocus();\n        this.triggerFocusSubscription = triggerFocus.subscribe((pointerType) => {\n            this.focusPointer(pointerType);\n        });\n    }\n    /**\n     * @return {?}\n     */\n    get range() {\n        return !ValueHelper.isNullOrUndefined(this.value) && !ValueHelper.isNullOrUndefined(this.highValue);\n    }\n    /**\n     * @return {?}\n     */\n    get showTicks() {\n        return this.viewOptions.showTicks;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this.viewOptions = new Options();\n        Object.assign(this.viewOptions, this.options);\n        // We need to run these two things first, before the rest of the init in ngAfterViewInit(),\n        // because these two settings are set through @HostBinding and Angular change detection\n        // mechanism doesn't like them changing in ngAfterViewInit()\n        this.updateDisabledState();\n        this.updateVerticalState();\n        this.updateAriaLabel();\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        this.applyOptions();\n        this.subscribeInputModelChangeSubject();\n        this.subscribeOutputModelChangeSubject();\n        // Once we apply options, we need to normalise model values for the first time\n        this.renormaliseModelValues();\n        this.viewLowValue = this.modelValueToViewValue(this.value);\n        if (this.range) {\n            this.viewHighValue = this.modelValueToViewValue(this.highValue);\n        }\n        else {\n            this.viewHighValue = null;\n        }\n        this.updateVerticalState(); // need to run this again to cover changes to slider elements\n        this.manageElementsStyle();\n        this.updateDisabledState();\n        this.calculateViewDimensions();\n        this.addAccessibility();\n        this.updateCeilLabel();\n        this.updateFloorLabel();\n        this.initHandles();\n        this.manageEventsBindings();\n        this.updateAriaLabel();\n        this.subscribeResizeObserver();\n        this.initHasRun = true;\n        // Run change detection manually to resolve some issues when init procedure changes values used in the view\n        if (!this.isRefDestroyed()) {\n            this.changeDetectionRef.detectChanges();\n        }\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        // Always apply options first\n        if (!ValueHelper.isNullOrUndefined(changes[\"options\"]) &&\n            JSON.stringify(changes[\"options\"].previousValue) !== JSON.stringify(changes[\"options\"].currentValue)) {\n            this.onChangeOptions();\n        }\n        // Then value changes\n        if (!ValueHelper.isNullOrUndefined(changes[\"value\"]) ||\n            !ValueHelper.isNullOrUndefined(changes[\"highValue\"])) {\n            this.inputModelChangeSubject.next({\n                value: this.value,\n                highValue: this.highValue,\n                forceChange: false,\n                internalChange: false\n            });\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.unbindEvents();\n        this.unsubscribeResizeObserver();\n        this.unsubscribeInputModelChangeSubject();\n        this.unsubscribeOutputModelChangeSubject();\n        this.unsubscribeManualRefresh();\n        this.unsubscribeTriggerFocus();\n    }\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    writeValue(obj) {\n        if (obj instanceof Array) {\n            this.value = obj[0];\n            this.highValue = obj[1];\n        }\n        else {\n            this.value = obj;\n        }\n        // ngOnChanges() is not called in this instance, so we need to communicate the change manually\n        this.inputModelChangeSubject.next({\n            value: this.value,\n            highValue: this.highValue,\n            forceChange: false,\n            internalChange: false\n        });\n    }\n    /**\n     * @param {?} onChangeCallback\n     * @return {?}\n     */\n    registerOnChange(onChangeCallback) {\n        this.onChangeCallback = onChangeCallback;\n    }\n    /**\n     * @param {?} onTouchedCallback\n     * @return {?}\n     */\n    registerOnTouched(onTouchedCallback) {\n        this.onTouchedCallback = onTouchedCallback;\n    }\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    setDisabledState(isDisabled) {\n        this.viewOptions.disabled = isDisabled;\n        this.updateDisabledState();\n    }\n    /**\n     * @param {?} ariaLabel\n     * @return {?}\n     */\n    setAriaLabel(ariaLabel) {\n        this.viewOptions.ariaLabel = ariaLabel;\n        this.updateAriaLabel();\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onResize(event) {\n        this.calculateViewDimensionsAndDetectChanges();\n    }\n    /**\n     * @return {?}\n     */\n    subscribeInputModelChangeSubject() {\n        this.inputModelChangeSubscription = this.inputModelChangeSubject\n            .pipe(distinctUntilChanged(ModelChange.compare), \n        // Hack to reset the status of the distinctUntilChanged() - if a \"fake\" event comes through with forceChange=true,\n        // we forcefully by-pass distinctUntilChanged(), but otherwise drop the event\n        filter((modelChange) => !modelChange.forceChange && !modelChange.internalChange))\n            .subscribe((modelChange) => this.applyInputModelChange(modelChange));\n    }\n    /**\n     * @return {?}\n     */\n    subscribeOutputModelChangeSubject() {\n        this.outputModelChangeSubscription = this.outputModelChangeSubject\n            .pipe(distinctUntilChanged(ModelChange.compare))\n            .subscribe((modelChange) => this.publishOutputModelChange(modelChange));\n    }\n    /**\n     * @return {?}\n     */\n    subscribeResizeObserver() {\n        if (CompatibilityHelper.isResizeObserverAvailable()) {\n            this.resizeObserver = new ResizeObserver(() => this.calculateViewDimensionsAndDetectChanges());\n            this.resizeObserver.observe(this.elementRef.nativeElement);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    unsubscribeResizeObserver() {\n        if (CompatibilityHelper.isResizeObserverAvailable() && this.resizeObserver !== null) {\n            this.resizeObserver.disconnect();\n            this.resizeObserver = null;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    unsubscribeOnMove() {\n        if (!ValueHelper.isNullOrUndefined(this.onMoveEventListener)) {\n            this.eventListenerHelper.detachEventListener(this.onMoveEventListener);\n            this.onMoveEventListener = null;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    unsubscribeOnEnd() {\n        if (!ValueHelper.isNullOrUndefined(this.onEndEventListener)) {\n            this.eventListenerHelper.detachEventListener(this.onEndEventListener);\n            this.onEndEventListener = null;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    unsubscribeInputModelChangeSubject() {\n        if (!ValueHelper.isNullOrUndefined(this.inputModelChangeSubscription)) {\n            this.inputModelChangeSubscription.unsubscribe();\n            this.inputModelChangeSubscription = null;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    unsubscribeOutputModelChangeSubject() {\n        if (!ValueHelper.isNullOrUndefined(this.outputModelChangeSubscription)) {\n            this.outputModelChangeSubscription.unsubscribe();\n            this.outputModelChangeSubscription = null;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    unsubscribeManualRefresh() {\n        if (!ValueHelper.isNullOrUndefined(this.manualRefreshSubscription)) {\n            this.manualRefreshSubscription.unsubscribe();\n            this.manualRefreshSubscription = null;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    unsubscribeTriggerFocus() {\n        if (!ValueHelper.isNullOrUndefined(this.triggerFocusSubscription)) {\n            this.triggerFocusSubscription.unsubscribe();\n            this.triggerFocusSubscription = null;\n        }\n    }\n    /**\n     * @param {?} pointerType\n     * @return {?}\n     */\n    getPointerElement(pointerType) {\n        if (pointerType === PointerType.Min) {\n            return this.minHandleElement;\n        }\n        else if (pointerType === PointerType.Max) {\n            return this.maxHandleElement;\n        }\n        return null;\n    }\n    /**\n     * @return {?}\n     */\n    getCurrentTrackingValue() {\n        if (this.currentTrackingPointer === PointerType.Min) {\n            return this.viewLowValue;\n        }\n        else if (this.currentTrackingPointer === PointerType.Max) {\n            return this.viewHighValue;\n        }\n        return null;\n    }\n    /**\n     * @param {?} modelValue\n     * @return {?}\n     */\n    modelValueToViewValue(modelValue) {\n        if (ValueHelper.isNullOrUndefined(modelValue)) {\n            return NaN;\n        }\n        if (!ValueHelper.isNullOrUndefined(this.viewOptions.stepsArray) && !this.viewOptions.bindIndexForStepsArray) {\n            return ValueHelper.findStepIndex(+modelValue, this.viewOptions.stepsArray);\n        }\n        return +modelValue;\n    }\n    /**\n     * @param {?} viewValue\n     * @return {?}\n     */\n    viewValueToModelValue(viewValue) {\n        if (!ValueHelper.isNullOrUndefined(this.viewOptions.stepsArray) && !this.viewOptions.bindIndexForStepsArray) {\n            return this.getStepValue(viewValue);\n        }\n        return viewValue;\n    }\n    /**\n     * @param {?} sliderValue\n     * @return {?}\n     */\n    getStepValue(sliderValue) {\n        /** @type {?} */\n        const step = this.viewOptions.stepsArray[sliderValue];\n        return (!ValueHelper.isNullOrUndefined(step)) ? step.value : NaN;\n    }\n    /**\n     * @return {?}\n     */\n    applyViewChange() {\n        this.value = this.viewValueToModelValue(this.viewLowValue);\n        if (this.range) {\n            this.highValue = this.viewValueToModelValue(this.viewHighValue);\n        }\n        this.outputModelChangeSubject.next({\n            value: this.value,\n            highValue: this.highValue,\n            userEventInitiated: true,\n            forceChange: false\n        });\n        // At this point all changes are applied and outputs are emitted, so we should be done.\n        // However, input changes are communicated in different stream and we need to be ready to\n        // act on the next input change even if it is exactly the same as last input change.\n        // Therefore, we send a special event to reset the stream.\n        this.inputModelChangeSubject.next({\n            value: this.value,\n            highValue: this.highValue,\n            forceChange: false,\n            internalChange: true\n        });\n    }\n    /**\n     * @param {?} modelChange\n     * @return {?}\n     */\n    applyInputModelChange(modelChange) {\n        /** @type {?} */\n        const normalisedModelChange = this.normaliseModelValues(modelChange);\n        /** @type {?} */\n        const normalisationChange = !ModelValues.compare(modelChange, normalisedModelChange);\n        if (normalisationChange) {\n            this.value = normalisedModelChange.value;\n            this.highValue = normalisedModelChange.highValue;\n        }\n        this.viewLowValue = this.modelValueToViewValue(normalisedModelChange.value);\n        if (this.range) {\n            this.viewHighValue = this.modelValueToViewValue(normalisedModelChange.highValue);\n        }\n        else {\n            this.viewHighValue = null;\n        }\n        this.updateLowHandle(this.valueToPosition(this.viewLowValue));\n        if (this.range) {\n            this.updateHighHandle(this.valueToPosition(this.viewHighValue));\n        }\n        this.updateSelectionBar();\n        this.updateTicksScale();\n        this.updateAriaAttributes();\n        if (this.range) {\n            this.updateCombinedLabel();\n        }\n        // At the end, we need to communicate the model change to the outputs as well\n        // Normalisation changes are also always forced out to ensure that subscribers always end up in correct state\n        this.outputModelChangeSubject.next({\n            value: normalisedModelChange.value,\n            highValue: normalisedModelChange.highValue,\n            forceChange: normalisationChange,\n            userEventInitiated: false\n        });\n    }\n    /**\n     * @param {?} modelChange\n     * @return {?}\n     */\n    publishOutputModelChange(modelChange) {\n        /** @type {?} */\n        const emitOutputs = () => {\n            this.valueChange.emit(modelChange.value);\n            if (this.range) {\n                this.highValueChange.emit(modelChange.highValue);\n            }\n            if (!ValueHelper.isNullOrUndefined(this.onChangeCallback)) {\n                if (this.range) {\n                    this.onChangeCallback([modelChange.value, modelChange.highValue]);\n                }\n                else {\n                    this.onChangeCallback(modelChange.value);\n                }\n            }\n            if (!ValueHelper.isNullOrUndefined(this.onTouchedCallback)) {\n                if (this.range) {\n                    this.onTouchedCallback([modelChange.value, modelChange.highValue]);\n                }\n                else {\n                    this.onTouchedCallback(modelChange.value);\n                }\n            }\n        };\n        if (modelChange.userEventInitiated) {\n            // If this change was initiated by a user event, we can emit outputs in the same tick\n            emitOutputs();\n            this.userChange.emit(this.getChangeContext());\n        }\n        else {\n            // But, if the change was initated by something else like a change in input bindings,\n            // we need to wait until next tick to emit the outputs to keep Angular change detection happy\n            setTimeout(() => { emitOutputs(); });\n        }\n    }\n    /**\n     * @param {?} input\n     * @return {?}\n     */\n    normaliseModelValues(input) {\n        /** @type {?} */\n        const normalisedInput = new ModelValues();\n        normalisedInput.value = input.value;\n        normalisedInput.highValue = input.highValue;\n        if (!ValueHelper.isNullOrUndefined(this.viewOptions.stepsArray)) {\n            // When using steps array, only round to nearest step in the array\n            // No other enforcement can be done, as the step array may be out of order, and that is perfectly fine\n            if (this.viewOptions.enforceStepsArray) {\n                /** @type {?} */\n                const valueIndex = ValueHelper.findStepIndex(normalisedInput.value, this.viewOptions.stepsArray);\n                normalisedInput.value = this.viewOptions.stepsArray[valueIndex].value;\n                if (this.range) {\n                    /** @type {?} */\n                    const highValueIndex = ValueHelper.findStepIndex(normalisedInput.highValue, this.viewOptions.stepsArray);\n                    normalisedInput.highValue = this.viewOptions.stepsArray[highValueIndex].value;\n                }\n            }\n            return normalisedInput;\n        }\n        if (this.viewOptions.enforceStep) {\n            normalisedInput.value = this.roundStep(normalisedInput.value);\n            if (this.range) {\n                normalisedInput.highValue = this.roundStep(normalisedInput.highValue);\n            }\n        }\n        if (this.viewOptions.enforceRange) {\n            normalisedInput.value = MathHelper.clampToRange(normalisedInput.value, this.viewOptions.floor, this.viewOptions.ceil);\n            if (this.range) {\n                normalisedInput.highValue = MathHelper.clampToRange(normalisedInput.highValue, this.viewOptions.floor, this.viewOptions.ceil);\n            }\n            // Make sure that range slider invariant (value <= highValue) is always satisfied\n            if (this.range && input.value > input.highValue) {\n                // We know that both values are now clamped correctly, they may just be in the wrong order\n                // So the easy solution is to swap them... except swapping is sometimes disabled in options, so we make the two values the same\n                if (this.viewOptions.noSwitching) {\n                    normalisedInput.value = normalisedInput.highValue;\n                }\n                else {\n                    /** @type {?} */\n                    const tempValue = input.value;\n                    normalisedInput.value = input.highValue;\n                    normalisedInput.highValue = tempValue;\n                }\n            }\n        }\n        return normalisedInput;\n    }\n    /**\n     * @return {?}\n     */\n    renormaliseModelValues() {\n        /** @type {?} */\n        const previousModelValues = {\n            value: this.value,\n            highValue: this.highValue\n        };\n        /** @type {?} */\n        const normalisedModelValues = this.normaliseModelValues(previousModelValues);\n        if (!ModelValues.compare(normalisedModelValues, previousModelValues)) {\n            this.value = normalisedModelValues.value;\n            this.highValue = normalisedModelValues.highValue;\n            this.outputModelChangeSubject.next({\n                value: this.value,\n                highValue: this.highValue,\n                forceChange: true,\n                userEventInitiated: false\n            });\n        }\n    }\n    /**\n     * @return {?}\n     */\n    onChangeOptions() {\n        if (!this.initHasRun) {\n            return;\n        }\n        /** @type {?} */\n        const previousOptionsInfluencingEventBindings = this.getOptionsInfluencingEventBindings(this.viewOptions);\n        this.applyOptions();\n        /** @type {?} */\n        const newOptionsInfluencingEventBindings = this.getOptionsInfluencingEventBindings(this.viewOptions);\n        /** @type {?} */\n        const rebindEvents = !ValueHelper.areArraysEqual(previousOptionsInfluencingEventBindings, newOptionsInfluencingEventBindings);\n        // With new options, we need to re-normalise model values if necessary\n        this.renormaliseModelValues();\n        this.viewLowValue = this.modelValueToViewValue(this.value);\n        if (this.range) {\n            this.viewHighValue = this.modelValueToViewValue(this.highValue);\n        }\n        else {\n            this.viewHighValue = null;\n        }\n        this.resetSlider(rebindEvents);\n    }\n    /**\n     * @return {?}\n     */\n    applyOptions() {\n        this.viewOptions = new Options();\n        Object.assign(this.viewOptions, this.options);\n        this.viewOptions.draggableRange = this.range && this.viewOptions.draggableRange;\n        this.viewOptions.draggableRangeOnly = this.range && this.viewOptions.draggableRangeOnly;\n        if (this.viewOptions.draggableRangeOnly) {\n            this.viewOptions.draggableRange = true;\n        }\n        this.viewOptions.showTicks = this.viewOptions.showTicks ||\n            this.viewOptions.showTicksValues ||\n            !ValueHelper.isNullOrUndefined(this.viewOptions.ticksArray);\n        if (this.viewOptions.showTicks &&\n            (!ValueHelper.isNullOrUndefined(this.viewOptions.tickStep) || !ValueHelper.isNullOrUndefined(this.viewOptions.ticksArray))) {\n            this.intermediateTicks = true;\n        }\n        this.viewOptions.showSelectionBar = this.viewOptions.showSelectionBar ||\n            this.viewOptions.showSelectionBarEnd ||\n            !ValueHelper.isNullOrUndefined(this.viewOptions.showSelectionBarFromValue);\n        if (!ValueHelper.isNullOrUndefined(this.viewOptions.stepsArray)) {\n            this.applyStepsArrayOptions();\n        }\n        else {\n            this.applyFloorCeilOptions();\n        }\n        if (ValueHelper.isNullOrUndefined(this.viewOptions.combineLabels)) {\n            this.viewOptions.combineLabels = (minValue, maxValue) => {\n                return minValue + ' - ' + maxValue;\n            };\n        }\n        if (this.viewOptions.logScale && this.viewOptions.floor === 0) {\n            throw Error('Can\\'t use floor=0 with logarithmic scale');\n        }\n    }\n    /**\n     * @return {?}\n     */\n    applyStepsArrayOptions() {\n        this.viewOptions.floor = 0;\n        this.viewOptions.ceil = this.viewOptions.stepsArray.length - 1;\n        this.viewOptions.step = 1;\n        if (ValueHelper.isNullOrUndefined(this.viewOptions.translate)) {\n            this.viewOptions.translate = (modelValue) => {\n                if (this.viewOptions.bindIndexForStepsArray) {\n                    return String(this.getStepValue(modelValue));\n                }\n                return String(modelValue);\n            };\n        }\n    }\n    /**\n     * @return {?}\n     */\n    applyFloorCeilOptions() {\n        if (ValueHelper.isNullOrUndefined(this.viewOptions.step)) {\n            this.viewOptions.step = 1;\n        }\n        else {\n            this.viewOptions.step = +this.viewOptions.step;\n            if (this.viewOptions.step <= 0) {\n                this.viewOptions.step = 1;\n            }\n        }\n        if (ValueHelper.isNullOrUndefined(this.viewOptions.ceil) ||\n            ValueHelper.isNullOrUndefined(this.viewOptions.floor)) {\n            throw Error('floor and ceil options must be supplied');\n        }\n        this.viewOptions.ceil = +this.viewOptions.ceil;\n        this.viewOptions.floor = +this.viewOptions.floor;\n        if (ValueHelper.isNullOrUndefined(this.viewOptions.translate)) {\n            this.viewOptions.translate = (value) => String(value);\n        }\n    }\n    /**\n     * @param {?=} rebindEvents\n     * @return {?}\n     */\n    resetSlider(rebindEvents = true) {\n        this.manageElementsStyle();\n        this.addAccessibility();\n        this.updateCeilLabel();\n        this.updateFloorLabel();\n        if (rebindEvents) {\n            this.unbindEvents();\n            this.manageEventsBindings();\n        }\n        this.updateDisabledState();\n        this.updateAriaLabel();\n        this.calculateViewDimensions();\n        this.refocusPointerIfNeeded();\n    }\n    /**\n     * @param {?} pointerType\n     * @return {?}\n     */\n    focusPointer(pointerType) {\n        // If not supplied, use min pointer as default\n        if (pointerType !== PointerType.Min && pointerType !== PointerType.Max) {\n            pointerType = PointerType.Min;\n        }\n        if (pointerType === PointerType.Min) {\n            this.minHandleElement.focus();\n        }\n        else if (this.range && pointerType === PointerType.Max) {\n            this.maxHandleElement.focus();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    refocusPointerIfNeeded() {\n        if (!ValueHelper.isNullOrUndefined(this.currentFocusPointer)) {\n            this.onPointerFocus(this.currentFocusPointer);\n            /** @type {?} */\n            const element = this.getPointerElement(this.currentFocusPointer);\n            element.focus();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    manageElementsStyle() {\n        this.updateScale();\n        this.floorLabelElement.setAlwaysHide(this.viewOptions.showTicksValues || this.viewOptions.hideLimitLabels);\n        this.ceilLabelElement.setAlwaysHide(this.viewOptions.showTicksValues || this.viewOptions.hideLimitLabels);\n        /** @type {?} */\n        const hideLabelsForTicks = this.viewOptions.showTicksValues && !this.intermediateTicks;\n        this.minHandleLabelElement.setAlwaysHide(hideLabelsForTicks || this.viewOptions.hidePointerLabels);\n        this.maxHandleLabelElement.setAlwaysHide(hideLabelsForTicks || !this.range || this.viewOptions.hidePointerLabels);\n        this.combinedLabelElement.setAlwaysHide(hideLabelsForTicks || !this.range || this.viewOptions.hidePointerLabels);\n        this.selectionBarElement.setAlwaysHide(!this.range && !this.viewOptions.showSelectionBar);\n        this.leftOuterSelectionBarElement.setAlwaysHide(!this.range || !this.viewOptions.showOuterSelectionBars);\n        this.rightOuterSelectionBarElement.setAlwaysHide(!this.range || !this.viewOptions.showOuterSelectionBars);\n        this.fullBarTransparentClass = this.range && this.viewOptions.showOuterSelectionBars;\n        this.selectionBarDraggableClass = this.viewOptions.draggableRange && !this.viewOptions.onlyBindHandles;\n        this.ticksUnderValuesClass = this.intermediateTicks && this.options.showTicksValues;\n        if (this.sliderElementVerticalClass !== this.viewOptions.vertical) {\n            this.updateVerticalState();\n            // The above change in host component class will not be applied until the end of this cycle\n            // However, functions calculating the slider position expect the slider to be already styled as vertical\n            // So as a workaround, we need to reset the slider once again to compute the correct values\n            setTimeout(() => { this.resetSlider(); });\n        }\n        // Changing animate class may interfere with slider reset/initialisation, so we should set it separately,\n        // after all is properly set up\n        if (this.sliderElementAnimateClass !== this.viewOptions.animate) {\n            setTimeout(() => { this.sliderElementAnimateClass = this.viewOptions.animate; });\n        }\n        this.updateRotate();\n    }\n    /**\n     * @return {?}\n     */\n    manageEventsBindings() {\n        if (this.viewOptions.disabled || this.viewOptions.readOnly) {\n            this.unbindEvents();\n        }\n        else {\n            this.bindEvents();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    updateDisabledState() {\n        this.sliderElementDisabledAttr = this.viewOptions.disabled ? 'disabled' : null;\n    }\n    /**\n     * @return {?}\n     */\n    updateAriaLabel() {\n        this.sliderElementAriaLabel = this.viewOptions.ariaLabel || 'nxg-slider';\n    }\n    /**\n     * @return {?}\n     */\n    updateVerticalState() {\n        this.sliderElementVerticalClass = this.viewOptions.vertical;\n        for (const element of this.getAllSliderElements()) {\n            // This is also called before ngAfterInit, so need to check that view child bindings work\n            if (!ValueHelper.isNullOrUndefined(element)) {\n                element.setVertical(this.viewOptions.vertical);\n            }\n        }\n    }\n    /**\n     * @return {?}\n     */\n    updateScale() {\n        for (const element of this.getAllSliderElements()) {\n            element.setScale(this.viewOptions.scale);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    updateRotate() {\n        for (const element of this.getAllSliderElements()) {\n            element.setRotate(this.viewOptions.rotate);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    getAllSliderElements() {\n        return [this.leftOuterSelectionBarElement,\n            this.rightOuterSelectionBarElement,\n            this.fullBarElement,\n            this.selectionBarElement,\n            this.minHandleElement,\n            this.maxHandleElement,\n            this.floorLabelElement,\n            this.ceilLabelElement,\n            this.minHandleLabelElement,\n            this.maxHandleLabelElement,\n            this.combinedLabelElement,\n            this.ticksElement\n        ];\n    }\n    /**\n     * @return {?}\n     */\n    initHandles() {\n        this.updateLowHandle(this.valueToPosition(this.viewLowValue));\n        /*\n           the order here is important since the selection bar should be\n           updated after the high handle but before the combined label\n           */\n        if (this.range) {\n            this.updateHighHandle(this.valueToPosition(this.viewHighValue));\n        }\n        this.updateSelectionBar();\n        if (this.range) {\n            this.updateCombinedLabel();\n        }\n        this.updateTicksScale();\n    }\n    /**\n     * @return {?}\n     */\n    addAccessibility() {\n        this.updateAriaAttributes();\n        this.minHandleElement.role = 'slider';\n        if (this.viewOptions.keyboardSupport &&\n            !(this.viewOptions.readOnly || this.viewOptions.disabled)) {\n            this.minHandleElement.tabindex = '0';\n        }\n        else {\n            this.minHandleElement.tabindex = '';\n        }\n        this.minHandleElement.ariaOrientation = (this.viewOptions.vertical || this.viewOptions.rotate !== 0) ? 'vertical' : 'horizontal';\n        if (!ValueHelper.isNullOrUndefined(this.viewOptions.ariaLabel)) {\n            this.minHandleElement.ariaLabel = this.viewOptions.ariaLabel;\n        }\n        else if (!ValueHelper.isNullOrUndefined(this.viewOptions.ariaLabelledBy)) {\n            this.minHandleElement.ariaLabelledBy = this.viewOptions.ariaLabelledBy;\n        }\n        if (this.range) {\n            this.maxHandleElement.role = 'slider';\n            if (this.viewOptions.keyboardSupport &&\n                !(this.viewOptions.readOnly || this.viewOptions.disabled)) {\n                this.maxHandleElement.tabindex = '0';\n            }\n            else {\n                this.maxHandleElement.tabindex = '';\n            }\n            this.maxHandleElement.ariaOrientation = (this.viewOptions.vertical || this.viewOptions.rotate !== 0) ? 'vertical' : 'horizontal';\n            if (!ValueHelper.isNullOrUndefined(this.viewOptions.ariaLabelHigh)) {\n                this.maxHandleElement.ariaLabel = this.viewOptions.ariaLabelHigh;\n            }\n            else if (!ValueHelper.isNullOrUndefined(this.viewOptions.ariaLabelledByHigh)) {\n                this.maxHandleElement.ariaLabelledBy = this.viewOptions.ariaLabelledByHigh;\n            }\n        }\n    }\n    /**\n     * @return {?}\n     */\n    updateAriaAttributes() {\n        this.minHandleElement.ariaValueNow = (+this.value).toString();\n        this.minHandleElement.ariaValueText = this.viewOptions.translate(+this.value, LabelType.Low);\n        this.minHandleElement.ariaValueMin = this.viewOptions.floor.toString();\n        this.minHandleElement.ariaValueMax = this.viewOptions.ceil.toString();\n        if (this.range) {\n            this.maxHandleElement.ariaValueNow = (+this.highValue).toString();\n            this.maxHandleElement.ariaValueText = this.viewOptions.translate(+this.highValue, LabelType.High);\n            this.maxHandleElement.ariaValueMin = this.viewOptions.floor.toString();\n            this.maxHandleElement.ariaValueMax = this.viewOptions.ceil.toString();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    calculateViewDimensions() {\n        if (!ValueHelper.isNullOrUndefined(this.viewOptions.handleDimension)) {\n            this.minHandleElement.setDimension(this.viewOptions.handleDimension);\n        }\n        else {\n            this.minHandleElement.calculateDimension();\n        }\n        /** @type {?} */\n        const handleWidth = this.minHandleElement.dimension;\n        this.handleHalfDimension = handleWidth / 2;\n        if (!ValueHelper.isNullOrUndefined(this.viewOptions.barDimension)) {\n            this.fullBarElement.setDimension(this.viewOptions.barDimension);\n        }\n        else {\n            this.fullBarElement.calculateDimension();\n        }\n        this.maxHandlePosition = this.fullBarElement.dimension - handleWidth;\n        if (this.initHasRun) {\n            this.updateFloorLabel();\n            this.updateCeilLabel();\n            this.initHandles();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    calculateViewDimensionsAndDetectChanges() {\n        this.calculateViewDimensions();\n        if (!this.isRefDestroyed()) {\n            this.changeDetectionRef.detectChanges();\n        }\n    }\n    /**\n     * If the slider reference is already destroyed\n     * @return {?} boolean - true if ref is destroyed\n     */\n    isRefDestroyed() {\n        return this.changeDetectionRef['destroyed'];\n    }\n    /**\n     * @return {?}\n     */\n    updateTicksScale() {\n        if (!this.viewOptions.showTicks) {\n            setTimeout(() => { this.sliderElementWithLegendClass = false; });\n            return;\n        }\n        /** @type {?} */\n        const ticksArray = !ValueHelper.isNullOrUndefined(this.viewOptions.ticksArray)\n            ? this.viewOptions.ticksArray\n            : this.getTicksArray();\n        /** @type {?} */\n        const translate = this.viewOptions.vertical ? 'translateY' : 'translateX';\n        if (this.viewOptions.rightToLeft) {\n            ticksArray.reverse();\n        }\n        /** @type {?} */\n        const tickValueStep = !ValueHelper.isNullOrUndefined(this.viewOptions.tickValueStep) ? this.viewOptions.tickValueStep :\n            (!ValueHelper.isNullOrUndefined(this.viewOptions.tickStep) ? this.viewOptions.tickStep : this.viewOptions.step);\n        /** @type {?} */\n        let hasAtLeastOneLegend = false;\n        /** @type {?} */\n        const newTicks = ticksArray.map((value) => {\n            /** @type {?} */\n            let position = this.valueToPosition(value);\n            if (this.viewOptions.vertical) {\n                position = this.maxHandlePosition - position;\n            }\n            /** @type {?} */\n            const translation = translate + '(' + Math.round(position) + 'px)';\n            /** @type {?} */\n            const tick = new Tick();\n            tick.selected = this.isTickSelected(value);\n            tick.style = {\n                '-webkit-transform': translation,\n                '-moz-transform': translation,\n                '-o-transform': translation,\n                '-ms-transform': translation,\n                transform: translation,\n            };\n            if (tick.selected && !ValueHelper.isNullOrUndefined(this.viewOptions.getSelectionBarColor)) {\n                tick.style['background-color'] = this.getSelectionBarColor();\n            }\n            if (!tick.selected && !ValueHelper.isNullOrUndefined(this.viewOptions.getTickColor)) {\n                tick.style['background-color'] = this.getTickColor(value);\n            }\n            if (!ValueHelper.isNullOrUndefined(this.viewOptions.ticksTooltip)) {\n                tick.tooltip = this.viewOptions.ticksTooltip(value);\n                tick.tooltipPlacement = this.viewOptions.vertical ? 'right' : 'top';\n            }\n            if (this.viewOptions.showTicksValues && !ValueHelper.isNullOrUndefined(tickValueStep) &&\n                MathHelper.isModuloWithinPrecisionLimit(value, tickValueStep, this.viewOptions.precisionLimit)) {\n                tick.value = this.getDisplayValue(value, LabelType.TickValue);\n                if (!ValueHelper.isNullOrUndefined(this.viewOptions.ticksValuesTooltip)) {\n                    tick.valueTooltip = this.viewOptions.ticksValuesTooltip(value);\n                    tick.valueTooltipPlacement = this.viewOptions.vertical\n                        ? 'right'\n                        : 'top';\n                }\n            }\n            /** @type {?} */\n            let legend = null;\n            if (!ValueHelper.isNullOrUndefined(this.viewOptions.stepsArray)) {\n                /** @type {?} */\n                const step = this.viewOptions.stepsArray[value];\n                if (!ValueHelper.isNullOrUndefined(this.viewOptions.getStepLegend)) {\n                    legend = this.viewOptions.getStepLegend(step);\n                }\n                else if (!ValueHelper.isNullOrUndefined(step)) {\n                    legend = step.legend;\n                }\n            }\n            else if (!ValueHelper.isNullOrUndefined(this.viewOptions.getLegend)) {\n                legend = this.viewOptions.getLegend(value);\n            }\n            if (!ValueHelper.isNullOrUndefined(legend)) {\n                tick.legend = legend;\n                hasAtLeastOneLegend = true;\n            }\n            return tick;\n        });\n        setTimeout(() => { this.sliderElementWithLegendClass = hasAtLeastOneLegend; });\n        // We should avoid re-creating the ticks array if possible\n        // This both improves performance and makes CSS animations work correctly\n        if (!ValueHelper.isNullOrUndefined(this.ticks) && this.ticks.length === newTicks.length) {\n            for (let i = 0; i < newTicks.length; ++i) {\n                Object.assign(this.ticks[i], newTicks[i]);\n            }\n        }\n        else {\n            this.ticks = newTicks;\n        }\n        if (!this.isRefDestroyed()) {\n            this.changeDetectionRef.detectChanges();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    getTicksArray() {\n        /** @type {?} */\n        const step = (!ValueHelper.isNullOrUndefined(this.viewOptions.tickStep)) ? this.viewOptions.tickStep : this.viewOptions.step;\n        /** @type {?} */\n        const ticksArray = [];\n        /** @type {?} */\n        const numberOfValues = 1 + Math.floor(MathHelper.roundToPrecisionLimit(Math.abs(this.viewOptions.ceil - this.viewOptions.floor) / step, this.viewOptions.precisionLimit));\n        for (let index = 0; index < numberOfValues; ++index) {\n            ticksArray.push(MathHelper.roundToPrecisionLimit(this.viewOptions.floor + step * index, this.viewOptions.precisionLimit));\n        }\n        return ticksArray;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    isTickSelected(value) {\n        if (!this.range) {\n            if (!ValueHelper.isNullOrUndefined(this.viewOptions.showSelectionBarFromValue)) {\n                /** @type {?} */\n                const center = this.viewOptions.showSelectionBarFromValue;\n                if (this.viewLowValue > center &&\n                    value >= center &&\n                    value <= this.viewLowValue) {\n                    return true;\n                }\n                else if (this.viewLowValue < center &&\n                    value <= center &&\n                    value >= this.viewLowValue) {\n                    return true;\n                }\n            }\n            else if (this.viewOptions.showSelectionBarEnd) {\n                if (value >= this.viewLowValue) {\n                    return true;\n                }\n            }\n            else if (this.viewOptions.showSelectionBar && value <= this.viewLowValue) {\n                return true;\n            }\n        }\n        if (this.range && value >= this.viewLowValue && value <= this.viewHighValue) {\n            return true;\n        }\n        return false;\n    }\n    /**\n     * @return {?}\n     */\n    updateFloorLabel() {\n        if (!this.floorLabelElement.alwaysHide) {\n            this.floorLabelElement.setValue(this.getDisplayValue(this.viewOptions.floor, LabelType.Floor));\n            this.floorLabelElement.calculateDimension();\n            /** @type {?} */\n            const position = this.viewOptions.rightToLeft\n                ? this.fullBarElement.dimension - this.floorLabelElement.dimension\n                : 0;\n            this.floorLabelElement.setPosition(position);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    updateCeilLabel() {\n        if (!this.ceilLabelElement.alwaysHide) {\n            this.ceilLabelElement.setValue(this.getDisplayValue(this.viewOptions.ceil, LabelType.Ceil));\n            this.ceilLabelElement.calculateDimension();\n            /** @type {?} */\n            const position = this.viewOptions.rightToLeft\n                ? 0\n                : this.fullBarElement.dimension - this.ceilLabelElement.dimension;\n            this.ceilLabelElement.setPosition(position);\n        }\n    }\n    /**\n     * @param {?} which\n     * @param {?} newPos\n     * @return {?}\n     */\n    updateHandles(which, newPos) {\n        if (which === PointerType.Min) {\n            this.updateLowHandle(newPos);\n        }\n        else if (which === PointerType.Max) {\n            this.updateHighHandle(newPos);\n        }\n        this.updateSelectionBar();\n        this.updateTicksScale();\n        if (this.range) {\n            this.updateCombinedLabel();\n        }\n    }\n    /**\n     * @param {?} labelType\n     * @param {?} newPos\n     * @return {?}\n     */\n    getHandleLabelPos(labelType, newPos) {\n        /** @type {?} */\n        const labelDimension = (labelType === PointerType.Min)\n            ? this.minHandleLabelElement.dimension\n            : this.maxHandleLabelElement.dimension;\n        /** @type {?} */\n        const nearHandlePos = newPos - labelDimension / 2 + this.handleHalfDimension;\n        /** @type {?} */\n        const endOfBarPos = this.fullBarElement.dimension - labelDimension;\n        if (!this.viewOptions.boundPointerLabels) {\n            return nearHandlePos;\n        }\n        if ((this.viewOptions.rightToLeft && labelType === PointerType.Min) ||\n            (!this.viewOptions.rightToLeft && labelType === PointerType.Max)) {\n            return Math.min(nearHandlePos, endOfBarPos);\n        }\n        else {\n            return Math.min(Math.max(nearHandlePos, 0), endOfBarPos);\n        }\n    }\n    /**\n     * @param {?} newPos\n     * @return {?}\n     */\n    updateLowHandle(newPos) {\n        this.minHandleElement.setPosition(newPos);\n        this.minHandleLabelElement.setValue(this.getDisplayValue(this.viewLowValue, LabelType.Low));\n        this.minHandleLabelElement.setPosition(this.getHandleLabelPos(PointerType.Min, newPos));\n        if (!ValueHelper.isNullOrUndefined(this.viewOptions.getPointerColor)) {\n            this.minPointerStyle = {\n                backgroundColor: this.getPointerColor(PointerType.Min),\n            };\n        }\n        if (this.viewOptions.autoHideLimitLabels) {\n            this.updateFloorAndCeilLabelsVisibility();\n        }\n    }\n    /**\n     * @param {?} newPos\n     * @return {?}\n     */\n    updateHighHandle(newPos) {\n        this.maxHandleElement.setPosition(newPos);\n        this.maxHandleLabelElement.setValue(this.getDisplayValue(this.viewHighValue, LabelType.High));\n        this.maxHandleLabelElement.setPosition(this.getHandleLabelPos(PointerType.Max, newPos));\n        if (!ValueHelper.isNullOrUndefined(this.viewOptions.getPointerColor)) {\n            this.maxPointerStyle = {\n                backgroundColor: this.getPointerColor(PointerType.Max),\n            };\n        }\n        if (this.viewOptions.autoHideLimitLabels) {\n            this.updateFloorAndCeilLabelsVisibility();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    updateFloorAndCeilLabelsVisibility() {\n        // Show based only on hideLimitLabels if pointer labels are hidden\n        if (this.viewOptions.hidePointerLabels) {\n            return;\n        }\n        /** @type {?} */\n        let floorLabelHidden = false;\n        /** @type {?} */\n        let ceilLabelHidden = false;\n        /** @type {?} */\n        const isMinLabelAtFloor = this.isLabelBelowFloorLabel(this.minHandleLabelElement);\n        /** @type {?} */\n        const isMinLabelAtCeil = this.isLabelAboveCeilLabel(this.minHandleLabelElement);\n        /** @type {?} */\n        const isMaxLabelAtCeil = this.isLabelAboveCeilLabel(this.maxHandleLabelElement);\n        /** @type {?} */\n        const isCombinedLabelAtFloor = this.isLabelBelowFloorLabel(this.combinedLabelElement);\n        /** @type {?} */\n        const isCombinedLabelAtCeil = this.isLabelAboveCeilLabel(this.combinedLabelElement);\n        if (isMinLabelAtFloor) {\n            floorLabelHidden = true;\n            this.floorLabelElement.hide();\n        }\n        else {\n            floorLabelHidden = false;\n            this.floorLabelElement.show();\n        }\n        if (isMinLabelAtCeil) {\n            ceilLabelHidden = true;\n            this.ceilLabelElement.hide();\n        }\n        else {\n            ceilLabelHidden = false;\n            this.ceilLabelElement.show();\n        }\n        if (this.range) {\n            /** @type {?} */\n            const hideCeil = this.combinedLabelElement.isVisible() ? isCombinedLabelAtCeil : isMaxLabelAtCeil;\n            /** @type {?} */\n            const hideFloor = this.combinedLabelElement.isVisible() ? isCombinedLabelAtFloor : isMinLabelAtFloor;\n            if (hideCeil) {\n                this.ceilLabelElement.hide();\n            }\n            else if (!ceilLabelHidden) {\n                this.ceilLabelElement.show();\n            }\n            // Hide or show floor label\n            if (hideFloor) {\n                this.floorLabelElement.hide();\n            }\n            else if (!floorLabelHidden) {\n                this.floorLabelElement.show();\n            }\n        }\n    }\n    /**\n     * @param {?} label\n     * @return {?}\n     */\n    isLabelBelowFloorLabel(label) {\n        /** @type {?} */\n        const pos = label.position;\n        /** @type {?} */\n        const dim = label.dimension;\n        /** @type {?} */\n        const floorPos = this.floorLabelElement.position;\n        /** @type {?} */\n        const floorDim = this.floorLabelElement.dimension;\n        return this.viewOptions.rightToLeft\n            ? pos + dim >= floorPos - 2\n            : pos <= floorPos + floorDim + 2;\n    }\n    /**\n     * @param {?} label\n     * @return {?}\n     */\n    isLabelAboveCeilLabel(label) {\n        /** @type {?} */\n        const pos = label.position;\n        /** @type {?} */\n        const dim = label.dimension;\n        /** @type {?} */\n        const ceilPos = this.ceilLabelElement.position;\n        /** @type {?} */\n        const ceilDim = this.ceilLabelElement.dimension;\n        return this.viewOptions.rightToLeft\n            ? pos <= ceilPos + ceilDim + 2\n            : pos + dim >= ceilPos - 2;\n    }\n    /**\n     * @return {?}\n     */\n    updateSelectionBar() {\n        /** @type {?} */\n        let position = 0;\n        /** @type {?} */\n        let dimension = 0;\n        /** @type {?} */\n        const isSelectionBarFromRight = this.viewOptions.rightToLeft\n            ? !this.viewOptions.showSelectionBarEnd\n            : this.viewOptions.showSelectionBarEnd;\n        /** @type {?} */\n        const positionForRange = this.viewOptions.rightToLeft\n            ? this.maxHandleElement.position + this.handleHalfDimension\n            : this.minHandleElement.position + this.handleHalfDimension;\n        if (this.range) {\n            dimension = Math.abs(this.maxHandleElement.position - this.minHandleElement.position);\n            position = positionForRange;\n        }\n        else {\n            if (!ValueHelper.isNullOrUndefined(this.viewOptions.showSelectionBarFromValue)) {\n                /** @type {?} */\n                const center = this.viewOptions.showSelectionBarFromValue;\n                /** @type {?} */\n                const centerPosition = this.valueToPosition(center);\n                /** @type {?} */\n                const isModelGreaterThanCenter = this.viewOptions.rightToLeft\n                    ? this.viewLowValue <= center\n                    : this.viewLowValue > center;\n                if (isModelGreaterThanCenter) {\n                    dimension = this.minHandleElement.position - centerPosition;\n                    position = centerPosition + this.handleHalfDimension;\n                }\n                else {\n                    dimension = centerPosition - this.minHandleElement.position;\n                    position = this.minHandleElement.position + this.handleHalfDimension;\n                }\n            }\n            else if (isSelectionBarFromRight) {\n                dimension = Math.ceil(Math.abs(this.maxHandlePosition - this.minHandleElement.position) + this.handleHalfDimension);\n                position = Math.floor(this.minHandleElement.position + this.handleHalfDimension);\n            }\n            else {\n                dimension = this.minHandleElement.position + this.handleHalfDimension;\n                position = 0;\n            }\n        }\n        this.selectionBarElement.setDimension(dimension);\n        this.selectionBarElement.setPosition(position);\n        if (this.range && this.viewOptions.showOuterSelectionBars) {\n            if (this.viewOptions.rightToLeft) {\n                this.rightOuterSelectionBarElement.setDimension(position);\n                this.rightOuterSelectionBarElement.setPosition(0);\n                this.fullBarElement.calculateDimension();\n                this.leftOuterSelectionBarElement.setDimension(this.fullBarElement.dimension - (position + dimension));\n                this.leftOuterSelectionBarElement.setPosition(position + dimension);\n            }\n            else {\n                this.leftOuterSelectionBarElement.setDimension(position);\n                this.leftOuterSelectionBarElement.setPosition(0);\n                this.fullBarElement.calculateDimension();\n                this.rightOuterSelectionBarElement.setDimension(this.fullBarElement.dimension - (position + dimension));\n                this.rightOuterSelectionBarElement.setPosition(position + dimension);\n            }\n        }\n        if (!ValueHelper.isNullOrUndefined(this.viewOptions.getSelectionBarColor)) {\n            /** @type {?} */\n            const color = this.getSelectionBarColor();\n            this.barStyle = {\n                backgroundColor: color,\n            };\n        }\n        else if (!ValueHelper.isNullOrUndefined(this.viewOptions.selectionBarGradient)) {\n            /** @type {?} */\n            const offset = (!ValueHelper.isNullOrUndefined(this.viewOptions.showSelectionBarFromValue))\n                ? this.valueToPosition(this.viewOptions.showSelectionBarFromValue)\n                : 0;\n            /** @type {?} */\n            const reversed = (offset - position > 0 && !isSelectionBarFromRight) || (offset - position <= 0 && isSelectionBarFromRight);\n            /** @type {?} */\n            const direction = this.viewOptions.vertical\n                ? reversed ? 'bottom' : 'top'\n                : reversed ? 'left' : 'right';\n            this.barStyle = {\n                backgroundImage: 'linear-gradient(to ' +\n                    direction +\n                    ', ' +\n                    this.viewOptions.selectionBarGradient.from +\n                    ' 0%,' +\n                    this.viewOptions.selectionBarGradient.to +\n                    ' 100%)',\n            };\n            if (this.viewOptions.vertical) {\n                this.barStyle.backgroundPosition =\n                    'center ' +\n                        (offset +\n                            dimension +\n                            position +\n                            (reversed ? -this.handleHalfDimension : 0)) +\n                        'px';\n                this.barStyle.backgroundSize =\n                    '100% ' + (this.fullBarElement.dimension - this.handleHalfDimension) + 'px';\n            }\n            else {\n                this.barStyle.backgroundPosition =\n                    offset -\n                        position +\n                        (reversed ? this.handleHalfDimension : 0) +\n                        'px center';\n                this.barStyle.backgroundSize =\n                    this.fullBarElement.dimension - this.handleHalfDimension + 'px 100%';\n            }\n        }\n    }\n    /**\n     * @return {?}\n     */\n    getSelectionBarColor() {\n        if (this.range) {\n            return this.viewOptions.getSelectionBarColor(this.value, this.highValue);\n        }\n        return this.viewOptions.getSelectionBarColor(this.value);\n    }\n    /**\n     * @param {?} pointerType\n     * @return {?}\n     */\n    getPointerColor(pointerType) {\n        if (pointerType === PointerType.Max) {\n            return this.viewOptions.getPointerColor(this.highValue, pointerType);\n        }\n        return this.viewOptions.getPointerColor(this.value, pointerType);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    getTickColor(value) {\n        return this.viewOptions.getTickColor(value);\n    }\n    /**\n     * @return {?}\n     */\n    updateCombinedLabel() {\n        /** @type {?} */\n        let isLabelOverlap = null;\n        if (this.viewOptions.rightToLeft) {\n            isLabelOverlap =\n                this.minHandleLabelElement.position - this.minHandleLabelElement.dimension - 10 <= this.maxHandleLabelElement.position;\n        }\n        else {\n            isLabelOverlap =\n                this.minHandleLabelElement.position + this.minHandleLabelElement.dimension + 10 >= this.maxHandleLabelElement.position;\n        }\n        if (isLabelOverlap) {\n            /** @type {?} */\n            const lowDisplayValue = this.getDisplayValue(this.viewLowValue, LabelType.Low);\n            /** @type {?} */\n            const highDisplayValue = this.getDisplayValue(this.viewHighValue, LabelType.High);\n            /** @type {?} */\n            const combinedLabelValue = this.viewOptions.rightToLeft\n                ? this.viewOptions.combineLabels(highDisplayValue, lowDisplayValue)\n                : this.viewOptions.combineLabels(lowDisplayValue, highDisplayValue);\n            this.combinedLabelElement.setValue(combinedLabelValue);\n            /** @type {?} */\n            const pos = this.viewOptions.boundPointerLabels\n                ? Math.min(Math.max(this.selectionBarElement.position +\n                    this.selectionBarElement.dimension / 2 -\n                    this.combinedLabelElement.dimension / 2, 0), this.fullBarElement.dimension - this.combinedLabelElement.dimension)\n                : this.selectionBarElement.position + this.selectionBarElement.dimension / 2 - this.combinedLabelElement.dimension / 2;\n            this.combinedLabelElement.setPosition(pos);\n            this.minHandleLabelElement.hide();\n            this.maxHandleLabelElement.hide();\n            this.combinedLabelElement.show();\n        }\n        else {\n            this.updateHighHandle(this.valueToPosition(this.viewHighValue));\n            this.updateLowHandle(this.valueToPosition(this.viewLowValue));\n            this.maxHandleLabelElement.show();\n            this.minHandleLabelElement.show();\n            this.combinedLabelElement.hide();\n        }\n        if (this.viewOptions.autoHideLimitLabels) {\n            this.updateFloorAndCeilLabelsVisibility();\n        }\n    }\n    /**\n     * @param {?} value\n     * @param {?} which\n     * @return {?}\n     */\n    getDisplayValue(value, which) {\n        if (!ValueHelper.isNullOrUndefined(this.viewOptions.stepsArray) && !this.viewOptions.bindIndexForStepsArray) {\n            value = this.getStepValue(value);\n        }\n        return this.viewOptions.translate(value, which);\n    }\n    /**\n     * @param {?} value\n     * @param {?=} customStep\n     * @return {?}\n     */\n    roundStep(value, customStep) {\n        /** @type {?} */\n        const step = !ValueHelper.isNullOrUndefined(customStep) ? customStep : this.viewOptions.step;\n        /** @type {?} */\n        let steppedDifference = MathHelper.roundToPrecisionLimit((value - this.viewOptions.floor) / step, this.viewOptions.precisionLimit);\n        steppedDifference = Math.round(steppedDifference) * step;\n        return MathHelper.roundToPrecisionLimit(this.viewOptions.floor + steppedDifference, this.viewOptions.precisionLimit);\n    }\n    /**\n     * @param {?} val\n     * @return {?}\n     */\n    valueToPosition(val) {\n        /** @type {?} */\n        let fn = ValueHelper.linearValueToPosition;\n        if (!ValueHelper.isNullOrUndefined(this.viewOptions.customValueToPosition)) {\n            fn = this.viewOptions.customValueToPosition;\n        }\n        else if (this.viewOptions.logScale) {\n            fn = ValueHelper.logValueToPosition;\n        }\n        val = MathHelper.clampToRange(val, this.viewOptions.floor, this.viewOptions.ceil);\n        /** @type {?} */\n        let percent = fn(val, this.viewOptions.floor, this.viewOptions.ceil);\n        if (ValueHelper.isNullOrUndefined(percent)) {\n            percent = 0;\n        }\n        if (this.viewOptions.rightToLeft) {\n            percent = 1 - percent;\n        }\n        return percent * this.maxHandlePosition;\n    }\n    /**\n     * @param {?} position\n     * @return {?}\n     */\n    positionToValue(position) {\n        /** @type {?} */\n        let percent = position / this.maxHandlePosition;\n        if (this.viewOptions.rightToLeft) {\n            percent = 1 - percent;\n        }\n        /** @type {?} */\n        let fn = ValueHelper.linearPositionToValue;\n        if (!ValueHelper.isNullOrUndefined(this.viewOptions.customPositionToValue)) {\n            fn = this.viewOptions.customPositionToValue;\n        }\n        else if (this.viewOptions.logScale) {\n            fn = ValueHelper.logPositionToValue;\n        }\n        /** @type {?} */\n        const value = fn(percent, this.viewOptions.floor, this.viewOptions.ceil);\n        return !ValueHelper.isNullOrUndefined(value) ? value : 0;\n    }\n    /**\n     * @param {?} event\n     * @param {?=} targetTouchId\n     * @return {?}\n     */\n    getEventXY(event, targetTouchId) {\n        if (event instanceof MouseEvent) {\n            return (this.viewOptions.vertical || this.viewOptions.rotate !== 0) ? event.clientY : event.clientX;\n        }\n        /** @type {?} */\n        let touchIndex = 0;\n        /** @type {?} */\n        const touches = event.touches;\n        if (!ValueHelper.isNullOrUndefined(targetTouchId)) {\n            for (let i = 0; i < touches.length; i++) {\n                if (touches[i].identifier === targetTouchId) {\n                    touchIndex = i;\n                    break;\n                }\n            }\n        }\n        // Return the target touch or if the target touch was not found in the event\n        // returns the coordinates of the first touch\n        return (this.viewOptions.vertical || this.viewOptions.rotate !== 0) ? touches[touchIndex].clientY : touches[touchIndex].clientX;\n    }\n    /**\n     * @param {?} event\n     * @param {?=} targetTouchId\n     * @return {?}\n     */\n    getEventPosition(event, targetTouchId) {\n        /** @type {?} */\n        const sliderElementBoundingRect = this.elementRef.nativeElement.getBoundingClientRect();\n        /** @type {?} */\n        const sliderPos = (this.viewOptions.vertical || this.viewOptions.rotate !== 0) ?\n            sliderElementBoundingRect.bottom : sliderElementBoundingRect.left;\n        /** @type {?} */\n        let eventPos = 0;\n        if (this.viewOptions.vertical || this.viewOptions.rotate !== 0) {\n            eventPos = -this.getEventXY(event, targetTouchId) + sliderPos;\n        }\n        else {\n            eventPos = this.getEventXY(event, targetTouchId) - sliderPos;\n        }\n        return eventPos * this.viewOptions.scale - this.handleHalfDimension;\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    getNearestHandle(event) {\n        if (!this.range) {\n            return PointerType.Min;\n        }\n        /** @type {?} */\n        const position = this.getEventPosition(event);\n        /** @type {?} */\n        const distanceMin = Math.abs(position - this.minHandleElement.position);\n        /** @type {?} */\n        const distanceMax = Math.abs(position - this.maxHandleElement.position);\n        if (distanceMin < distanceMax) {\n            return PointerType.Min;\n        }\n        else if (distanceMin > distanceMax) {\n            return PointerType.Max;\n        }\n        else if (!this.viewOptions.rightToLeft) {\n            // if event is at the same distance from min/max then if it's at left of minH, we return minH else maxH\n            return position < this.minHandleElement.position ? PointerType.Min : PointerType.Max;\n        }\n        // reverse in rtl\n        return position > this.minHandleElement.position ? PointerType.Min : PointerType.Max;\n    }\n    /**\n     * @return {?}\n     */\n    bindEvents() {\n        /** @type {?} */\n        const draggableRange = this.viewOptions.draggableRange;\n        if (!this.viewOptions.onlyBindHandles) {\n            this.selectionBarElement.on('mousedown', (event) => this.onBarStart(null, draggableRange, event, true, true, true));\n        }\n        if (this.viewOptions.draggableRangeOnly) {\n            this.minHandleElement.on('mousedown', (event) => this.onBarStart(PointerType.Min, draggableRange, event, true, true));\n            this.maxHandleElement.on('mousedown', (event) => this.onBarStart(PointerType.Max, draggableRange, event, true, true));\n        }\n        else {\n            this.minHandleElement.on('mousedown', (event) => this.onStart(PointerType.Min, event, true, true));\n            if (this.range) {\n                this.maxHandleElement.on('mousedown', (event) => this.onStart(PointerType.Max, event, true, true));\n            }\n            if (!this.viewOptions.onlyBindHandles) {\n                this.fullBarElement.on('mousedown', (event) => this.onStart(null, event, true, true, true));\n                this.ticksElement.on('mousedown', (event) => this.onStart(null, event, true, true, true, true));\n            }\n        }\n        if (!this.viewOptions.onlyBindHandles) {\n            this.selectionBarElement.onPassive('touchstart', (event) => this.onBarStart(null, draggableRange, event, true, true, true));\n        }\n        if (this.viewOptions.draggableRangeOnly) {\n            this.minHandleElement.onPassive('touchstart', (event) => this.onBarStart(PointerType.Min, draggableRange, event, true, true));\n            this.maxHandleElement.onPassive('touchstart', (event) => this.onBarStart(PointerType.Max, draggableRange, event, true, true));\n        }\n        else {\n            this.minHandleElement.onPassive('touchstart', (event) => this.onStart(PointerType.Min, event, true, true));\n            if (this.range) {\n                this.maxHandleElement.onPassive('touchstart', (event) => this.onStart(PointerType.Max, event, true, true));\n            }\n            if (!this.viewOptions.onlyBindHandles) {\n                this.fullBarElement.onPassive('touchstart', (event) => this.onStart(null, event, true, true, true));\n                this.ticksElement.onPassive('touchstart', (event) => this.onStart(null, event, false, false, true, true));\n            }\n        }\n        if (this.viewOptions.keyboardSupport) {\n            this.minHandleElement.on('focus', () => this.onPointerFocus(PointerType.Min));\n            if (this.range) {\n                this.maxHandleElement.on('focus', () => this.onPointerFocus(PointerType.Max));\n            }\n        }\n    }\n    /**\n     * @param {?} options\n     * @return {?}\n     */\n    getOptionsInfluencingEventBindings(options) {\n        return [\n            options.disabled,\n            options.readOnly,\n            options.draggableRange,\n            options.draggableRangeOnly,\n            options.onlyBindHandles,\n            options.keyboardSupport\n        ];\n    }\n    /**\n     * @return {?}\n     */\n    unbindEvents() {\n        this.unsubscribeOnMove();\n        this.unsubscribeOnEnd();\n        for (const element of this.getAllSliderElements()) {\n            if (!ValueHelper.isNullOrUndefined(element)) {\n                element.off();\n            }\n        }\n    }\n    /**\n     * @param {?} pointerType\n     * @param {?} draggableRange\n     * @param {?} event\n     * @param {?} bindMove\n     * @param {?} bindEnd\n     * @param {?=} simulateImmediateMove\n     * @param {?=} simulateImmediateEnd\n     * @return {?}\n     */\n    onBarStart(pointerType, draggableRange, event, bindMove, bindEnd, simulateImmediateMove, simulateImmediateEnd) {\n        if (draggableRange) {\n            this.onDragStart(pointerType, event, bindMove, bindEnd);\n        }\n        else {\n            this.onStart(pointerType, event, bindMove, bindEnd, simulateImmediateMove, simulateImmediateEnd);\n        }\n    }\n    /**\n     * @param {?} pointerType\n     * @param {?} event\n     * @param {?} bindMove\n     * @param {?} bindEnd\n     * @param {?=} simulateImmediateMove\n     * @param {?=} simulateImmediateEnd\n     * @return {?}\n     */\n    onStart(pointerType, event, bindMove, bindEnd, simulateImmediateMove, simulateImmediateEnd) {\n        event.stopPropagation();\n        // Only call preventDefault() when handling non-passive events (passive events don't need it)\n        if (!CompatibilityHelper.isTouchEvent(event) && !supportsPassiveEvents) {\n            event.preventDefault();\n        }\n        this.moving = false;\n        // We have to do this in case the HTML where the sliders are on\n        // have been animated into view.\n        this.calculateViewDimensions();\n        if (ValueHelper.isNullOrUndefined(pointerType)) {\n            pointerType = this.getNearestHandle(event);\n        }\n        this.currentTrackingPointer = pointerType;\n        /** @type {?} */\n        const pointerElement = this.getPointerElement(pointerType);\n        pointerElement.active = true;\n        if (this.viewOptions.keyboardSupport) {\n            pointerElement.focus();\n        }\n        if (bindMove) {\n            this.unsubscribeOnMove();\n            /** @type {?} */\n            const onMoveCallback = (e) => this.dragging.active ? this.onDragMove(e) : this.onMove(e);\n            if (CompatibilityHelper.isTouchEvent(event)) {\n                this.onMoveEventListener = this.eventListenerHelper.attachPassiveEventListener(document, 'touchmove', onMoveCallback);\n            }\n            else {\n                this.onMoveEventListener = this.eventListenerHelper.attachEventListener(document, 'mousemove', onMoveCallback);\n            }\n        }\n        if (bindEnd) {\n            this.unsubscribeOnEnd();\n            /** @type {?} */\n            const onEndCallback = (e) => this.onEnd(e);\n            if (CompatibilityHelper.isTouchEvent(event)) {\n                this.onEndEventListener = this.eventListenerHelper.attachPassiveEventListener(document, 'touchend', onEndCallback);\n            }\n            else {\n                this.onEndEventListener = this.eventListenerHelper.attachEventListener(document, 'mouseup', onEndCallback);\n            }\n        }\n        this.userChangeStart.emit(this.getChangeContext());\n        if (CompatibilityHelper.isTouchEvent(event) && !ValueHelper.isNullOrUndefined((/** @type {?} */ (event)).changedTouches)) {\n            // Store the touch identifier\n            if (ValueHelper.isNullOrUndefined(this.touchId)) {\n                this.touchId = (/** @type {?} */ (event)).changedTouches[0].identifier;\n            }\n        }\n        // Click events, either with mouse or touch gesture are weird. Sometimes they result in full\n        // start, move, end sequence, and sometimes, they don't - they only invoke mousedown\n        // As a workaround, we simulate the first move event and the end event if it's necessary\n        if (simulateImmediateMove) {\n            this.onMove(event, true);\n        }\n        if (simulateImmediateEnd) {\n            this.onEnd(event);\n        }\n    }\n    /**\n     * @param {?} event\n     * @param {?=} fromTick\n     * @return {?}\n     */\n    onMove(event, fromTick) {\n        /** @type {?} */\n        let touchForThisSlider = null;\n        if (CompatibilityHelper.isTouchEvent(event)) {\n            /** @type {?} */\n            const changedTouches = (/** @type {?} */ (event)).changedTouches;\n            for (let i = 0; i < changedTouches.length; i++) {\n                if (changedTouches[i].identifier === this.touchId) {\n                    touchForThisSlider = changedTouches[i];\n                    break;\n                }\n            }\n            if (ValueHelper.isNullOrUndefined(touchForThisSlider)) {\n                return;\n            }\n        }\n        if (this.viewOptions.animate && !this.viewOptions.animateOnMove) {\n            if (this.moving) {\n                this.sliderElementAnimateClass = false;\n            }\n        }\n        this.moving = true;\n        /** @type {?} */\n        const newPos = !ValueHelper.isNullOrUndefined(touchForThisSlider)\n            ? this.getEventPosition(event, touchForThisSlider.identifier)\n            : this.getEventPosition(event);\n        /** @type {?} */\n        let newValue;\n        /** @type {?} */\n        const ceilValue = this.viewOptions.rightToLeft\n            ? this.viewOptions.floor\n            : this.viewOptions.ceil;\n        /** @type {?} */\n        const floorValue = this.viewOptions.rightToLeft ? this.viewOptions.ceil : this.viewOptions.floor;\n        if (newPos <= 0) {\n            newValue = floorValue;\n        }\n        else if (newPos >= this.maxHandlePosition) {\n            newValue = ceilValue;\n        }\n        else {\n            newValue = this.positionToValue(newPos);\n            if (fromTick && !ValueHelper.isNullOrUndefined(this.viewOptions.tickStep)) {\n                newValue = this.roundStep(newValue, this.viewOptions.tickStep);\n            }\n            else {\n                newValue = this.roundStep(newValue);\n            }\n        }\n        this.positionTrackingHandle(newValue);\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onEnd(event) {\n        if (CompatibilityHelper.isTouchEvent(event)) {\n            /** @type {?} */\n            const changedTouches = (/** @type {?} */ (event)).changedTouches;\n            if (changedTouches[0].identifier !== this.touchId) {\n                return;\n            }\n        }\n        this.moving = false;\n        if (this.viewOptions.animate) {\n            this.sliderElementAnimateClass = true;\n        }\n        this.touchId = null;\n        if (!this.viewOptions.keyboardSupport) {\n            this.minHandleElement.active = false;\n            this.maxHandleElement.active = false;\n            this.currentTrackingPointer = null;\n        }\n        this.dragging.active = false;\n        this.unsubscribeOnMove();\n        this.unsubscribeOnEnd();\n        this.userChangeEnd.emit(this.getChangeContext());\n    }\n    /**\n     * @param {?} pointerType\n     * @return {?}\n     */\n    onPointerFocus(pointerType) {\n        /** @type {?} */\n        const pointerElement = this.getPointerElement(pointerType);\n        pointerElement.on('blur', () => this.onPointerBlur(pointerElement));\n        pointerElement.on('keydown', (event) => this.onKeyboardEvent(event));\n        pointerElement.on('keyup', () => this.onKeyUp());\n        pointerElement.active = true;\n        this.currentTrackingPointer = pointerType;\n        this.currentFocusPointer = pointerType;\n        this.firstKeyDown = true;\n    }\n    /**\n     * @return {?}\n     */\n    onKeyUp() {\n        this.firstKeyDown = true;\n        this.userChangeEnd.emit(this.getChangeContext());\n    }\n    /**\n     * @param {?} pointer\n     * @return {?}\n     */\n    onPointerBlur(pointer) {\n        pointer.off('blur');\n        pointer.off('keydown');\n        pointer.off('keyup');\n        pointer.active = false;\n        if (ValueHelper.isNullOrUndefined(this.touchId)) {\n            this.currentTrackingPointer = null;\n            this.currentFocusPointer = null;\n        }\n    }\n    /**\n     * @param {?} currentValue\n     * @return {?}\n     */\n    getKeyActions(currentValue) {\n        /** @type {?} */\n        const valueRange = this.viewOptions.ceil - this.viewOptions.floor;\n        /** @type {?} */\n        let increaseStep = currentValue + this.viewOptions.step;\n        /** @type {?} */\n        let decreaseStep = currentValue - this.viewOptions.step;\n        /** @type {?} */\n        let increasePage = currentValue + valueRange / 10;\n        /** @type {?} */\n        let decreasePage = currentValue - valueRange / 10;\n        if (this.viewOptions.reversedControls) {\n            increaseStep = currentValue - this.viewOptions.step;\n            decreaseStep = currentValue + this.viewOptions.step;\n            increasePage = currentValue - valueRange / 10;\n            decreasePage = currentValue + valueRange / 10;\n        }\n        /** @type {?} */\n        const actions = {\n            UP: increaseStep,\n            DOWN: decreaseStep,\n            LEFT: decreaseStep,\n            RIGHT: increaseStep,\n            PAGEUP: increasePage,\n            PAGEDOWN: decreasePage,\n            HOME: this.viewOptions.reversedControls ? this.viewOptions.ceil : this.viewOptions.floor,\n            END: this.viewOptions.reversedControls ? this.viewOptions.floor : this.viewOptions.ceil,\n        };\n        // right to left means swapping right and left arrows\n        if (this.viewOptions.rightToLeft) {\n            actions[\"LEFT\"] = increaseStep;\n            actions[\"RIGHT\"] = decreaseStep;\n            // right to left and vertical means we also swap up and down\n            if (this.viewOptions.vertical || this.viewOptions.rotate !== 0) {\n                actions[\"UP\"] = decreaseStep;\n                actions[\"DOWN\"] = increaseStep;\n            }\n        }\n        return actions;\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onKeyboardEvent(event) {\n        /** @type {?} */\n        const currentValue = this.getCurrentTrackingValue();\n        /** @type {?} */\n        const keyCode = !ValueHelper.isNullOrUndefined(event.keyCode)\n            ? event.keyCode\n            : event.which;\n        /** @type {?} */\n        const keys = {\n            38: 'UP',\n            40: 'DOWN',\n            37: 'LEFT',\n            39: 'RIGHT',\n            33: 'PAGEUP',\n            34: 'PAGEDOWN',\n            36: 'HOME',\n            35: 'END',\n        };\n        /** @type {?} */\n        const actions = this.getKeyActions(currentValue);\n        /** @type {?} */\n        const key = keys[keyCode];\n        /** @type {?} */\n        const action = actions[key];\n        if (ValueHelper.isNullOrUndefined(action) || ValueHelper.isNullOrUndefined(this.currentTrackingPointer)) {\n            return;\n        }\n        event.preventDefault();\n        if (this.firstKeyDown) {\n            this.firstKeyDown = false;\n            this.userChangeStart.emit(this.getChangeContext());\n        }\n        /** @type {?} */\n        const actionValue = MathHelper.clampToRange(action, this.viewOptions.floor, this.viewOptions.ceil);\n        /** @type {?} */\n        const newValue = this.roundStep(actionValue);\n        if (!this.viewOptions.draggableRangeOnly) {\n            this.positionTrackingHandle(newValue);\n        }\n        else {\n            /** @type {?} */\n            const difference = this.viewHighValue - this.viewLowValue;\n            /** @type {?} */\n            let newMinValue;\n            /** @type {?} */\n            let newMaxValue;\n            if (this.currentTrackingPointer === PointerType.Min) {\n                newMinValue = newValue;\n                newMaxValue = newValue + difference;\n                if (newMaxValue > this.viewOptions.ceil) {\n                    newMaxValue = this.viewOptions.ceil;\n                    newMinValue = newMaxValue - difference;\n                }\n            }\n            else if (this.currentTrackingPointer === PointerType.Max) {\n                newMaxValue = newValue;\n                newMinValue = newValue - difference;\n                if (newMinValue < this.viewOptions.floor) {\n                    newMinValue = this.viewOptions.floor;\n                    newMaxValue = newMinValue + difference;\n                }\n            }\n            this.positionTrackingBar(newMinValue, newMaxValue);\n        }\n    }\n    /**\n     * @param {?} pointerType\n     * @param {?} event\n     * @param {?} bindMove\n     * @param {?} bindEnd\n     * @return {?}\n     */\n    onDragStart(pointerType, event, bindMove, bindEnd) {\n        /** @type {?} */\n        const position = this.getEventPosition(event);\n        this.dragging = new Dragging();\n        this.dragging.active = true;\n        this.dragging.value = this.positionToValue(position);\n        this.dragging.difference = this.viewHighValue - this.viewLowValue;\n        this.dragging.lowLimit = this.viewOptions.rightToLeft\n            ? this.minHandleElement.position - position\n            : position - this.minHandleElement.position;\n        this.dragging.highLimit = this.viewOptions.rightToLeft\n            ? position - this.maxHandleElement.position\n            : this.maxHandleElement.position - position;\n        this.onStart(pointerType, event, bindMove, bindEnd);\n    }\n    /**\n     * Get min value depending on whether the newPos is outOfBounds above or below the bar and rightToLeft\n     * @param {?} newPos\n     * @param {?} outOfBounds\n     * @param {?} isAbove\n     * @return {?}\n     */\n    getMinValue(newPos, outOfBounds, isAbove) {\n        /** @type {?} */\n        const isRTL = this.viewOptions.rightToLeft;\n        /** @type {?} */\n        let value = null;\n        if (outOfBounds) {\n            if (isAbove) {\n                value = isRTL\n                    ? this.viewOptions.floor\n                    : this.viewOptions.ceil - this.dragging.difference;\n            }\n            else {\n                value = isRTL\n                    ? this.viewOptions.ceil - this.dragging.difference\n                    : this.viewOptions.floor;\n            }\n        }\n        else {\n            value = isRTL\n                ? this.positionToValue(newPos + this.dragging.lowLimit)\n                : this.positionToValue(newPos - this.dragging.lowLimit);\n        }\n        return this.roundStep(value);\n    }\n    /**\n     * Get max value depending on whether the newPos is outOfBounds above or below the bar and rightToLeft\n     * @param {?} newPos\n     * @param {?} outOfBounds\n     * @param {?} isAbove\n     * @return {?}\n     */\n    getMaxValue(newPos, outOfBounds, isAbove) {\n        /** @type {?} */\n        const isRTL = this.viewOptions.rightToLeft;\n        /** @type {?} */\n        let value = null;\n        if (outOfBounds) {\n            if (isAbove) {\n                value = isRTL\n                    ? this.viewOptions.floor + this.dragging.difference\n                    : this.viewOptions.ceil;\n            }\n            else {\n                value = isRTL\n                    ? this.viewOptions.ceil\n                    : this.viewOptions.floor + this.dragging.difference;\n            }\n        }\n        else {\n            if (isRTL) {\n                value =\n                    this.positionToValue(newPos + this.dragging.lowLimit) +\n                        this.dragging.difference;\n            }\n            else {\n                value =\n                    this.positionToValue(newPos - this.dragging.lowLimit) +\n                        this.dragging.difference;\n            }\n        }\n        return this.roundStep(value);\n    }\n    /**\n     * @param {?=} event\n     * @return {?}\n     */\n    onDragMove(event) {\n        /** @type {?} */\n        const newPos = this.getEventPosition(event);\n        if (this.viewOptions.animate && !this.viewOptions.animateOnMove) {\n            if (this.moving) {\n                this.sliderElementAnimateClass = false;\n            }\n        }\n        this.moving = true;\n        /** @type {?} */\n        let ceilLimit;\n        /** @type {?} */\n        let floorLimit;\n        /** @type {?} */\n        let floorHandleElement;\n        /** @type {?} */\n        let ceilHandleElement;\n        if (this.viewOptions.rightToLeft) {\n            ceilLimit = this.dragging.lowLimit;\n            floorLimit = this.dragging.highLimit;\n            floorHandleElement = this.maxHandleElement;\n            ceilHandleElement = this.minHandleElement;\n        }\n        else {\n            ceilLimit = this.dragging.highLimit;\n            floorLimit = this.dragging.lowLimit;\n            floorHandleElement = this.minHandleElement;\n            ceilHandleElement = this.maxHandleElement;\n        }\n        /** @type {?} */\n        const isUnderFloorLimit = (newPos <= floorLimit);\n        /** @type {?} */\n        const isOverCeilLimit = (newPos >= this.maxHandlePosition - ceilLimit);\n        /** @type {?} */\n        let newMinValue;\n        /** @type {?} */\n        let newMaxValue;\n        if (isUnderFloorLimit) {\n            if (floorHandleElement.position === 0) {\n                return;\n            }\n            newMinValue = this.getMinValue(newPos, true, false);\n            newMaxValue = this.getMaxValue(newPos, true, false);\n        }\n        else if (isOverCeilLimit) {\n            if (ceilHandleElement.position === this.maxHandlePosition) {\n                return;\n            }\n            newMaxValue = this.getMaxValue(newPos, true, true);\n            newMinValue = this.getMinValue(newPos, true, true);\n        }\n        else {\n            newMinValue = this.getMinValue(newPos, false, false);\n            newMaxValue = this.getMaxValue(newPos, false, false);\n        }\n        this.positionTrackingBar(newMinValue, newMaxValue);\n    }\n    /**\n     * @param {?} newMinValue\n     * @param {?} newMaxValue\n     * @return {?}\n     */\n    positionTrackingBar(newMinValue, newMaxValue) {\n        if (!ValueHelper.isNullOrUndefined(this.viewOptions.minLimit) &&\n            newMinValue < this.viewOptions.minLimit) {\n            newMinValue = this.viewOptions.minLimit;\n            newMaxValue = MathHelper.roundToPrecisionLimit(newMinValue + this.dragging.difference, this.viewOptions.precisionLimit);\n        }\n        if (!ValueHelper.isNullOrUndefined(this.viewOptions.maxLimit) &&\n            newMaxValue > this.viewOptions.maxLimit) {\n            newMaxValue = this.viewOptions.maxLimit;\n            newMinValue = MathHelper.roundToPrecisionLimit(newMaxValue - this.dragging.difference, this.viewOptions.precisionLimit);\n        }\n        this.viewLowValue = newMinValue;\n        this.viewHighValue = newMaxValue;\n        this.applyViewChange();\n        this.updateHandles(PointerType.Min, this.valueToPosition(newMinValue));\n        this.updateHandles(PointerType.Max, this.valueToPosition(newMaxValue));\n    }\n    /**\n     * @param {?} newValue\n     * @return {?}\n     */\n    positionTrackingHandle(newValue) {\n        newValue = this.applyMinMaxLimit(newValue);\n        if (this.range) {\n            if (this.viewOptions.pushRange) {\n                newValue = this.applyPushRange(newValue);\n            }\n            else {\n                if (this.viewOptions.noSwitching) {\n                    if (this.currentTrackingPointer === PointerType.Min &&\n                        newValue > this.viewHighValue) {\n                        newValue = this.applyMinMaxRange(this.viewHighValue);\n                    }\n                    else if (this.currentTrackingPointer === PointerType.Max &&\n                        newValue < this.viewLowValue) {\n                        newValue = this.applyMinMaxRange(this.viewLowValue);\n                    }\n                }\n                newValue = this.applyMinMaxRange(newValue);\n                /* This is to check if we need to switch the min and max handles */\n                if (this.currentTrackingPointer === PointerType.Min && newValue > this.viewHighValue) {\n                    this.viewLowValue = this.viewHighValue;\n                    this.applyViewChange();\n                    this.updateHandles(PointerType.Min, this.maxHandleElement.position);\n                    this.updateAriaAttributes();\n                    this.currentTrackingPointer = PointerType.Max;\n                    this.minHandleElement.active = false;\n                    this.maxHandleElement.active = true;\n                    if (this.viewOptions.keyboardSupport) {\n                        this.maxHandleElement.focus();\n                    }\n                }\n                else if (this.currentTrackingPointer === PointerType.Max &&\n                    newValue < this.viewLowValue) {\n                    this.viewHighValue = this.viewLowValue;\n                    this.applyViewChange();\n                    this.updateHandles(PointerType.Max, this.minHandleElement.position);\n                    this.updateAriaAttributes();\n                    this.currentTrackingPointer = PointerType.Min;\n                    this.maxHandleElement.active = false;\n                    this.minHandleElement.active = true;\n                    if (this.viewOptions.keyboardSupport) {\n                        this.minHandleElement.focus();\n                    }\n                }\n            }\n        }\n        if (this.getCurrentTrackingValue() !== newValue) {\n            if (this.currentTrackingPointer === PointerType.Min) {\n                this.viewLowValue = newValue;\n                this.applyViewChange();\n            }\n            else if (this.currentTrackingPointer === PointerType.Max) {\n                this.viewHighValue = newValue;\n                this.applyViewChange();\n            }\n            this.updateHandles(this.currentTrackingPointer, this.valueToPosition(newValue));\n            this.updateAriaAttributes();\n        }\n    }\n    /**\n     * @param {?} newValue\n     * @return {?}\n     */\n    applyMinMaxLimit(newValue) {\n        if (!ValueHelper.isNullOrUndefined(this.viewOptions.minLimit) && newValue < this.viewOptions.minLimit) {\n            return this.viewOptions.minLimit;\n        }\n        if (!ValueHelper.isNullOrUndefined(this.viewOptions.maxLimit) && newValue > this.viewOptions.maxLimit) {\n            return this.viewOptions.maxLimit;\n        }\n        return newValue;\n    }\n    /**\n     * @param {?} newValue\n     * @return {?}\n     */\n    applyMinMaxRange(newValue) {\n        /** @type {?} */\n        const oppositeValue = (this.currentTrackingPointer === PointerType.Min)\n            ? this.viewHighValue\n            : this.viewLowValue;\n        /** @type {?} */\n        const difference = Math.abs(newValue - oppositeValue);\n        if (!ValueHelper.isNullOrUndefined(this.viewOptions.minRange)) {\n            if (difference < this.viewOptions.minRange) {\n                if (this.currentTrackingPointer === PointerType.Min) {\n                    return MathHelper.roundToPrecisionLimit(this.viewHighValue - this.viewOptions.minRange, this.viewOptions.precisionLimit);\n                }\n                else if (this.currentTrackingPointer === PointerType.Max) {\n                    return MathHelper.roundToPrecisionLimit(this.viewLowValue + this.viewOptions.minRange, this.viewOptions.precisionLimit);\n                }\n            }\n        }\n        if (!ValueHelper.isNullOrUndefined(this.viewOptions.maxRange)) {\n            if (difference > this.viewOptions.maxRange) {\n                if (this.currentTrackingPointer === PointerType.Min) {\n                    return MathHelper.roundToPrecisionLimit(this.viewHighValue - this.viewOptions.maxRange, this.viewOptions.precisionLimit);\n                }\n                else if (this.currentTrackingPointer === PointerType.Max) {\n                    return MathHelper.roundToPrecisionLimit(this.viewLowValue + this.viewOptions.maxRange, this.viewOptions.precisionLimit);\n                }\n            }\n        }\n        return newValue;\n    }\n    /**\n     * @param {?} newValue\n     * @return {?}\n     */\n    applyPushRange(newValue) {\n        /** @type {?} */\n        const difference = (this.currentTrackingPointer === PointerType.Min)\n            ? this.viewHighValue - newValue\n            : newValue - this.viewLowValue;\n        /** @type {?} */\n        const minRange = (!ValueHelper.isNullOrUndefined(this.viewOptions.minRange))\n            ? this.viewOptions.minRange\n            : this.viewOptions.step;\n        /** @type {?} */\n        const maxRange = this.viewOptions.maxRange;\n        // if smaller than minRange\n        if (difference < minRange) {\n            if (this.currentTrackingPointer === PointerType.Min) {\n                this.viewHighValue = MathHelper.roundToPrecisionLimit(Math.min(newValue + minRange, this.viewOptions.ceil), this.viewOptions.precisionLimit);\n                newValue = MathHelper.roundToPrecisionLimit(this.viewHighValue - minRange, this.viewOptions.precisionLimit);\n                this.applyViewChange();\n                this.updateHandles(PointerType.Max, this.valueToPosition(this.viewHighValue));\n            }\n            else if (this.currentTrackingPointer === PointerType.Max) {\n                this.viewLowValue = MathHelper.roundToPrecisionLimit(Math.max(newValue - minRange, this.viewOptions.floor), this.viewOptions.precisionLimit);\n                newValue = MathHelper.roundToPrecisionLimit(this.viewLowValue + minRange, this.viewOptions.precisionLimit);\n                this.applyViewChange();\n                this.updateHandles(PointerType.Min, this.valueToPosition(this.viewLowValue));\n            }\n            this.updateAriaAttributes();\n        }\n        else if (!ValueHelper.isNullOrUndefined(maxRange) && difference > maxRange) {\n            // if greater than maxRange\n            if (this.currentTrackingPointer === PointerType.Min) {\n                this.viewHighValue = MathHelper.roundToPrecisionLimit(newValue + maxRange, this.viewOptions.precisionLimit);\n                this.applyViewChange();\n                this.updateHandles(PointerType.Max, this.valueToPosition(this.viewHighValue));\n            }\n            else if (this.currentTrackingPointer === PointerType.Max) {\n                this.viewLowValue = MathHelper.roundToPrecisionLimit(newValue - maxRange, this.viewOptions.precisionLimit);\n                this.applyViewChange();\n                this.updateHandles(PointerType.Min, this.valueToPosition(this.viewLowValue));\n            }\n            this.updateAriaAttributes();\n        }\n        return newValue;\n    }\n    /**\n     * @return {?}\n     */\n    getChangeContext() {\n        /** @type {?} */\n        const changeContext = new ChangeContext();\n        changeContext.pointerType = this.currentTrackingPointer;\n        changeContext.value = +this.value;\n        if (this.range) {\n            changeContext.highValue = +this.highValue;\n        }\n        return changeContext;\n    }\n}\nSliderComponent.ɵfac = function SliderComponent_Factory(t) { return new (t || SliderComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };\nSliderComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: SliderComponent, selectors: [[\"ngx-slider\"]], contentQueries: function SliderComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, _c0, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.tooltipTemplate = _t.first);\n    } }, viewQuery: function SliderComponent_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c1, 5, SliderElementDirective);\n        ɵngcc0.ɵɵviewQuery(_c2, 5, SliderElementDirective);\n        ɵngcc0.ɵɵviewQuery(_c3, 5, SliderElementDirective);\n        ɵngcc0.ɵɵviewQuery(_c4, 5, SliderElementDirective);\n        ɵngcc0.ɵɵviewQuery(_c5, 5, SliderHandleDirective);\n        ɵngcc0.ɵɵviewQuery(_c6, 5, SliderHandleDirective);\n        ɵngcc0.ɵɵviewQuery(_c7, 5, SliderLabelDirective);\n        ɵngcc0.ɵɵviewQuery(_c8, 5, SliderLabelDirective);\n        ɵngcc0.ɵɵviewQuery(_c9, 5, SliderLabelDirective);\n        ɵngcc0.ɵɵviewQuery(_c10, 5, SliderLabelDirective);\n        ɵngcc0.ɵɵviewQuery(_c11, 5, SliderLabelDirective);\n        ɵngcc0.ɵɵviewQuery(_c12, 5, SliderElementDirective);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.leftOuterSelectionBarElement = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.rightOuterSelectionBarElement = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.fullBarElement = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.selectionBarElement = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.minHandleElement = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.maxHandleElement = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.floorLabelElement = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.ceilLabelElement = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.minHandleLabelElement = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.maxHandleLabelElement = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.combinedLabelElement = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.ticksElement = _t.first);\n    } }, hostAttrs: [1, \"ngx-slider\"], hostVars: 8, hostBindings: function SliderComponent_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"resize\", function SliderComponent_resize_HostBindingHandler($event) { return ctx.onResize($event); }, false, ɵngcc0.ɵɵresolveWindow);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"disabled\", ctx.sliderElementDisabledAttr)(\"aria-label\", ctx.sliderElementAriaLabel);\n        ɵngcc0.ɵɵclassProp(\"vertical\", ctx.sliderElementVerticalClass)(\"animate\", ctx.sliderElementAnimateClass)(\"with-legend\", ctx.sliderElementWithLegendClass);\n    } }, inputs: { value: \"value\", highValue: \"highValue\", options: \"options\", manualRefresh: \"manualRefresh\", triggerFocus: \"triggerFocus\" }, outputs: { valueChange: \"valueChange\", highValueChange: \"highValueChange\", userChangeStart: \"userChangeStart\", userChange: \"userChange\", userChangeEnd: \"userChangeEnd\" }, features: [ɵngcc0.ɵɵProvidersFeature([NGX_SLIDER_CONTROL_VALUE_ACCESSOR]), ɵngcc0.ɵɵNgOnChangesFeature], decls: 29, vars: 13, consts: [[\"ngxSliderElement\", \"\", 1, \"ngx-slider-span\", \"ngx-slider-bar-wrapper\", \"ngx-slider-left-out-selection\"], [\"leftOuterSelectionBar\", \"\"], [1, \"ngx-slider-span\", \"ngx-slider-bar\"], [\"ngxSliderElement\", \"\", 1, \"ngx-slider-span\", \"ngx-slider-bar-wrapper\", \"ngx-slider-right-out-selection\"], [\"rightOuterSelectionBar\", \"\"], [\"ngxSliderElement\", \"\", 1, \"ngx-slider-span\", \"ngx-slider-bar-wrapper\", \"ngx-slider-full-bar\"], [\"fullBar\", \"\"], [\"ngxSliderElement\", \"\", 1, \"ngx-slider-span\", \"ngx-slider-bar-wrapper\", \"ngx-slider-selection-bar\"], [\"selectionBar\", \"\"], [1, \"ngx-slider-span\", \"ngx-slider-bar\", \"ngx-slider-selection\", 3, \"ngStyle\"], [\"ngxSliderHandle\", \"\", 1, \"ngx-slider-span\", \"ngx-slider-pointer\", \"ngx-slider-pointer-min\", 3, \"ngStyle\"], [\"minHandle\", \"\"], [\"ngxSliderHandle\", \"\", 1, \"ngx-slider-span\", \"ngx-slider-pointer\", \"ngx-slider-pointer-max\", 3, \"ngStyle\"], [\"maxHandle\", \"\"], [\"ngxSliderLabel\", \"\", 1, \"ngx-slider-span\", \"ngx-slider-bubble\", \"ngx-slider-limit\", \"ngx-slider-floor\"], [\"floorLabel\", \"\"], [\"ngxSliderLabel\", \"\", 1, \"ngx-slider-span\", \"ngx-slider-bubble\", \"ngx-slider-limit\", \"ngx-slider-ceil\"], [\"ceilLabel\", \"\"], [\"ngxSliderLabel\", \"\", 1, \"ngx-slider-span\", \"ngx-slider-bubble\", \"ngx-slider-model-value\"], [\"minHandleLabel\", \"\"], [\"ngxSliderLabel\", \"\", 1, \"ngx-slider-span\", \"ngx-slider-bubble\", \"ngx-slider-model-high\"], [\"maxHandleLabel\", \"\"], [\"ngxSliderLabel\", \"\", 1, \"ngx-slider-span\", \"ngx-slider-bubble\", \"ngx-slider-combined\"], [\"combinedLabel\", \"\"], [\"ngxSliderElement\", \"\", 1, \"ngx-slider-ticks\", 3, \"hidden\"], [\"ticksElement\", \"\"], [\"class\", \"ngx-slider-tick\", 3, \"ngClass\", \"ngStyle\", 4, \"ngFor\", \"ngForOf\"], [1, \"ngx-slider-tick\", 3, \"ngClass\", \"ngStyle\"], [3, \"template\", \"tooltip\", \"placement\"], [\"class\", \"ngx-slider-span ngx-slider-tick-value\", 3, \"template\", \"tooltip\", \"placement\", \"content\", 4, \"ngIf\"], [\"class\", \"ngx-slider-span ngx-slider-tick-legend\", 3, \"innerHTML\", 4, \"ngIf\"], [1, \"ngx-slider-span\", \"ngx-slider-tick-value\", 3, \"template\", \"tooltip\", \"placement\", \"content\"], [1, \"ngx-slider-span\", \"ngx-slider-tick-legend\", 3, \"innerHTML\"]], template: function SliderComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"span\", 0, 1);\n        ɵngcc0.ɵɵelement(2, \"span\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(3, \"span\", 3, 4);\n        ɵngcc0.ɵɵelement(5, \"span\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(6, \"span\", 5, 6);\n        ɵngcc0.ɵɵelement(8, \"span\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(9, \"span\", 7, 8);\n        ɵngcc0.ɵɵelement(11, \"span\", 9);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(12, \"span\", 10, 11)(14, \"span\", 12, 13)(16, \"span\", 14, 15)(18, \"span\", 16, 17)(20, \"span\", 18, 19)(22, \"span\", 20, 21)(24, \"span\", 22, 23);\n        ɵngcc0.ɵɵelementStart(26, \"span\", 24, 25);\n        ɵngcc0.ɵɵtemplate(28, SliderComponent_span_28_Template, 4, 9, \"span\", 26);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(6);\n        ɵngcc0.ɵɵclassProp(\"ngx-slider-transparent\", ctx.fullBarTransparentClass);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵclassProp(\"ngx-slider-draggable\", ctx.selectionBarDraggableClass);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngStyle\", ctx.barStyle);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngStyle\", ctx.minPointerStyle);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵstyleProp(\"display\", ctx.range ? \"inherit\" : \"none\");\n        ɵngcc0.ɵɵproperty(\"ngStyle\", ctx.maxPointerStyle);\n        ɵngcc0.ɵɵadvance(12);\n        ɵngcc0.ɵɵclassProp(\"ngx-slider-ticks-values-under\", ctx.ticksUnderValuesClass);\n        ɵngcc0.ɵɵproperty(\"hidden\", !ctx.showTicks);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.ticks);\n    } }, dependencies: function () { return [ɵngcc1.NgClass, ɵngcc1.NgForOf, ɵngcc1.NgIf, ɵngcc1.NgStyle, SliderElementDirective, SliderHandleDirective, SliderLabelDirective, TooltipWrapperComponent]; }, styles: [\".ngx-slider{display:inline-block;position:relative;height:4px;width:100%;margin:35px 0 15px;vertical-align:middle;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;touch-action:pan-y}  .ngx-slider.with-legend{margin-bottom:40px}  .ngx-slider[disabled]{cursor:not-allowed}  .ngx-slider[disabled] .ngx-slider-pointer{cursor:not-allowed;background-color:#d8e0f3}  .ngx-slider[disabled] .ngx-slider-draggable{cursor:not-allowed}  .ngx-slider[disabled] .ngx-slider-selection{background:#8b91a2}  .ngx-slider[disabled] .ngx-slider-tick{cursor:not-allowed}  .ngx-slider[disabled] .ngx-slider-tick.ngx-slider-selected{background:#8b91a2}  .ngx-slider .ngx-slider-span{white-space:nowrap;position:absolute;display:inline-block}  .ngx-slider .ngx-slider-base{width:100%;height:100%;padding:0}  .ngx-slider .ngx-slider-bar-wrapper{left:0;box-sizing:border-box;margin-top:-16px;padding-top:16px;width:100%;height:32px;z-index:1}  .ngx-slider .ngx-slider-draggable{cursor:move}  .ngx-slider .ngx-slider-bar{left:0;width:100%;height:4px;z-index:1;background:#d8e0f3;border-radius:2px}  .ngx-slider .ngx-slider-bar-wrapper.ngx-slider-transparent .ngx-slider-bar{background:0 0}  .ngx-slider .ngx-slider-bar-wrapper.ngx-slider-left-out-selection .ngx-slider-bar{background:#df002d}  .ngx-slider .ngx-slider-bar-wrapper.ngx-slider-right-out-selection .ngx-slider-bar{background:#03a688}  .ngx-slider .ngx-slider-selection{z-index:2;background:#0db9f0;border-radius:2px}  .ngx-slider .ngx-slider-pointer{cursor:pointer;width:32px;height:32px;top:-14px;background-color:#0db9f0;z-index:3;border-radius:16px}  .ngx-slider .ngx-slider-pointer:after{content:'';width:8px;height:8px;position:absolute;top:12px;left:12px;border-radius:4px;background:#fff}  .ngx-slider .ngx-slider-pointer:hover:after{background-color:#fff}  .ngx-slider .ngx-slider-pointer.ngx-slider-active{z-index:4}  .ngx-slider .ngx-slider-pointer.ngx-slider-active:after{background-color:#451aff}  .ngx-slider .ngx-slider-bubble{cursor:default;bottom:16px;padding:1px 3px;color:#55637d;font-size:16px}  .ngx-slider .ngx-slider-bubble.ngx-slider-limit{color:#55637d}  .ngx-slider .ngx-slider-ticks{box-sizing:border-box;width:100%;height:0;position:absolute;left:0;top:-3px;margin:0;z-index:1;list-style:none}  .ngx-slider .ngx-slider-ticks-values-under .ngx-slider-tick-value{top:auto;bottom:-36px}  .ngx-slider .ngx-slider-tick{text-align:center;cursor:pointer;width:10px;height:10px;background:#d8e0f3;border-radius:50%;position:absolute;top:0;left:0;margin-left:11px}  .ngx-slider .ngx-slider-tick.ngx-slider-selected{background:#0db9f0}  .ngx-slider .ngx-slider-tick-value{position:absolute;top:-34px;-webkit-transform:translate(-50%,0);transform:translate(-50%,0)}  .ngx-slider .ngx-slider-tick-legend{position:absolute;top:24px;-webkit-transform:translate(-50%,0);transform:translate(-50%,0);max-width:50px;white-space:normal}  .ngx-slider.vertical{position:relative;width:4px;height:100%;margin:0 20px;padding:0;vertical-align:baseline;touch-action:pan-x}  .ngx-slider.vertical .ngx-slider-base{width:100%;height:100%;padding:0}  .ngx-slider.vertical .ngx-slider-bar-wrapper{top:auto;left:0;margin:0 0 0 -16px;padding:0 0 0 16px;height:100%;width:32px}  .ngx-slider.vertical .ngx-slider-bar{bottom:0;left:auto;width:4px;height:100%}  .ngx-slider.vertical .ngx-slider-pointer{left:-14px!important;top:auto;bottom:0}  .ngx-slider.vertical .ngx-slider-bubble{left:16px!important;bottom:0}  .ngx-slider.vertical .ngx-slider-ticks{height:100%;width:0;left:-3px;top:0;z-index:1}  .ngx-slider.vertical .ngx-slider-tick{vertical-align:middle;margin-left:auto;margin-top:11px}  .ngx-slider.vertical .ngx-slider-tick-value{left:24px;top:auto;-webkit-transform:translate(0,-28%);transform:translate(0,-28%)}  .ngx-slider.vertical .ngx-slider-tick-legend{top:auto;right:24px;-webkit-transform:translate(0,-28%);transform:translate(0,-28%);max-width:none;white-space:nowrap}  .ngx-slider.vertical .ngx-slider-ticks-values-under .ngx-slider-tick-value{bottom:auto;left:auto;right:24px}  .ngx-slider *{transition:none}  .ngx-slider.animate .ngx-slider-bar-wrapper{transition:.3s linear}  .ngx-slider.animate .ngx-slider-selection{transition:background-color .3s linear}  .ngx-slider.animate .ngx-slider-pointer{transition:.3s linear}  .ngx-slider.animate .ngx-slider-pointer:after{transition:.3s linear}  .ngx-slider.animate .ngx-slider-bubble{transition:.3s linear}  .ngx-slider.animate .ngx-slider-bubble.ngx-slider-limit{transition:opacity .3s linear}  .ngx-slider.animate .ngx-slider-bubble.ngx-slider-combined{transition:opacity .3s linear}  .ngx-slider.animate .ngx-slider-tick{transition:background-color .3s linear}\"] });\n/** @nocollapse */\nSliderComponent.ctorParameters = () => [\n    { type: Renderer2 },\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: NgZone }\n];\nSliderComponent.propDecorators = {\n    value: [{ type: Input }],\n    valueChange: [{ type: Output }],\n    highValue: [{ type: Input }],\n    highValueChange: [{ type: Output }],\n    options: [{ type: Input }],\n    userChangeStart: [{ type: Output }],\n    userChange: [{ type: Output }],\n    userChangeEnd: [{ type: Output }],\n    manualRefresh: [{ type: Input }],\n    triggerFocus: [{ type: Input }],\n    leftOuterSelectionBarElement: [{ type: ViewChild, args: ['leftOuterSelectionBar', { read: SliderElementDirective },] }],\n    rightOuterSelectionBarElement: [{ type: ViewChild, args: ['rightOuterSelectionBar', { read: SliderElementDirective },] }],\n    fullBarElement: [{ type: ViewChild, args: ['fullBar', { read: SliderElementDirective },] }],\n    selectionBarElement: [{ type: ViewChild, args: ['selectionBar', { read: SliderElementDirective },] }],\n    minHandleElement: [{ type: ViewChild, args: ['minHandle', { read: SliderHandleDirective },] }],\n    maxHandleElement: [{ type: ViewChild, args: ['maxHandle', { read: SliderHandleDirective },] }],\n    floorLabelElement: [{ type: ViewChild, args: ['floorLabel', { read: SliderLabelDirective },] }],\n    ceilLabelElement: [{ type: ViewChild, args: ['ceilLabel', { read: SliderLabelDirective },] }],\n    minHandleLabelElement: [{ type: ViewChild, args: ['minHandleLabel', { read: SliderLabelDirective },] }],\n    maxHandleLabelElement: [{ type: ViewChild, args: ['maxHandleLabel', { read: SliderLabelDirective },] }],\n    combinedLabelElement: [{ type: ViewChild, args: ['combinedLabel', { read: SliderLabelDirective },] }],\n    ticksElement: [{ type: ViewChild, args: ['ticksElement', { read: SliderElementDirective },] }],\n    tooltipTemplate: [{ type: ContentChild, args: ['tooltipTemplate',] }],\n    sliderElementVerticalClass: [{ type: HostBinding, args: ['class.vertical',] }],\n    sliderElementAnimateClass: [{ type: HostBinding, args: ['class.animate',] }],\n    sliderElementWithLegendClass: [{ type: HostBinding, args: ['class.with-legend',] }],\n    sliderElementDisabledAttr: [{ type: HostBinding, args: ['attr.disabled',] }],\n    sliderElementAriaLabel: [{ type: HostBinding, args: ['attr.aria-label',] }],\n    onResize: [{ type: HostListener, args: ['window:resize', ['$event'],] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SliderComponent, [{\n        type: Component,\n        args: [{ selector: 'ngx-slider', template: `<!-- // 0 Left selection bar outside two handles -->\n<span ngxSliderElement #leftOuterSelectionBar class=\"ngx-slider-span ngx-slider-bar-wrapper ngx-slider-left-out-selection\">\n  <span class=\"ngx-slider-span ngx-slider-bar\"></span>\n</span>\n<!-- // 1 Right selection bar outside two handles -->\n<span ngxSliderElement #rightOuterSelectionBar class=\"ngx-slider-span ngx-slider-bar-wrapper ngx-slider-right-out-selection\">\n  <span class=\"ngx-slider-span ngx-slider-bar\"></span>\n</span>\n<!-- // 2 The whole slider bar -->\n<span ngxSliderElement #fullBar [class.ngx-slider-transparent]=\"fullBarTransparentClass\" class=\"ngx-slider-span ngx-slider-bar-wrapper ngx-slider-full-bar\">\n  <span class=\"ngx-slider-span ngx-slider-bar\"></span>\n</span>\n<!-- // 3 Selection bar between two handles -->\n<span ngxSliderElement #selectionBar [class.ngx-slider-draggable]=\"selectionBarDraggableClass\" class=\"ngx-slider-span ngx-slider-bar-wrapper ngx-slider-selection-bar\">\n  <span class=\"ngx-slider-span ngx-slider-bar ngx-slider-selection\" [ngStyle]=\"barStyle\"></span>\n</span>\n<!-- // 4 Low slider handle -->\n<span ngxSliderHandle #minHandle class=\"ngx-slider-span ngx-slider-pointer ngx-slider-pointer-min\" [ngStyle]=minPointerStyle></span>\n<!-- // 5 High slider handle -->\n<span ngxSliderHandle #maxHandle [style.display]=\"range ? 'inherit' : 'none'\" class=\"ngx-slider-span ngx-slider-pointer ngx-slider-pointer-max\" [ngStyle]=maxPointerStyle></span>\n<!-- // 6 Floor label -->\n<span ngxSliderLabel #floorLabel class=\"ngx-slider-span ngx-slider-bubble ngx-slider-limit ngx-slider-floor\"></span>\n<!-- // 7 Ceiling label -->\n<span ngxSliderLabel #ceilLabel class=\"ngx-slider-span ngx-slider-bubble ngx-slider-limit ngx-slider-ceil\"></span>\n<!-- // 8 Label above the low slider handle -->\n<span ngxSliderLabel #minHandleLabel class=\"ngx-slider-span ngx-slider-bubble ngx-slider-model-value\"></span>\n<!-- // 9 Label above the high slider handle -->\n<span ngxSliderLabel #maxHandleLabel class=\"ngx-slider-span ngx-slider-bubble ngx-slider-model-high\"></span>\n<!-- // 10 Combined range label when the slider handles are close ex. 15 - 17 -->\n<span ngxSliderLabel #combinedLabel class=\"ngx-slider-span ngx-slider-bubble ngx-slider-combined\"></span>\n<!-- // 11 The ticks -->\n<span ngxSliderElement #ticksElement [hidden]=\"!showTicks\" [class.ngx-slider-ticks-values-under]=\"ticksUnderValuesClass\" class=\"ngx-slider-ticks\">\n  <span *ngFor=\"let t of ticks\" class=\"ngx-slider-tick\" [ngClass]=\"{'ngx-slider-selected': t.selected}\" [ngStyle]=\"t.style\">\n    <ngx-slider-tooltip-wrapper [template]=\"tooltipTemplate\" [tooltip]=\"t.tooltip\" [placement]=\"t.tooltipPlacement\"></ngx-slider-tooltip-wrapper>\n    <ngx-slider-tooltip-wrapper *ngIf=\"t.value != null\" class=\"ngx-slider-span ngx-slider-tick-value\"\n        [template]=\"tooltipTemplate\" [tooltip]=\"t.valueTooltip\" [placement]=\"t.valueTooltipPlacement\" [content]=\"t.value\"></ngx-slider-tooltip-wrapper>\n    <span *ngIf=\"t.legend != null\" class=\"ngx-slider-span ngx-slider-tick-legend\" [innerHTML]=\"t.legend\"></span>\n  </span>\n</span>`, host: { class: 'ngx-slider' }, providers: [NGX_SLIDER_CONTROL_VALUE_ACCESSOR], styles: [\"::ng-deep .ngx-slider{display:inline-block;position:relative;height:4px;width:100%;margin:35px 0 15px;vertical-align:middle;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;touch-action:pan-y}::ng-deep .ngx-slider.with-legend{margin-bottom:40px}::ng-deep .ngx-slider[disabled]{cursor:not-allowed}::ng-deep .ngx-slider[disabled] .ngx-slider-pointer{cursor:not-allowed;background-color:#d8e0f3}::ng-deep .ngx-slider[disabled] .ngx-slider-draggable{cursor:not-allowed}::ng-deep .ngx-slider[disabled] .ngx-slider-selection{background:#8b91a2}::ng-deep .ngx-slider[disabled] .ngx-slider-tick{cursor:not-allowed}::ng-deep .ngx-slider[disabled] .ngx-slider-tick.ngx-slider-selected{background:#8b91a2}::ng-deep .ngx-slider .ngx-slider-span{white-space:nowrap;position:absolute;display:inline-block}::ng-deep .ngx-slider .ngx-slider-base{width:100%;height:100%;padding:0}::ng-deep .ngx-slider .ngx-slider-bar-wrapper{left:0;box-sizing:border-box;margin-top:-16px;padding-top:16px;width:100%;height:32px;z-index:1}::ng-deep .ngx-slider .ngx-slider-draggable{cursor:move}::ng-deep .ngx-slider .ngx-slider-bar{left:0;width:100%;height:4px;z-index:1;background:#d8e0f3;border-radius:2px}::ng-deep .ngx-slider .ngx-slider-bar-wrapper.ngx-slider-transparent .ngx-slider-bar{background:0 0}::ng-deep .ngx-slider .ngx-slider-bar-wrapper.ngx-slider-left-out-selection .ngx-slider-bar{background:#df002d}::ng-deep .ngx-slider .ngx-slider-bar-wrapper.ngx-slider-right-out-selection .ngx-slider-bar{background:#03a688}::ng-deep .ngx-slider .ngx-slider-selection{z-index:2;background:#0db9f0;border-radius:2px}::ng-deep .ngx-slider .ngx-slider-pointer{cursor:pointer;width:32px;height:32px;top:-14px;background-color:#0db9f0;z-index:3;border-radius:16px}::ng-deep .ngx-slider .ngx-slider-pointer:after{content:'';width:8px;height:8px;position:absolute;top:12px;left:12px;border-radius:4px;background:#fff}::ng-deep .ngx-slider .ngx-slider-pointer:hover:after{background-color:#fff}::ng-deep .ngx-slider .ngx-slider-pointer.ngx-slider-active{z-index:4}::ng-deep .ngx-slider .ngx-slider-pointer.ngx-slider-active:after{background-color:#451aff}::ng-deep .ngx-slider .ngx-slider-bubble{cursor:default;bottom:16px;padding:1px 3px;color:#55637d;font-size:16px}::ng-deep .ngx-slider .ngx-slider-bubble.ngx-slider-limit{color:#55637d}::ng-deep .ngx-slider .ngx-slider-ticks{box-sizing:border-box;width:100%;height:0;position:absolute;left:0;top:-3px;margin:0;z-index:1;list-style:none}::ng-deep .ngx-slider .ngx-slider-ticks-values-under .ngx-slider-tick-value{top:auto;bottom:-36px}::ng-deep .ngx-slider .ngx-slider-tick{text-align:center;cursor:pointer;width:10px;height:10px;background:#d8e0f3;border-radius:50%;position:absolute;top:0;left:0;margin-left:11px}::ng-deep .ngx-slider .ngx-slider-tick.ngx-slider-selected{background:#0db9f0}::ng-deep .ngx-slider .ngx-slider-tick-value{position:absolute;top:-34px;-webkit-transform:translate(-50%,0);transform:translate(-50%,0)}::ng-deep .ngx-slider .ngx-slider-tick-legend{position:absolute;top:24px;-webkit-transform:translate(-50%,0);transform:translate(-50%,0);max-width:50px;white-space:normal}::ng-deep .ngx-slider.vertical{position:relative;width:4px;height:100%;margin:0 20px;padding:0;vertical-align:baseline;touch-action:pan-x}::ng-deep .ngx-slider.vertical .ngx-slider-base{width:100%;height:100%;padding:0}::ng-deep .ngx-slider.vertical .ngx-slider-bar-wrapper{top:auto;left:0;margin:0 0 0 -16px;padding:0 0 0 16px;height:100%;width:32px}::ng-deep .ngx-slider.vertical .ngx-slider-bar{bottom:0;left:auto;width:4px;height:100%}::ng-deep .ngx-slider.vertical .ngx-slider-pointer{left:-14px!important;top:auto;bottom:0}::ng-deep .ngx-slider.vertical .ngx-slider-bubble{left:16px!important;bottom:0}::ng-deep .ngx-slider.vertical .ngx-slider-ticks{height:100%;width:0;left:-3px;top:0;z-index:1}::ng-deep .ngx-slider.vertical .ngx-slider-tick{vertical-align:middle;margin-left:auto;margin-top:11px}::ng-deep .ngx-slider.vertical .ngx-slider-tick-value{left:24px;top:auto;-webkit-transform:translate(0,-28%);transform:translate(0,-28%)}::ng-deep .ngx-slider.vertical .ngx-slider-tick-legend{top:auto;right:24px;-webkit-transform:translate(0,-28%);transform:translate(0,-28%);max-width:none;white-space:nowrap}::ng-deep .ngx-slider.vertical .ngx-slider-ticks-values-under .ngx-slider-tick-value{bottom:auto;left:auto;right:24px}::ng-deep .ngx-slider *{transition:none}::ng-deep .ngx-slider.animate .ngx-slider-bar-wrapper{transition:.3s linear}::ng-deep .ngx-slider.animate .ngx-slider-selection{transition:background-color .3s linear}::ng-deep .ngx-slider.animate .ngx-slider-pointer{transition:.3s linear}::ng-deep .ngx-slider.animate .ngx-slider-pointer:after{transition:.3s linear}::ng-deep .ngx-slider.animate .ngx-slider-bubble{transition:.3s linear}::ng-deep .ngx-slider.animate .ngx-slider-bubble.ngx-slider-limit{transition:opacity .3s linear}::ng-deep .ngx-slider.animate .ngx-slider-bubble.ngx-slider-combined{transition:opacity .3s linear}::ng-deep .ngx-slider.animate .ngx-slider-tick{transition:background-color .3s linear}\"] }]\n    }], function () { return [{ type: ɵngcc0.Renderer2 }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.NgZone }]; }, { value: [{\n            type: Input\n        }], valueChange: [{\n            type: Output\n        }], highValue: [{\n            type: Input\n        }], highValueChange: [{\n            type: Output\n        }], options: [{\n            type: Input\n        }], userChangeStart: [{\n            type: Output\n        }], userChange: [{\n            type: Output\n        }], userChangeEnd: [{\n            type: Output\n        }], sliderElementVerticalClass: [{\n            type: HostBinding,\n            args: ['class.vertical']\n        }], sliderElementAnimateClass: [{\n            type: HostBinding,\n            args: ['class.animate']\n        }], sliderElementWithLegendClass: [{\n            type: HostBinding,\n            args: ['class.with-legend']\n        }], sliderElementDisabledAttr: [{\n            type: HostBinding,\n            args: ['attr.disabled']\n        }], sliderElementAriaLabel: [{\n            type: HostBinding,\n            args: ['attr.aria-label']\n        }], manualRefresh: [{\n            type: Input\n        }], triggerFocus: [{\n            type: Input\n        }], \n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onResize: [{\n            type: HostListener,\n            args: ['window:resize', ['$event']]\n        }], leftOuterSelectionBarElement: [{\n            type: ViewChild,\n            args: ['leftOuterSelectionBar', { read: SliderElementDirective }]\n        }], rightOuterSelectionBarElement: [{\n            type: ViewChild,\n            args: ['rightOuterSelectionBar', { read: SliderElementDirective }]\n        }], fullBarElement: [{\n            type: ViewChild,\n            args: ['fullBar', { read: SliderElementDirective }]\n        }], selectionBarElement: [{\n            type: ViewChild,\n            args: ['selectionBar', { read: SliderElementDirective }]\n        }], minHandleElement: [{\n            type: ViewChild,\n            args: ['minHandle', { read: SliderHandleDirective }]\n        }], maxHandleElement: [{\n            type: ViewChild,\n            args: ['maxHandle', { read: SliderHandleDirective }]\n        }], floorLabelElement: [{\n            type: ViewChild,\n            args: ['floorLabel', { read: SliderLabelDirective }]\n        }], ceilLabelElement: [{\n            type: ViewChild,\n            args: ['ceilLabel', { read: SliderLabelDirective }]\n        }], minHandleLabelElement: [{\n            type: ViewChild,\n            args: ['minHandleLabel', { read: SliderLabelDirective }]\n        }], maxHandleLabelElement: [{\n            type: ViewChild,\n            args: ['maxHandleLabel', { read: SliderLabelDirective }]\n        }], combinedLabelElement: [{\n            type: ViewChild,\n            args: ['combinedLabel', { read: SliderLabelDirective }]\n        }], ticksElement: [{\n            type: ViewChild,\n            args: ['ticksElement', { read: SliderElementDirective }]\n        }], tooltipTemplate: [{\n            type: ContentChild,\n            args: ['tooltipTemplate']\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nclass TooltipWrapperComponent {\n}\nTooltipWrapperComponent.ɵfac = function TooltipWrapperComponent_Factory(t) { return new (t || TooltipWrapperComponent)(); };\nTooltipWrapperComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: TooltipWrapperComponent, selectors: [[\"ngx-slider-tooltip-wrapper\"]], inputs: { template: \"template\", tooltip: \"tooltip\", placement: \"placement\", content: \"content\" }, decls: 2, vars: 2, consts: [[4, \"ngIf\"], [4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [1, \"ngx-slider-inner-tooltip\"]], template: function TooltipWrapperComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, TooltipWrapperComponent_ng_container_0_Template, 2, 6, \"ng-container\", 0);\n        ɵngcc0.ɵɵtemplate(1, TooltipWrapperComponent_ng_container_1_Template, 3, 3, \"ng-container\", 0);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.template);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.template);\n    } }, dependencies: [ɵngcc1.NgIf, ɵngcc1.NgTemplateOutlet], styles: [\".ngx-slider-inner-tooltip[_ngcontent-%COMP%]{height:100%}\"] });\nTooltipWrapperComponent.propDecorators = {\n    template: [{ type: Input }],\n    tooltip: [{ type: Input }],\n    placement: [{ type: Input }],\n    content: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TooltipWrapperComponent, [{\n        type: Component,\n        args: [{ selector: 'ngx-slider-tooltip-wrapper', template: `<ng-container *ngIf=\"template\">\n  <ng-template *ngTemplateOutlet=\"template; context: {tooltip: tooltip, placement: placement, content: content}\"></ng-template>\n</ng-container>\n\n<ng-container *ngIf=\"!template\">\n  <div class=\"ngx-slider-inner-tooltip\" [attr.title]=\"tooltip\" [attr.data-tooltip-placement]=\"placement\">\n    {{content}}\n  </div>\n</ng-container>`, styles: [\".ngx-slider-inner-tooltip{height:100%}\"] }]\n    }], null, { template: [{\n            type: Input\n        }], tooltip: [{\n            type: Input\n        }], placement: [{\n            type: Input\n        }], content: [{\n            type: Input\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * NgxSlider module\n *\n * The module exports the slider component\n */\nclass NgxSliderModule {\n}\nNgxSliderModule.ɵfac = function NgxSliderModule_Factory(t) { return new (t || NgxSliderModule)(); };\nNgxSliderModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: NgxSliderModule });\nNgxSliderModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [CommonModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgxSliderModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule\n                ],\n                declarations: [\n                    SliderComponent,\n                    SliderElementDirective,\n                    SliderHandleDirective,\n                    SliderLabelDirective,\n                    TooltipWrapperComponent\n                ],\n                exports: [\n                    SliderComponent\n                ]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgxSliderModule, { declarations: function () { return [SliderComponent, SliderElementDirective, SliderHandleDirective, SliderLabelDirective, TooltipWrapperComponent]; }, imports: function () { return [CommonModule]; }, exports: function () { return [SliderComponent]; } }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\nexport { NgxSliderModule, ChangeContext, PointerType, LabelType, Options, SliderElementDirective as ɵb, SliderHandleDirective as ɵc, SliderLabelDirective as ɵd, SliderComponent as ɵa, TooltipWrapperComponent as ɵe };\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}